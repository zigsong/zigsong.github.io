{"version":3,"file":"component---src-pages-404-js-36073bfdca563509f48c.js","mappings":"yMAaA,MAAMA,EAAM,SAAAC,GAAkD,IAAzC,YAAEC,EAAW,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,GAAOJ,EACzD,MAAM,KAAEK,IAASC,EAAAA,EAAAA,gBAAe,eAe1B,KAAEC,IAASC,EAAAA,EAAAA,MAEXC,EAAkBR,GAAeI,EAAKK,aAAaT,YAEzD,OACEU,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdN,KAAMA,GAAQF,EAAKK,aAAaH,MAElCH,MAAOA,EACPU,cAAgB,QAAOT,EAAKK,aAAaN,QACzCF,KAAM,CACJ,CACEa,KAAO,cACPC,QAASP,GAEX,CACEQ,SAAW,WACXD,QAASZ,GAEX,CACEa,SAAW,iBACXD,QAASP,GAEX,CACEQ,SAAW,UACXD,QAAU,WAEZ,CACED,KAAO,eACPC,QAAU,WAEZ,CACED,KAAO,kBACPC,QAASX,EAAKK,aAAaQ,QAE7B,CACEH,KAAO,gBACPC,QAASZ,GAEX,CACEW,KAAO,sBACPC,QAASP,IAGVU,OACChB,EAASiB,OAAS,EACd,CACEL,KAAO,WACPC,QAASb,EAASkB,KAAM,OAE1B,IAELF,OAAOjB,IAGhB,EASAH,EAAIuB,aAAe,CACjBpB,KAAM,GACNC,SAAU,GACVF,YAAa,IAGf,O,yEC3EA,UAjBqB,SAAAD,GAA+B,IAArB,KAAEuB,EAAI,SAAEC,GAAUxB,EAC/C,MAAMyB,EAAYF,EAAKlB,KAAKK,aAAaN,MAEzC,OACEO,EAAAA,cAACe,EAAAA,EAAM,CAACF,SAAUA,EAAUpB,MAAOqB,GACjCd,EAAAA,cAACZ,EAAAA,EAAG,CAACK,OAAOuB,EAAAA,EAAAA,GAAc,eAC1BhB,EAAAA,cAAA,WAAKgB,EAAAA,EAAAA,GAAc,cACnBhB,EAAAA,cAAA,UAAIgB,EAAAA,EAAAA,GAAc,gBAGxB,C","sources":["webpack://gatsby-simple-blog/./src/components/SEO/SEO.js","webpack://gatsby-simple-blog/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useLang } from 'context/LanguageContext';\n\nconst SEO = function({ description, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            lang\n          }\n        }\n      }\n    `,\n  );\n\n  const { lang } = useLang();\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: lang || site.siteMetadata.lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nSEO.defaultProps = {\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport { formatMessage } from '../utils/i18n';\n\nconst NotFoundPage = function ({ data, location }) {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={formatMessage('t404Title')} />\n      <h1>{formatMessage('t404Title')}</h1>\n      <p>{formatMessage('t404Content')}</p>\n    </Layout>\n  );\n};\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["SEO","_ref","description","meta","keywords","title","site","useStaticQuery","lang","useLang","metaDescription","siteMetadata","React","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","data","location","siteTitle","Layout","formatMessage"],"sourceRoot":""}