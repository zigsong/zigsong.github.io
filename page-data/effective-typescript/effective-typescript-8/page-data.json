{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-typescript/effective-typescript-8/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"bd0c7c33-c9f4-50f9-a2b0-68e3e7aefc74","excerpt":"타입스크립트로 마이그레이션하기 아이템 58: 모던 자바스크립트로 작성하기 타입스크립트의 컴파일러를 자바스크립트의 ‘트랜스파일러’로 사용 타입스크립트는 자바스크립트의 상위집합이므로 타입스크립트를 자바스크립트로 컴파일할 수 있다 ECMAScript 모듈 사용하기 ES201…","html":"<p>타입스크립트로 마이그레이션하기</p>\n<!-- more -->\n<hr>\n<h2 id=\"아이템-58-모던-자바스크립트로-작성하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-58-%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"아이템 58 모던 자바스크립트로 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 58: 모던 자바스크립트로 작성하기</h2>\n<ul>\n<li>\n<p>타입스크립트의 컴파일러를 자바스크립트의 ‘트랜스파일러’로 사용</p>\n<ul>\n<li>타입스크립트는 자바스크립트의 상위집합이므로 타입스크립트를 자바스크립트로 컴파일할 수 있다</li>\n</ul>\n</li>\n<li>\n<p>ECMAScript 모듈 사용하기</p>\n<ul>\n<li>ES2015에 등장한 <code class=\"language-text\">import</code>와 <code class=\"language-text\">export</code> 를 사용하는 모듈이 표준이 되었다</li>\n</ul>\n</li>\n<li>\n<p>프로토타입 대신 클래스 사용하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  first<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  last<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>first<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> last<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>first <span class=\"token operator\">=</span> first<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>last <span class=\"token operator\">=</span> last<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> marie <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Marie\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Curie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> personName <span class=\"token operator\">=</span> marie<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">var</code> 대신 <code class=\"language-text\">let</code> / <code class=\"language-text\">const</code> 사용하기</p>\n<ul>\n<li>스코프 문제 피하기</li>\n<li>함수 선언문 대신 함수 표현식을 사용하여 호이스팅 문제 피하기</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">for(;;)</code> 대신 <code class=\"language-text\">for-of</code> 또는 배열 메서드 사용하기</p>\n<ul>\n<li><code class=\"language-text\">for-of</code> 루프는 코드가 짧고 인덱스 변수를 사용하지 않아 실수를 줄일 수 있다</li>\n<li>인덱스 변수가 필요한 경우엔 <code class=\"language-text\">forEach</code> 메서드 사용 권장</li>\n</ul>\n</li>\n<li>\n<p>함수 표현식보다 화살표 함수 사용하기</p>\n<ul>\n<li>상위 스코프의 <code class=\"language-text\">this</code>를 유지할 수 있다</li>\n<li>코드를 더 직관적이고 간결하게 작성할 수 있다</li>\n</ul>\n</li>\n<li>\n<p>단축 객체 표현과 구조 분해 할당 사용하기</p>\n<ul>\n<li>\n<p>변수와 객체 속성의 이름이 같은 경우</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pt <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>객체 속성 중 함수를 축약해서 표현하는 방법</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onClickLong</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onClickCompact</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>객체 구조 분해</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>함수 매개변수 기본값 사용하기</p>\n<ul>\n<li>기본값을 기반으로 타입 추론이 가능하기 때문에, 타입스크립트로 마이그레이션 시 매개변수에 타입 구문을 쓰지 않아도 된다</li>\n</ul>\n</li>\n<li>\n<p>저수준 프로미스나 콜백 대신 <code class=\"language-text\">async / await</code> 사용하기</p>\n<ul>\n<li>버그나 실수를 방지할 수 있고, 비동기 코드에 타입 정보가 전달되어 타입 추론을 가능하게 한다</li>\n</ul>\n</li>\n<li>\n<p>연관 배열에 객체 대신 <code class=\"language-text\">Map</code>과 <code class=\"language-text\">Set</code> 사용하기</p>\n<ul>\n<li>\n<p>인덱스 시그니처 사용 시</p>\n<ul>\n<li><code class=\"language-text\">constructor</code> 등의 특정 문자열이 주어지는 경우 예약어로 인식하는 문제</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Map</code> 사용하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">countWordsMap</span><span class=\"token punctuation\">(</span>text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> counts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> word <span class=\"token keyword\">of</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s,.]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    counts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>counts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> counts<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>타입스크립트에 <code class=\"language-text\">use strict</code> 넣지 않기</p>\n<ul>\n<li>타입스크립트는 기본적으로 <code class=\"language-text\">'use strict'</code>를 사용</li>\n<li><code class=\"language-text\">alwaysStrict</code> 또는 <code class=\"language-text\">strict</code> 컴파일러 옵션 설정 권장</li>\n</ul>\n</li>\n<li>\n<p>TC39나 타입스크립트 릴리즈 노트를 통해 최신 기능 확인 가능</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-59-타입스크립트-도입-전에-ts-check와-jsdoc으로-시험해-보기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-59-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%8F%84%EC%9E%85-%EC%A0%84%EC%97%90-ts-check%EC%99%80-jsdoc%EC%9C%BC%EB%A1%9C-%EC%8B%9C%ED%97%98%ED%95%B4-%EB%B3%B4%EA%B8%B0\" aria-label=\"아이템 59 타입스크립트 도입 전에 ts check와 jsdoc으로 시험해 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 59: 타입스크립트 도입 전에 @ts-check와 JSDoc으로 시험해 보기</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">@ts-check</code> 지시자를 사용하여 타입 체커가 파일을 분석하고, 발견된 오류를 보고하도록 지시할 수 있다</p>\n<ul>\n<li>매우 느슨한 수준으로 타입 체크를 수행한다</li>\n<li>타입 불일치나 함수의 매개변수 개수 불일치 등</li>\n</ul>\n</li>\n<li>\n<p>선언되지 않은 전역 변수</p>\n<ul>\n<li>\n<p>숨어 있는 변수라면 변수를 제대로 인식할 수 있게 별도로 타입 선언 파일을 만들기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// @ts-check</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// types.d.ts</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserData</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  lastName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> user<span class=\"token operator\">:</span> UserData<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>선언 파일을 찾지 못하는 경우 ‘트리플 슬래시’ 참조를 사용하여 명시적으로 임포트</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// @ts-check</span>\n<span class=\"token comment\">/// &lt;reference path=\"./types.d.ts\" /></span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 정상</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>알 수 없는 라이브러리</p>\n<ul>\n<li>서드파티 라이브러리의 타입 정보\n<ul>\n<li><code class=\"language-text\">@types/xxx</code> 설치하기</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>DOM 문제</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// @ts-check</span>\n<span class=\"token keyword\">const</span> ageEl <span class=\"token operator\">=</span> <span class=\"token comment\">/** @type {HTMLInputElement} */</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nageEl<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"12\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 정상</span></code></pre></div>\n</li>\n<li>\n<p>부정확한 JSDoc</p>\n<ul>\n<li>\n<p>타입스크립트 언어 서비스는 타입을 추론해서 JSDoc을 자동으로 생성해 준다</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// @ts-check</span>\n<span class=\"token comment\">/**\n * @param {number} val\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">double</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> val<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-60-allowjs로-타입스크립트와-자바스크립트-같이-사용하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-60-allowjs%EB%A1%9C-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%99%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%99%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"아이템 60 allowjs로 타입스크립트와 자바스크립트 같이 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 60: allowJS로 타입스크립트와 자바스크립트 같이 사용하기</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">allowJS</code> 옵션</p>\n<ul>\n<li>타입 체크와 관련이 없지만, 기존 빌드 과정에 타입스크립트 컴파일러를 추가하기 위함</li>\n<li>모듈 단위로 타입스크립트로 전환하는 과정에서 테스트를 수행하기 위함</li>\n</ul>\n</li>\n<li>\n<p>프레임워크 없이 빌드 체인 직접 구성하기</p>\n<ul>\n<li><code class=\"language-text\">outDir</code> 옵션 사용하기</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-61-의존성-관계에-따라-모듈-단위로-전환하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-61-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EA%B3%84%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%AA%A8%EB%93%88-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"아이템 61 의존성 관계에 따라 모듈 단위로 전환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 61: 의존성 관계에 따라 모듈 단위로 전환하기</h2>\n<ul>\n<li>\n<p>의존성 관련 오류 없이 작업하려면, 다른 모듈에 의존하지 않는 최하단 모듈부터 작업을 시작해서 의존성의 최상단에 있는 모듈을 마지막으로 완성해야 한다</p>\n<ul>\n<li>서드파티 라이브러리 타입 정보를 가장 먼저 해결 (<code class=\"language-text\">@types/</code>)</li>\n<li>외부 API의 타입 정보 추가</li>\n</ul>\n</li>\n<li>\n<p>리팩터링은 타입스크립트 전환 작업이 완료된 후에 해야 한다</p>\n</li>\n<li>\n<p>선언되지 않은 클래스 멤버</p>\n<p>→ ‘누락된 모든 멤버 추가’ 빠른 수정</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token punctuation\">{</span>\n  greeting<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 직접 수정 필요</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>greeting <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>greeting <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>타입이 바뀌는 값</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nstate<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"New York\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 🚨 '{}' 유형에 'name' 속성이 없습니다</span>\nstate<span class=\"token punctuation\">.</span>capital <span class=\"token operator\">=</span> <span class=\"token string\">\"Albany\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 🚨 '{}' 유형에 'capital' 속성이 없습니다</span></code></pre></div>\n<p>→ 한번에 객체 생성 또는 타입 단언문 사용하기</p>\n</li>\n<li>\n<p>자바스크립트에서 JSDoc과 <code class=\"language-text\">@ts-check</code>를 사용해 타입 정보를 추가한 상태라면, 타입스크립트로 전환하는 순간 타입 정보가 ‘무효화’된다는 점에 주의</p>\n</li>\n<li>\n<p>마지막으로 테스트 코드를 타입스크립트로 전환</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-62-마이그레이션의-완성을-위해-noimplicitany-설정하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-62-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98%EC%9D%98-%EC%99%84%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%B4-noimplicitany-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"아이템 62 마이그레이션의 완성을 위해 noimplicitany 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 62: 마이그레이션의 완성을 위해 noImplicitAny 설정하기</h2>\n<ul>\n<li><code class=\"language-text\">noImplicitAny</code> 설정을 통해 타입 선언과 관련된 실제 오류를 드러낼 수 있다</li>\n<li>최종적으로 가장 강력한 설정은 <code class=\"language-text\">\"srict: true\"</code></li>\n</ul>","timeToRead":6,"frontmatter":{"title":"이펙티브 타입스크립트 8장","date":"January 20, 2022","description":null,"tags":["effective-typescript"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/effective-typescript/effective-typescript-8/","previous":{"fields":{"slug":"/weekly/2022-1-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"January 29, 2022","description":"weekly-i-learned","title":"1월 4주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2022-1-week-2-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"January 20, 2022","description":"weekly-i-learned","title":"1월 2~3주차 기록","tags":["weekly"]}},"previousInSameTag":null,"nextInSameTag":{"fields":{"slug":"/effective-typescript/effective-typescript-7/","langKey":"en","directoryName":"effective-typescript"},"frontmatter":{"date":"January 15, 2022","description":null,"title":"이펙티브 타입스크립트 7장","tags":["effective-typescript"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}