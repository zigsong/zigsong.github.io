{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-typescript/effective-typescript-4/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"0f1ec797-39f7-5f7b-aac4-0005af0cb62a","excerpt":"타입 설계 아이템 28: 유효한 상태만 표현하는 타입을 지향하기 애플리케이션의 상태 표현하기 모든 상황 고려하기 어떤 값들을 포함하고 어떤 값들을 제외할지 신중하기 생각하기 아이템 29: 사용할 때는 너그럽게, 생성할 때는 엄격하게 TCP…","html":"<p>타입 설계</p>\n<!-- more -->\n<hr>\n<h2 id=\"아이템-28-유효한-상태만-표현하는-타입을-지향하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-28-%EC%9C%A0%ED%9A%A8%ED%95%9C-%EC%83%81%ED%83%9C%EB%A7%8C-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-%ED%83%80%EC%9E%85%EC%9D%84-%EC%A7%80%ED%96%A5%ED%95%98%EA%B8%B0\" aria-label=\"아이템 28 유효한 상태만 표현하는 타입을 지향하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 28: 유효한 상태만 표현하는 타입을 지향하기</h2>\n<ul>\n<li>\n<p>애플리케이션의 상태 표현하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequestPending</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token string\">\"pending\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequestError</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">;</span>\n  error<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RequestSuccess</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">;</span>\n  pageText<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">RequestState</span> <span class=\"token operator\">=</span> RequestPending <span class=\"token operator\">|</span> RequestError <span class=\"token operator\">|</span> RequestSuccess<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">{</span>\n  currentPage<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  requests<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>page<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> RequestState <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>모든 상황 고려하기</li>\n<li>어떤 값들을 포함하고 어떤 값들을 제외할지 신중하기 생각하기</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-29-사용할-때는-너그럽게-생성할-때는-엄격하게\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-29-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C%EB%8A%94-%EB%84%88%EA%B7%B8%EB%9F%BD%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%A0-%EB%95%8C%EB%8A%94-%EC%97%84%EA%B2%A9%ED%95%98%EA%B2%8C\" aria-label=\"아이템 29 사용할 때는 너그럽게 생성할 때는 엄격하게 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 29: 사용할 때는 너그럽게, 생성할 때는 엄격하게</h2>\n<ul>\n<li>\n<p>TCP 구현체의 견고성 원칙 또는 포스텔의 법칙</p>\n<p>→ 함수의 시그니처에도 적용</p>\n<ul>\n<li>함수의 매개변수는 타입의 범위가 넓어도 되지만,\n결과를 반환할 때는 일반적으로 타입의 범위가 더 구체적이어야 한다</li>\n</ul>\n</li>\n<li>\n<p>👎 bad case</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setCamera</span><span class=\"token punctuation\">(</span>camera<span class=\"token operator\">:</span> CameraOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">viewportForBounds</span><span class=\"token punctuation\">(</span>bounds<span class=\"token operator\">:</span> LngLatBounds<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> CameraOptions<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CameraOptions</span> <span class=\"token punctuation\">{</span>\n  center<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LngLat<span class=\"token punctuation\">;</span>\n  zoom<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  bearing<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  pitch<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">LngLat</span> <span class=\"token operator\">=</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> lng<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> lat<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> lon<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> lat<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>👍 good case</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">LngLat</span> <span class=\"token punctuation\">{</span>\n  lng<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  lat<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">LngLatLike</span> <span class=\"token operator\">=</span> LngLat <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> lon<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> lat<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Camera</span> <span class=\"token punctuation\">{</span>\n  center<span class=\"token operator\">:</span> LngLat<span class=\"token punctuation\">;</span>\n  zoom<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  bearing<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  pitch<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CameraOptions</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Omit<span class=\"token operator\">&lt;</span>Partial<span class=\"token operator\">&lt;</span>Camera<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"center\"</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  center<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LngLatLike<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">LngLatBounds</span> <span class=\"token operator\">=</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> northeast<span class=\"token operator\">:</span> LngLatLike<span class=\"token punctuation\">;</span> southwest<span class=\"token operator\">:</span> LngLatLike <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span>LngLatLike<span class=\"token punctuation\">,</span> LngLatLike<span class=\"token punctuation\">]</span>\n  <span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setCamera</span><span class=\"token punctuation\">(</span>camera<span class=\"token operator\">:</span> CameraOptions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">viewportForBounds</span><span class=\"token punctuation\">(</span>bounds<span class=\"token operator\">:</span> LngLatBounds<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Camera<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p>→ 매개변수와 반환 타입의 재사용을 위해서 기본 형태(반환 타입)와 느슨한 형태(매개변수 타입)를 도입하자</p>\n<hr>\n<h2 id=\"아이템-30-문서에-타입-정보를-쓰지-않기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-30-%EB%AC%B8%EC%84%9C%EC%97%90-%ED%83%80%EC%9E%85-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EC%93%B0%EC%A7%80-%EC%95%8A%EA%B8%B0\" aria-label=\"아이템 30 문서에 타입 정보를 쓰지 않기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 30: 문서에 타입 정보를 쓰지 않기</h2>\n<ul>\n<li>타입 구문은 타입스크립트 타입 체커가 타입 정보를 동기화하도록 강제한다</li>\n<li>함수의 입력과 출력의 타입을 코드로 표현하는 것이 주석보다 더 낫다</li>\n<li>값을 변경하지 않는다고 설명하는 주석 대신 <code class=\"language-text\">readonly</code> 로 선언하기</li>\n<li>변수명에 타입 정보 넣지 않기 (단위가 있는 숫자들은 제외)</li>\n</ul>\n<hr>\n<h2 id=\"아이템-31-타입-주변에-null-값-배치하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-31-%ED%83%80%EC%9E%85-%EC%A3%BC%EB%B3%80%EC%97%90-null-%EA%B0%92-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"아이템 31 타입 주변에 null 값 배치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 31: 타입 주변에 null 값 배치하기</h2>\n<ul>\n<li>\n<p>결함이 있는 예제</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">extent</span><span class=\"token punctuation\">(</span>nums<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> num <span class=\"token keyword\">of</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>min<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      min <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n      max <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      min <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>🚨 최솟값이나 최댓값이 0인 경우</li>\n<li>🚨 <code class=\"language-text\">nums</code> 배열이 비어있는 경우</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">min</code>과 <code class=\"language-text\">max</code>를 한 객체 안에 넣고 <code class=\"language-text\">null</code>이거나 <code class=\"language-text\">null</code>이 아니게 하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">extent</span><span class=\"token punctuation\">(</span>nums<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> num <span class=\"token keyword\">of</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">null</code>과 <code class=\"language-text\">null</code>이 아닌 값을 섞어서 클래스 만들기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">userPosts</span> <span class=\"token punctuation\">{</span>\n  user<span class=\"token operator\">:</span> UserInfo<span class=\"token punctuation\">;</span>\n  posts<span class=\"token operator\">:</span> Post<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> UserInfo<span class=\"token punctuation\">,</span> posts<span class=\"token operator\">:</span> Post<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>posts <span class=\"token operator\">=</span> posts<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>userId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>UserPosts<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> posts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">fetchPostsForUser</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserPosts</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> posts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getUserName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>한 값의 <code class=\"language-text\">null</code> 여부가 다른 <code class=\"language-text\">null</code> 여부에 암시적으로 관련되도록 설계하면 안 된다</p>\n</li>\n<li>\n<p>API 작성 시에는 반환 타입을 큰 객체로 만들고 반환 타입 전체가 <code class=\"language-text\">null</code>이거나 <code class=\"language-text\">null</code>이 아니게 만들어야 한다</p>\n</li>\n<li>\n<p>클래스를 만들 때는 필요한 모든 값이 준비되었을 때 생성하여 <code class=\"language-text\">null</code>이 존재하지 않도록 하는 것이 좋다</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-32-유니온의-인터페이스보다는-인터페이스의-유니온을-사용하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-32-%EC%9C%A0%EB%8B%88%EC%98%A8%EC%9D%98-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B3%B4%EB%8B%A4%EB%8A%94-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9D%98-%EC%9C%A0%EB%8B%88%EC%98%A8%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"아이템 32 유니온의 인터페이스보다는 인터페이스의 유니온을 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 32: 유니온의 인터페이스보다는 인터페이스의 유니온을 사용하기</h2>\n<ul>\n<li>\n<p>👎 잘못된 예시</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Layer</span> <span class=\"token punctuation\">{</span>\n  layout<span class=\"token operator\">:</span> FillLayout <span class=\"token operator\">|</span> LineLayout <span class=\"token operator\">|</span> PointLayout<span class=\"token punctuation\">;</span>\n  paint<span class=\"token operator\">:</span> FillPaint <span class=\"token operator\">|</span> LinePaint <span class=\"token operator\">|</span> PointPaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>→ 각각 타입의 계층을 <strong>분리된 인터페이스</strong>로 나누기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">FillLayer</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">;</span>\n  layout<span class=\"token operator\">:</span> FillLayout<span class=\"token punctuation\">;</span>\n  paint<span class=\"token operator\">:</span> FillPaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LineLayer</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"line\"</span><span class=\"token punctuation\">;</span>\n  layout<span class=\"token operator\">:</span> LineLayout<span class=\"token punctuation\">;</span>\n  paint<span class=\"token operator\">:</span> LinePaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PointLayer</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"point\"</span><span class=\"token punctuation\">;</span>\n  layout<span class=\"token operator\">:</span> PointLayout<span class=\"token punctuation\">;</span>\n  paint<span class=\"token operator\">:</span> PointPaint<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Layer</span> <span class=\"token operator\">=</span> FillLayer <span class=\"token operator\">|</span> LineLayer <span class=\"token operator\">|</span> PointLayer<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>태그드 유니온</strong> - 타입스크립트는 <strong>태그를 참고하여 범위를 좁힐</strong> 수 있다</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'fill'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> paint <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 FillPaint</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> layout <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> layer<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 FillLayout</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token comment\">// ...</span></code></pre></div>\n</li>\n<li>\n<p>여러 개의 선택적 필드가 동시에 값이 있거나 동시에 undefined인 경우, 두 개의 속성을 하나의 객체로 모으기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// birthPlace와 birthDate를 하나로 모음</span>\n  birth<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    place<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    date<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-33-string-타입보다-더-구체적인-타입-사용하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-33-string-%ED%83%80%EC%9E%85%EB%B3%B4%EB%8B%A4-%EB%8D%94-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%ED%83%80%EC%9E%85-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"아이템 33 string 타입보다 더 구체적인 타입 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 33: string 타입보다 더 구체적인 타입 사용하기</h2>\n<ul>\n<li>\n<p>“stringly typed”는 좋지 못한 패턴</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Album</span> <span class=\"token punctuation\">{</span>\n  artist<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  releaseDate<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  recordingType<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>타입을 제한하거나, 유니온 타입을 사용하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">RecordingType</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"studio\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"live\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Album</span> <span class=\"token punctuation\">{</span>\n  artist<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  releaseDate<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n  recordingType<span class=\"token operator\">:</span> RecordingType<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>함수의 매개변수에 string을 잘못 사용하지 않도록 주의</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span>records<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 🚨 '{}' 형식에 인덱스 시그니처가 없으므로 요소에 암시적으로 'any' 형식이 있습니다</span></code></pre></div>\n<ul>\n<li>\n<p>제네릭과 <code class=\"language-text\">keyof</code>을 사용하여 고쳐보기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">K</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">keyof</span> Album<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">pluck</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>records<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p>→ 이때 타입스크립트는 반환 타입을 추론한다</p>\n<ul>\n<li>\n<p><code class=\"language-text\">keyof T</code>로 범위 더 좁히기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">pluck</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">K</span> <span class=\"token keyword\">extends</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>records<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> records<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>결과</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span>albums<span class=\"token punctuation\">,</span> <span class=\"token string\">\"releaseDate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 Date[]</span>\n<span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span>albums<span class=\"token punctuation\">,</span> <span class=\"token string\">\"artist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 string[]</span>\n<span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span>albums<span class=\"token punctuation\">,</span> <span class=\"token string\">\"recordingType\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 RecordingType[]</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-34-부정확한-타입보다는-미완성-타입을-사용하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-34-%EB%B6%80%EC%A0%95%ED%99%95%ED%95%9C-%ED%83%80%EC%9E%85%EB%B3%B4%EB%8B%A4%EB%8A%94-%EB%AF%B8%EC%99%84%EC%84%B1-%ED%83%80%EC%9E%85%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"아이템 34 부정확한 타입보다는 미완성 타입을 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 34: 부정확한 타입보다는 미완성 타입을 사용하기</h2>\n<ul>\n<li>\n<p>코드를 더 정밀하게 만들려던 시도가 너무 과했고 그로 인해 코드가 오히려 더 부정확해지는 문제</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">;</span>\n  coordinates<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LineString</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"LineString\"</span><span class=\"token punctuation\">;</span>\n  coordinates<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Polygon</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"Polygon\"</span><span class=\"token punctuation\">;</span>\n  coordinates<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Geometry</span> <span class=\"token operator\">=</span> Point <span class=\"token operator\">|</span> LineString <span class=\"token operator\">|</span> Polygon<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다른 것들도 추가될 수 있다</span></code></pre></div>\n</li>\n<li>\n<p>아래와 같이 구체화하는 경우 GeoJSON의 위치정보에는 추가 정보가 들어갈 수 없게 된다</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">GeoPosition</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">;</span>\n  coordinates<span class=\"token operator\">:</span> GeoPosition<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>부정확함을 바로잡는 방법을 쓰는 대신, 테스트 세트를 추가하여 놓친 부분이 없는지 확인하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Expression</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> CallExpression<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">CallExpression</span> <span class=\"token operator\">=</span> MathCall <span class=\"token operator\">|</span> CaseCall <span class=\"token operator\">|</span> RGBCall<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MathCall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"+\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\">\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">1</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  <span class=\"token number\">2</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  length<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CaseCall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"case\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">1</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  <span class=\"token number\">2</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  <span class=\"token number\">3</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  length<span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> <span class=\"token number\">6</span> <span class=\"token operator\">|</span> <span class=\"token number\">8</span> <span class=\"token operator\">|</span> <span class=\"token number\">10</span> <span class=\"token operator\">|</span> <span class=\"token number\">12</span> <span class=\"token operator\">|</span> <span class=\"token number\">14</span> <span class=\"token operator\">|</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 등등</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RGBCall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rgb\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">1</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  <span class=\"token number\">2</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  <span class=\"token number\">3</span><span class=\"token operator\">:</span> Expression<span class=\"token punctuation\">;</span>\n  length<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>→ 잘못 사용된 코드에서 오류가 발생하기는 하지만 오류 메시지가 더 난해해진다</p>\n</li>\n<li>\n<p>타입이 구체적으로 정제된다고 해서 정확도가 무조건 올라가지는 않는다</p>\n</li>\n<li>\n<p>개발 경험을 생각하기</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"아이템-35-데이터가-아닌-api와-명세를-보고-타입-만들기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-35-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%95%84%EB%8B%8C-api%EC%99%80-%EB%AA%85%EC%84%B8%EB%A5%BC-%EB%B3%B4%EA%B3%A0-%ED%83%80%EC%9E%85-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"아이템 35 데이터가 아닌 api와 명세를 보고 타입 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 35: 데이터가 아닌, API와 명세를 보고 타입 만들기</h2>\n<ul>\n<li>직접 타입 선언을 작성하는 것이 아닌 명세를 기반으로 타입을 작성한다면 사용 가능한 모든 값에 대해서 코드가 작동한다는 확신을 가질 수 있다.</li>\n</ul>\n<hr>\n<h2 id=\"아이템-36-해당-분야의-용어로-타입-이름-짓기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-36-%ED%95%B4%EB%8B%B9-%EB%B6%84%EC%95%BC%EC%9D%98-%EC%9A%A9%EC%96%B4%EB%A1%9C-%ED%83%80%EC%9E%85-%EC%9D%B4%EB%A6%84-%EC%A7%93%EA%B8%B0\" aria-label=\"아이템 36 해당 분야의 용어로 타입 이름 짓기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 36: 해당 분야의 용어로 타입 이름 짓기</h2>\n<ul>\n<li>동일한 의미를 나타낼 때는 같은 용어를 사용하기</li>\n<li>data, info, thing, item, object, entity같은 모호하고 의미없는 이름은 피하기</li>\n<li>이름을 지을 때는 포함된 내용이나 계산 방식이 아니라 데이터 자체가 무엇인지를 고려하기</li>\n</ul>\n<hr>\n<h2 id=\"아이템-37-공식-명칭에는-상표를-붙이기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-37-%EA%B3%B5%EC%8B%9D-%EB%AA%85%EC%B9%AD%EC%97%90%EB%8A%94-%EC%83%81%ED%91%9C%EB%A5%BC-%EB%B6%99%EC%9D%B4%EA%B8%B0\" aria-label=\"아이템 37 공식 명칭에는 상표를 붙이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 37: 공식 명칭에는 상표를 붙이기</h2>\n<ul>\n<li>\n<p>공식 명칭 (nominal typing)</p>\n<ul>\n<li>\n<p>타입이 아니라 값의 관점에서 말하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Vector2D</span> <span class=\"token punctuation\">{</span>\n  _brand<span class=\"token operator\">:</span> <span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">;</span>\n  x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">vec2D</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Vector2D <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> _brand<span class=\"token operator\">:</span> <span class=\"token string\">\"2d\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateNorm</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> Vector2D<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">calculateNorm</span><span class=\"token punctuation\">(</span><span class=\"token function\">vec2D</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 정상</span>\n<span class=\"token keyword\">const</span> vec3D <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">calculateNorm</span><span class=\"token punctuation\">(</span>vec3D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🚨 '_brand' 속성이 ... 형식에 없습니다</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>상표 시스템은 타입 시스템에서 동작하지만 런타임에 상표를 검사하는 것과 동일한 효과를 얻을 수 있다</p>\n</li>\n<li>\n<p>타입스크립트는 구조적 타이핑(덕 타이핑)을 사용하기 때문에, 값을 구분하기 위해 공식 명칭이 필요할 경우 상표를 붙일 수 있다.</p>\n</li>\n</ul>","timeToRead":9,"frontmatter":{"title":"이펙티브 타입스크립트 4장","date":"December 22, 2021","description":null,"tags":["effective-typescript"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/effective-typescript/effective-typescript-4/","previous":{"fields":{"slug":"/effective-typescript/effective-typescript-5/","langKey":"en","directoryName":"effective-typescript"},"frontmatter":{"date":"December 29, 2021","description":null,"title":"이펙티브 타입스크립트 5장","tags":["effective-typescript"]}},"next":{"fields":{"slug":"/weekly/2021-12-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"December 19, 2021","description":"weekly-i-learned","title":"12월 3주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/effective-typescript/effective-typescript-5/","langKey":"en","directoryName":"effective-typescript"},"frontmatter":{"date":"December 29, 2021","description":null,"title":"이펙티브 타입스크립트 5장","tags":["effective-typescript"]}},"nextInSameTag":{"fields":{"slug":"/effective-typescript/effective-typescript-3/","langKey":"en","directoryName":"effective-typescript"},"frontmatter":{"date":"December 18, 2021","description":null,"title":"이펙티브 타입스크립트 3장","tags":["effective-typescript"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}