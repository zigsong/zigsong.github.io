{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2022-12-week-1/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"bb12a9c5-e146-5112-bf91-22e3e5c27121","excerpt":"완벽한 힐링, 중요한 건 꺾이지 않는 마음 배워가기 assertion 활용하기 를 사용하면, assertion이 false라면 에러 메시지를 반환한다. true일 경우 아무 일도 일어나지 않는다. assertion은  항상 코드 실행의 그 지점에서 참으로 평가되어야 한다 Ref…","html":"<p>완벽한 힐링, 중요한 건 꺾이지 않는 마음</p>\n<!-- more -->\n<hr>\n<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<h3 id=\"assertion-활용하기\" style=\"position:relative;\"><a href=\"#assertion-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"assertion 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>assertion 활용하기</h3>\n<p><code class=\"language-text\">console.assert</code>를 사용하면, assertion이 false라면 에러 메시지를 반환한다. true일 경우 아무 일도 일어나지 않는다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> errorMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"the # is not even\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> number <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> number<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">the # is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>number<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%o\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">,</span> errorMsg <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// output:</span>\n<span class=\"token comment\">// the # is 2</span>\n<span class=\"token comment\">// the # is 3</span>\n<span class=\"token comment\">// Assertion failed: {number: 3, errorMsg: \"the # is not even\"}</span>\n<span class=\"token comment\">// the # is 4</span>\n<span class=\"token comment\">// the # is 5</span>\n<span class=\"token comment\">// Assertion failed: {number: 5, errorMsg: \"the # is not even\"}</span></code></pre></div>\n<blockquote>\n<p>assertion은  항상 코드 실행의 그 지점에서 참으로 평가되어야 한다</p>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console/assert\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/console/assert</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Assertion_(software_development)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://en.wikipedia.org/wiki/Assertion_(software_development)</a></li>\n</ul>\n<h3 id=\"aws-elastic-beanstalk\" style=\"position:relative;\"><a href=\"#aws-elastic-beanstalk\" aria-label=\"aws elastic beanstalk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Elastic Beanstalk</h3>\n<p>AWS Elastic Beanstalk은 AWS 클라우드에서 애플리케이션을 신속하게 배포하고 관리하게 해주는 서비스다. 애플리케이션을 업로드하면 elastic beanstalk이 로드 밸런싱, 조정, 모니터링 등을 관리한다.</p>\n<p>elastic beanstalk은 사용자가 선택한 플랫폼 버전(ex Node.js 12 running on 64bit)을 빌드하고 aws 자원들을 프로비저닝한다.</p>\n<p>웹 콘솔에서 모니터링, 로드밸런싱 등등의 작업을 진행할 수 있음며, 롤백도 쉽게 가능</p>\n<p>‘프로비저닝’은 서버를 세팅하는 프로세스를 의미한다. (프로비저닝에도 여러 경우가 있는데 여기서는 서버 프로비저닝 - 서버 운영체제 설치, 네트워크, 미들웨어 연결 등등의 작업들 - 을 가리킨다.)</p>\n<blockquote>\n<p>⚽️ 월드컵 모니터링도 elastic beanstalk에 있는 모니터링 섹션을 통해서 한다!</p>\n</blockquote>\n<h3 id=\"ioslive-activity\" style=\"position:relative;\"><a href=\"#ioslive-activity\" aria-label=\"ioslive activity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ios Live Activity</h3>\n<p>ios Live Activity는, 실시간으로 벌어지고 있는 일의 진행 상황을 <strong>잠금 화면</strong>에서 손쉽게 바로바로 확인할 수 있게 해주는 기능이다.</p>\n<p>iPhone 14 Pro, Pro Max에서는 다이나믹 아일랜드 (Dynamic Island)를 통해서도 확인할 수 있다.</p>\n<p>실시간 현황은 3개의 상태로 존재(Start, Update, End)하며, 배민에서는 start(주문 성공)-update(주문 상태 변경)-End(종료) 상태로 활용하고 있다.</p>\n<p>start 지점에서 JavaScript Interface를 이용하여 실시간 현황 시작을 앱에 요청한다고 한다!</p>\n<h3 id=\"css-font\" style=\"position:relative;\"><a href=\"#css-font\" aria-label=\"css font permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS font</h3>\n<p>serif과 san serif은 특정 폰트를 이야기하는 것이 아니라 전체적인 스타일을 의미한다.</p>\n<p>serif는 <a href=\"https://ko.wikipedia.org/wiki/%ED%83%80%EC%9D%B4%ED%8F%AC%EA%B7%B8%EB%9E%98%ED%94%BC\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">타이포그래피</a>에서 위아래에 획의 일부 끝이 돌출된 것이 특징이다. 책이나 신문에서 자주쓰이며, 오래 글을 읽는 데 편하다. (보수적,전통적인 느낌을 주기 때문에 고가의 명품 브랜드가 serif를 사용한다.)</p>\n<p>sans serif는 serif과 비교하면 획이 없다. 매거진, 웹에서 자주 쓰임 (도시적이고, 간결하며, 미니멀한 이미지를 준다,. IT 업계에서는 sans serif를 많이 사용한다.)</p>\n<p>(사진에서 왼쪽이 serif, 오른쪽이 san-serif)\n<img src=\"01.png\" width=\"600px\" /></p>\n<p>추가로 monospace는 글자 하나하나의 넓이가 모두 같은 폰트를 의미한다. (그래픽 기능이 제한되어있던 컴퓨터 터미널에서 monospace 폰트를 사용했다.)</p>\n<p>github, naver, Wordpress, medium 등의 사이트는 시스템 폰트를 사용하는데, 그 이유는 퍼포먼스 때문이다. 폰트는 웹에서 용량이 큰 리소스다. 따라서 유저가 기본적으로 가지고있는 시스템 폰트를 사용하면 로딩시간을 줄일 수 있다.</p>\n<p>모든 유저에 시스템 폰트를 적용하려면 다음을 추가한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Segoe UI</code> - microsoft가 사용하는 글꼴 , 윈도우 폰 , 컴퓨터</li>\n<li><code class=\"language-text\">apple-system</code> - iOS Safari, macOS Safari, macOS Firefox 지원</li>\n<li><code class=\"language-text\">system-ui</code> - 플랫폼의 default UI font</li>\n<li><code class=\"language-text\">BlinkMacSystemFont</code> - macOS Chrome 지원</li>\n<li><code class=\"language-text\">Roboto</code> - Android 와 Chrome OS 지원</li>\n<li><code class=\"language-text\">Helvetica Neue</code> - macOS versions &#x3C; 10.11 지원</li>\n<li><code class=\"language-text\">arial</code>, <code class=\"language-text\">sans-serif</code> - 모든 플랫폼 지원</li>\n</ul>\n<h3 id=\"react-setstate의-큐queue\" style=\"position:relative;\"><a href=\"#react-setstate%EC%9D%98-%ED%81%90queue\" aria-label=\"react setstate의 큐queue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React setState의 큐(queue)</h3>\n<p>다음과 같이 React 코드를 작성 후,</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">,</span> setNumber<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setNumber</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setNumber</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">+</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Increase the number\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>버튼을 클릭했을 때의 결과는?</p>\n<p>🙋‍♀️ <code class=\"language-text\">number</code>는 <code class=\"language-text\">42</code>가 된다.</p>\n<ul>\n<li><code class=\"language-text\">setNumber(number + 5)</code>는 <code class=\"language-text\">number</code>가 0이니 <code class=\"language-text\">state</code>를 5로 교체해달라는 명령을 큐에 넣는다.</li>\n<li><code class=\"language-text\">setNumber(n -> n + 1)</code>은 updater function을 큐에 넣는다.</li>\n<li><code class=\"language-text\">setNumber(number + 42)</code>는 <code class=\"language-text\">number</code>가 0이니 <code class=\"language-text\">state</code>를 42로 교체해달라는 명령을 큐에 넣는다.</li>\n<li>이벤트 핸들러가 모두 실행되면 react가 리랜더링을 시작하고 큐에 있는 작업들도 순서대로 실행된다.</li>\n</ul>\n<ol>\n<li>state를 5로 교체한다.</li>\n<li>updater 함수가 실행되어 전 state이 5에 1을 더한다.</li>\n<li>state를 42로 교체한다.</li>\n</ol>\n<p>리액트 queue를 간단하게 구현한 코드는 다음과 같다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFinalState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">baseState<span class=\"token punctuation\">,</span> queue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> finalState <span class=\"token operator\">=</span> baseState<span class=\"token punctuation\">;</span>\n\n  finalState <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> update</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> update <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// updater 함수라면 ex) n=> n+1</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// replace 작업이라면</span>\n    <span class=\"token keyword\">return</span> update<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> baseState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> finalState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"react-query의-prefetchquery\" style=\"position:relative;\"><a href=\"#react-query%EC%9D%98-prefetchquery\" aria-label=\"react query의 prefetchquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-query의 <code class=\"language-text\">prefetchQuery</code></h3>\n<p>react-query 의 <code class=\"language-text\">prefetchQuery</code>는 리턴데이터를 주거나 throw 하지 않는다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">noop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span>\n_proto<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fetchQuery</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> arg3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> parsedOptions <span class=\"token operator\">=</span> <span class=\"token function\">parseQueryArgs</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> arg3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> defaultedOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">defaultQueryOptions</span><span class=\"token punctuation\">(</span>parsedOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//https://github.com/tannerlinsley/react-query/issues/652</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> defaultedOptions<span class=\"token punctuation\">.</span>retry <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    defaultedOptions<span class=\"token punctuation\">.</span>retry <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> query <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryCache<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> defaultedOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> query<span class=\"token punctuation\">.</span><span class=\"token function\">isStaleByTime</span><span class=\"token punctuation\">(</span>defaultedOptions<span class=\"token punctuation\">.</span>staleTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> query<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>defaultedOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n_proto<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">prefetchQuery</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prefetchQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> arg3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchQuery</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> arg3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>noop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>noop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>서버사이드에서 미리 쿼리를 적재하는데 예외발생시 redirect 시켜야한다면 <code class=\"language-text\">prefetchQuery</code> 대신 <code class=\"language-text\">fetchQuery</code> 를 사용하자.</p>\n<h3 id=\"react-strict-모드에서-함수-컴포넌트가-두번씩-호출되는-이유\" style=\"position:relative;\"><a href=\"#react-strict-%EB%AA%A8%EB%93%9C%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EB%91%90%EB%B2%88%EC%94%A9-%ED%98%B8%EC%B6%9C%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"react strict 모드에서 함수 컴포넌트가 두번씩 호출되는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react strict 모드에서 함수 컴포넌트가 두번씩 호출되는 이유</h3>\n<p>리액트의 일은 두 단계로 나눌 수 있다.</p>\n<ul>\n<li>render: dom에 어떤 부분을 변경해야 할지 결정하는 단계</li>\n<li>commit: 리액트가 변화를 적용하는 단계 (실제 DOM 변경)</li>\n</ul>\n<p>렌더링은 느리고 커밋은 비교적 빠르다. 그래서 랜더링 단계가 너무 길어져 브라우저의 동작을 방해하는 문제를 해결하고자 랜더링 단계의 작업을 나눈 것이다. (concurrent mode)</p>\n<p>따라서 랜더링 단계의 lifecycle 메소드들이 한번 이상 호출될 수 있다! (setState의 업데이트 함수도 2번 실행되지만 두번째 결과는 버린다) 이때, 사이드 이펙트가 있으면 문제가 생길 수 있다.</p>\n<p><code class=\"language-text\">React.strict</code> 모드가 사이드 이펙트 문제를 직접적으로 해결해주지는 않지만 어떤 문제가 생길지 보여준다.</p>\n<h3 id=\"vscode-autoreveal-관련\" style=\"position:relative;\"><a href=\"#vscode-autoreveal-%EA%B4%80%EB%A0%A8\" aria-label=\"vscode autoreveal 관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vscode autoReveal 관련</h3>\n<p>파일에서 type definition을 타고들어가면 항상 <code class=\"language-text\">node_modules</code> 폴더 구조가 열리는 것에 피로감을 느꼈다. 🫠</p>\n<p>이때 vscode에서 <code class=\"language-text\">autoReveal</code> 항목을 false로 설정하면 <code class=\"language-text\">node_modules</code>가 열리는 것을 방지할 수 있다!</p>\n<p>🤔 하지만 src 폴더의 파일들은 열려있게 하고 싶었다.</p>\n<p>vscode issue에서 이에대한 논의가 있었고 최근에 <a href=\"https://code.visualstudio.com/insiders/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vscode-insider</a>(vscode 베타버전?)에 이 기능이 추가되었다.</p>\n<p>(default setting으로 <code class=\"language-text\">node_modules</code>는 autoReveal에서 제외되어 있다.)</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token string-property property\">\"explorer.autoRevealExclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"**/node_modules\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"**/bower_components\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3 id=\"box-shadow가-옆에-있는-다른-요소를-가릴-때\" style=\"position:relative;\"><a href=\"#box-shadow%EA%B0%80-%EC%98%86%EC%97%90-%EC%9E%88%EB%8A%94-%EB%8B%A4%EB%A5%B8-%EC%9A%94%EC%86%8C%EB%A5%BC-%EA%B0%80%EB%A6%B4-%EB%95%8C\" aria-label=\"box shadow가 옆에 있는 다른 요소를 가릴 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>box-shadow가 옆에 있는 다른 요소를 가릴 때</h3>\n<p>여러 요소에 동일하게 <code class=\"language-text\">box-shadow</code>를 먹이고, 두 요소가 가까이 붙어있을 때, 한 요소의 <code class=\"language-text\">box-shadow</code>가 다른 요소 위로 침범하는 문제가 발생할 수 있다.</p>\n<p>이때는 다음과 같이 <code class=\"language-text\">:before</code> pseudo element를 사용하여 <code class=\"language-text\">box-shadow</code>의 레이어를 분리해주면 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.withShadow</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.withShadow:before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> -1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> -5px 5px 20px 5px #000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://blog.dudak.me/2014/css-shadows-under-adjacent-elements/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.dudak.me/2014/css-shadows-under-adjacent-elements/</a></p>\n<hr>\n<h2 id=\"이것저것\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83\" aria-label=\"이것저것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것</h2>\n<ul>\n<li>자바스크립트에서 동적으로 모듈을 불러오기 위해 Dynamic Imports를 사용할 수 있다. <a href=\"https://javascript.info/modules-dynamic-imports\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./say.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> say <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">resize</code> 이벤트는 <code class=\"language-text\">div</code>에 붙일 수 없다.\n<ul>\n<li><code class=\"language-text\">addEventlistener</code>(<code class=\"language-text\">resize</code>, …)는 document의 리사이즈만 옵저빙할 수 있다.(모든 HTML 엘리먼트에 등록할 수 있는 것이 아니다.) 만약 <code class=\"language-text\">div</code> 같은 다른 리사이즈를 구독하고 싶다면 <code class=\"language-text\">ResizeObserver</code> 를 활용하면 된다. (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n</ul>\n</li>\n<li>브라우저의 통해 마이크, 비디오 입력 스트림을 가져오는 <code class=\"language-text\">getUserMedia</code> API는 보안이 보장된 환경에서만 사용 가능하다. localhost에서는 문제없이 사용 가능하지만, 호스팅하려면 https 프로토콜로 접속이 가능한 환경이 준비되어 있어야 한다.</li>\n<li>Amazon에서 수요예측을 포함하여 제공하는 SCM 서비스\n<ul>\n<li><a href=\"https://aws.amazon.com/ko/aws-supply-chain/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://aws.amazon.com/ko/aws-supply-chain/</a></li>\n</ul>\n</li>\n<li>z-index는 positioned elements에만 먹힌다 (<code class=\"language-text\">relative</code>, <code class=\"language-text\">absolute</code>, <code class=\"language-text\">fixed</code>, <code class=\"language-text\">sticky</code>)</li>\n</ul>\n<hr>\n<h2 id=\"기타\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80\" aria-label=\"기타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타</h2>\n<h3 id=\"amazon-분산-컴퓨팅-선언문\" style=\"position:relative;\"><a href=\"#amazon-%EB%B6%84%EC%82%B0-%EC%BB%B4%ED%93%A8%ED%8C%85-%EC%84%A0%EC%96%B8%EB%AC%B8\" aria-label=\"amazon 분산 컴퓨팅 선언문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amazon 분산 컴퓨팅 선언문</h3>\n<p><strong>Ref</strong> <a href=\"https://channy.creation.net/blog/1715?fbclid=IwAR3pCElqwZMF2iTqfExHjx76T4WZbzzWZ8wTkJGNqQBZGke0CeG6uisRNDU&#x26;mibextid=Zxz2cZ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://channy.creation.net/blog/1715?fbclid=IwAR3pCElqwZMF2iTqfExHjx76T4WZbzzWZ8wTkJGNqQBZGke0CeG6uisRNDU&#x26;mibextid=Zxz2cZ</a></p>\n<h3 id=\"tc39\" style=\"position:relative;\"><a href=\"#tc39\" aria-label=\"tc39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TC39</h3>\n<p>이번에 스테이지 심사 대상인 문법들은 다음과 같다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">String.dedent()</code> (Stage 3)</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[\"I don't want extra indents\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// vs.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">.</span>dedent<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  [\n  \"I don't want extra indents\"\n]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Set 메서드 추가 (Stage 3)</p>\n<ul>\n<li>intersection, difference, union, …</li>\n</ul>\n</li>\n<li>\n<p>이터레이터 헬퍼 (Stage 3)</p>\n<ul>\n<li>map, filter, take, drop, …</li>\n</ul>\n</li>\n<li>\n<p>await 연산자 (Stage 2)</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// vs.</span>\n<span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>all ps</code></pre></div>\n</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://github.com/tc39/agendas/blob/main/2022/11.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tc39/agendas/blob/main/2022/11.md</a></p>\n<h3 id=\"css-vs-css-in-js-퍼포먼스\" style=\"position:relative;\"><a href=\"#css-vs-css-in-js-%ED%8D%BC%ED%8F%AC%EB%A8%BC%EC%8A%A4\" aria-label=\"css vs css in js 퍼포먼스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS vs CSS-in-JS 퍼포먼스</h3>\n<p>결과는?!</p>\n<p><strong>Styled Components Performance</strong>\nAverage performance range: 13809 ms</p>\n<ul>\n<li>FCP: 2.2</li>\n<li>SI: 9.1</li>\n<li>LCP: 13.1</li>\n<li>TTI: 13.2</li>\n</ul>\n<p><strong>Modular CSS Performance</strong>\nAverage performance range: 8995 ms</p>\n<ul>\n<li>FCP: 2.1</li>\n<li>SI: 7.6</li>\n<li>LCP: 12</li>\n<li>TTI: 12.5</li>\n</ul>\n<p>꽤나 큰 차이!</p>\n<p>그래도 사람들은 익숙한 것에 편리하다나 뭐라나 🤷‍♀️</p>\n<p><strong>Ref</strong> <a href=\"https://medium.com/@pitis.radu/css-vs-css-in-js-performance-bcbdf8e1f6ff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/@pitis.radu/css-vs-css-in-js-performance-bcbdf8e1f6ff</a></p>\n<h3 id=\"aws-lambda-snapstart\" style=\"position:relative;\"><a href=\"#aws-lambda-snapstart\" aria-label=\"aws lambda snapstart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Lambda SnapStart</h3>\n<p>AWS에서 Lambda의 콜드스타트 지연 시간을 줄이기 위해 SnapStart라는 기능을 공개했다.</p>\n<p>설명은 다음과 같다.</p>\n<blockquote>\n<p>특정 Lambda 함수에 대해 Lambda SnapStart를 활성화한 후 새 버전의 함수를 게시하면 최적화 프로세스가 트리거됩니다. 프로세스에 의해 함수가 시작되고 <code class=\"language-text\">Init</code> 단계 전체에 걸쳐 프로세스가 실행됩니다. 그런 다음 메모리 및 디스크 상태의 변경 불가능한 암호화된 스냅샷을 가져와서 다시 사용할 수 있도록 캐시합니다. 이후에 함수가 호출되면 필요에 따라 상태가 캐시에서 청크 단위로 검색되어 실행 환경을 채우는 데 사용됩니다. 새로운 실행 환경을 만드는 데 더 이상 전용 <code class=\"language-text\">Init</code> 단계가 필요하지 않으므로 이 최적화를 통해 호출 시간이 단축되고 더 잘 예측할 수 있게 됩니다.</p>\n</blockquote>\n<p>하지만 아직 서울 리전은 지원하지 않는다 🥲</p>\n<p><strong>Ref</strong> <a href=\"https://aws.amazon.com/ko/blogs/korea/new-accelerate-your-lambda-functions-with-lambda-snapstart/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://aws.amazon.com/ko/blogs/korea/new-accelerate-your-lambda-functions-with-lambda-snapstart/</a></p>\n<h3 id=\"svelte-kit-출시-임박\" style=\"position:relative;\"><a href=\"#svelte-kit-%EC%B6%9C%EC%8B%9C-%EC%9E%84%EB%B0%95\" aria-label=\"svelte kit 출시 임박 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>svelte kit 출시 임박!</h3>\n<p>ver 1.0.0 마일스톤까지 남은 이슈 단 3개!</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/sveltejs/kit/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0</a></p>\n<h3 id=\"react-다큐-트레일러-공개\" style=\"position:relative;\"><a href=\"#react-%EB%8B%A4%ED%81%90-%ED%8A%B8%EB%A0%88%EC%9D%BC%EB%9F%AC-%EA%B3%B5%EA%B0%9C\" aria-label=\"react 다큐 트레일러 공개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 다큐 트레일러 공개</h3>\n<p>이런 것도 있었다니!! ㅋㅋㅋ 깐지난다.</p>\n<p><strong>Ref</strong> <a href=\"https://youtu.be/gmp0istg5xo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://youtu.be/gmp0istg5xo</a></p>\n<h3 id=\"대학생을-위한-프론트엔드-행사-f-univ\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%95%99%EC%83%9D%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%96%89%EC%82%AC-f-univ\" aria-label=\"대학생을 위한 프론트엔드 행사 f univ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대학생을 위한 프론트엔드 행사 f-univ</h3>\n<p><strong>Ref</strong> <a href=\"https://www.f-univ.kr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.f-univ.kr/</a></p>\n<h3 id=\"edge-computing으로-가져올-웹-개발의-변화\" style=\"position:relative;\"><a href=\"#edge-computing%EC%9C%BC%EB%A1%9C-%EA%B0%80%EC%A0%B8%EC%98%AC-%EC%9B%B9-%EA%B0%9C%EB%B0%9C%EC%9D%98-%EB%B3%80%ED%99%94\" aria-label=\"edge computing으로 가져올 웹 개발의 변화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Edge Computing으로 가져올 웹 개발의 변화</h3>\n<p>구성원 분의 정리요약</p>\n<ul>\n<li>사용자와 제일 가까운 곳(Edge)에서 빠르게 무언가를 계산(Computing)하는 기술이 현재진행형으로 진화중이다.</li>\n<li>프론트엔드에 있던 코드 일부를 엣지 서버를 통해 번들 사이즈를 줄이거나, 브라우저가 필요한 에셋을 더 빠르게 전달하는 것들이 가능해진다.</li>\n<li>웹어셈블리를 끼얹어서 자바스크립트보다 몇 배 빠른 ‘엣지 런타임’ 기반의 서비스를 제공하는 기술도 나오는 중이다.</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://www.youtube.com/watch?v=YImV7OfPqSo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=YImV7OfPqSo</a></p>\n<h3 id=\"프론트엔드-핵심-정리노트\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC%EB%85%B8%ED%8A%B8\" aria-label=\"프론트엔드 핵심 정리노트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프론트엔드 핵심 정리노트</h3>\n<p>닉네임부터 심상치않다… 😳</p>\n<p>학습에서부터 실무까지 유용하게 훔쳐볼(?) 수 있어보인다.</p>\n<p><strong>Ref</strong> <a href=\"https://www.hmmhmm.hm/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.hmmhmm.hm/</a></p>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>금요일 친구들과 다같이 연차를 쓰고 호캉스… 가 아닌 한캉스 - 한옥 독채 바캉스 - 를 다녀왔다. 1박2일 동안 맛있는 거 잔뜩 먹고, 술도, 완벽한 숙소에서 10년 전 음방 유튜브만 잔뜩 보고, 서촌 골목골목 예쁜 가게들도 구경하고. 제대로 된 힐링이었다. 새벽 2시까지 축구 보다 잤는데도 하나도 안 피곤했던 다음날 ☀️ 작은 한옥 마당에 얕게 내린 첫눈까지 완전히 아름다웠다.</p>\n<p>그리고 정말 16강에 진출하다니 ㅠㅠ 축구같은 거 관심도 없고 한 번도 제대로 본 적 없었는데, 이번 월드컵은 조별리그 3번 다 내가 사랑하는 사람들과 함께 집중해서 챙겨봤다 ㅋㅋㅋ 특히 포르투갈 전은 정말 질 것 같아서 (그리고 밤 12시라;) 그냥 잔다고 했는데, 잠을 잘 수 없는 명경기였다. 이 역사적인 순간을 친구들과 함께 가슴 졸이면서 보다니!! 최고야 짜릿해</p>\n<p>💫 중요한 건 꺾이지 않는 맘 💫</p>\n<p>남은 2022년, 곧 찾아올 2023년도 알빠임?의 마인드로 살아보자 👊</p>","timeToRead":12,"frontmatter":{"title":"12월 1주차 기록","date":"December 04, 2022","description":"weekly-i-learned","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2022-12-week-1/","previous":{"fields":{"slug":"/frontend/lottie/","langKey":"en","directoryName":"frontend"},"frontmatter":{"date":"December 08, 2022","description":null,"title":"로티로 애니메이션 만들기","tags":["frontend","main"]}},"next":{"fields":{"slug":"/weekly/2022-11-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 26, 2022","description":"weekly-i-learned","title":"11월 4주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2022-12-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"December 10, 2022","description":"weekly-i-learned","title":"12월 2주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2022-11-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 26, 2022","description":"weekly-i-learned","title":"11월 4주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}