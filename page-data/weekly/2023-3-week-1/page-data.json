{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2023-3-week-1/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"2a36ee2e-254a-5022-a09f-57320aa2d78e","excerpt":"가끔은 등산을 ⛰️ 배워가기 Turborepo란? JS/TS 코드 베이스의 모노레포를 위한 고성능 빌드 시스템으로, 모노레포 환경에서 개발자가 조금 더 쉽고 빠르게 개발할 수 있도록 빌드 도구를 제공한다. Vercel이 인수했다. 다음을 특장점으로 갖는다. (총…","html":"<p>가끔은 등산을 ⛰️</p>\n<!-- more -->\n<hr>\n<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<h3 id=\"turborepo란\" style=\"position:relative;\"><a href=\"#turborepo%EB%9E%80\" aria-label=\"turborepo란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Turborepo란?</h3>\n<p>JS/TS 코드 베이스의 모노레포를 위한 고성능 빌드 시스템으로, 모노레포 환경에서 개발자가 조금 더 쉽고 빠르게 개발할 수 있도록 빌드 도구를 제공한다. Vercel이 인수했다.</p>\n<p>다음을 특장점으로 갖는다. (총 9개지만 생략)</p>\n<ul>\n<li><strong>Incremental builds</strong>\n<ul>\n<li>빌드는 딱 한 번만 하는 것을 목표로, 작업 진행을 캐싱해 이미 계산된 내용은 건너 뛴다.</li>\n</ul>\n</li>\n<li><strong>Content-aware hashing</strong>\n<ul>\n<li>타임스탬프가 아닌 콘텐츠를 인식하는 방식으로 해싱을 지원한다. 이를 통해 모든 파일을 다시 빌드하는 것이 아니라 변경된 파일만 빌드한다.</li>\n</ul>\n</li>\n<li><strong>Parallel execution</strong>\n<ul>\n<li>모든 코어를 사용하는 병렬 실행을 목표로 최대한 병렬적으로 작업을 수행한다.</li>\n</ul>\n</li>\n<li><strong>Task Pipelines</strong>\n<ul>\n<li>태스크 간의 연결을 정의해서 빌드를 언제 어떻게 실행할지 판단해 최적화할 수 있다.</li>\n</ul>\n</li>\n<li><strong>Zero Runtime Overhead</strong>\n<ul>\n<li>런타임 코드와 소스 맵을 다루지 않는다.</li>\n</ul>\n</li>\n<li><strong>JSON configuration</strong>\n<ul>\n<li>별도의 코드 작업 없이 JSON 설정이면 충분하다.</li>\n</ul>\n</li>\n<li><strong>Profile in browser</strong>\n<ul>\n<li>빌드 과정을 시각화해서 병목 지점을 쉽게 찾을 수도 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"주요-웹-브라우저-url-최대-길이-제한\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EC%9B%B9-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-url-%EC%B5%9C%EB%8C%80-%EA%B8%B8%EC%9D%B4-%EC%A0%9C%ED%95%9C\" aria-label=\"주요 웹 브라우저 url 최대 길이 제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 웹 브라우저 url 최대 길이 제한</h3>\n<table>\n<thead>\n<tr>\n<th>브라우저</th>\n<th>최대 URL 길이 제한</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Internet Explorer</td>\n<td>2,083 characters</td>\n</tr>\n<tr>\n<td>Microsoft Edge</td>\n<td>8,192 characters</td>\n</tr>\n<tr>\n<td>Firefox</td>\n<td>65,536 characters</td>\n</tr>\n<tr>\n<td>Chrome</td>\n<td>2,083 characters</td>\n</tr>\n<tr>\n<td>Safari</td>\n<td>80,000 characters</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"css-파싱은-html-파싱을-막는다\" style=\"position:relative;\"><a href=\"#css-%ED%8C%8C%EC%8B%B1%EC%9D%80-html-%ED%8C%8C%EC%8B%B1%EC%9D%84-%EB%A7%89%EB%8A%94%EB%8B%A4\" aria-label=\"css 파싱은 html 파싱을 막는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 파싱은 HTML 파싱을 막는다?</h3>\n<p>styleSheet의 경우 embedded나 inline 스타일과는 다르게 백그라운드에서 완전히 다운받을 수 있어 DOM 파싱을 중단시키지는 않는다. 다만 styleSheet도 딱 한번만 CSSOM 트리를 수정한다. 그리고 수정된 CSSOM 트리를 통해 Render Tree가 업데이트된다.</p>\n<p>CSS가 <strong>Render-Blocking 자원</strong>이라고 불리는 이유다. 스타일 요소를 읽는 동안에는 Render Tree 구성이 중지된다. 하지만 <strong>Render Tree의 구성을 멈출 뿐, DOM 파싱은 멈추지 않는다</strong>.</p>\n<p>DOM 파싱이 종료되어 DOM Tree가 완성되었다고 하더라도, CSSOM 트리가 아직 완성되지 않았다면면 Render Tree를 구성하지 않는다.</p>\n<blockquote>\n<p>즉, CSS는 파서-블로킹이 아니라 렌더-블로킹 자원이다!</p>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://sangmin802.github.io/Study/Think/browser-parser-blocking/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sangmin802.github.io/Study/Think/browser-parser-blocking/</a> -</p>\n<h3 id=\"nestjs-view-entity\" style=\"position:relative;\"><a href=\"#nestjs-view-entity\" aria-label=\"nestjs view entity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nest.js View Entity</h3>\n<p>데이터베이스 view와 매핑되는 클래스다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">@ViewEntity</code>의 옵션</p>\n<ul>\n<li><code class=\"language-text\">name</code> - view의 이름으로, 명시하지 않으면 엔티티 클래스 이름으로 생성된다.</li>\n<li><code class=\"language-text\">database</code> - 선택된 DB 서버의 데이터베이스 네임</li>\n<li><code class=\"language-text\">schema</code> - 스키마 이름</li>\n<li><code class=\"language-text\">expression</code> - 필수 항목으로, view의 정의</li>\n</ul>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">@<span class=\"token function\">ViewEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    expression<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        SELECT \"post\".\"id\" AS \"id\", \"post\".\"name\" AS \"name\", \"category\".\"name\" AS \"categoryName\"\n        FROM \"post\" \"post\"\n        LEFT JOIN \"category\" \"category\" ON \"post\".\"categoryId\" = \"category\".\"id\"\n    </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">dependsOn</code> - 현재 view가 의존하고 있는 다른 view의 목록. 다른 view를 definition에 사용한다면, <code class=\"language-text\">dependsOn</code>에 추가하여 올바른 순서로 마이그레이션되게끔 해야 한다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"이것저것\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83\" aria-label=\"이것저것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것</h2>\n<ul>\n<li><a href=\"https://v8.dev/features/numeric-separators\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">numeric separators</a>: 육안으로 한 눈에 분간하기 어려운 숫자를 끊어서 표기하기 위해서 underscore를 활용할 수 있다.\n<ul>\n<li><code class=\"language-text\">1_000_000_000_000</code> 처럼 천의 자리 기준으로 끊어 읽을 수도 있고 소수점, 십진수가 아닌 이/팔진수 등등에서도 유용하게 사용할 수 있다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">git pull --tags</code> - 원격 저장소에서 tag 를 pull 해오기</li>\n<li>ChatGPT Prompt를 모아놓은 <a href=\"https://github.com/f/awesome-chatgpt-prompts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">awesome-chatgpt-prompts</a></li>\n</ul>\n<hr>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<h3 id=\"비주얼-디자인-가이드\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A3%BC%EC%96%BC-%EB%94%94%EC%9E%90%EC%9D%B8-%EA%B0%80%EC%9D%B4%EB%93%9C\" aria-label=\"비주얼 디자인 가이드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비주얼 디자인 가이드</h3>\n<p>링크에 유용한 팁들이 많이 있다! 주로 디자이너를 위한 것이지만, 프론트엔드 개발자로서 같이 알고 있어도 좋을 듯 하다. 😎</p>\n<ul>\n<li>완전 검은색/흰색 대신 검은색/흰색에 가까운 색 사용하기</li>\n<li>중요한 요소들에 대비가 높은 색상 사용하기</li>\n<li>시각적 정렬은 수학적 정렬과 다를 수 있다.</li>\n<li>큰 텍스트에는 자간(letter-spacing)과 줄간격(line-height) 줄이기</li>\n<li>레이아웃은 수학적으로 계산되어야 한다.</li>\n<li>요소들은 시각적 무게의 순서에 따라 나열하기</li>\n<li>가로 그리드를 사용한다면, 12개의 열 사용하기</li>\n<li>가까운 요소일수록 더 밝은 색상 사용하기</li>\n<li>외부 패딩은 내부 패딩보다 같거나 더 크게 설정하기</li>\n<li>텍스트 한 줄은 70자(영어 기준) 내외로 사용하기</li>\n<li>버튼에서 가로 패딩은 세로 패딩보다 2배로 설정</li>\n</ul>\n<p>등등 재밌는 팁들이 있다</p>\n<p><strong>Ref</strong> <a href=\"https://anthonyhobday.com/sideprojects/saferules/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://anthonyhobday.com/sideprojects/saferules/</a></p>\n<h3 id=\"nextui\" style=\"position:relative;\"><a href=\"#nextui\" aria-label=\"nextui permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NextUI</h3>\n<p>vercel에서 관리하는 React용 UI Library다.</p>\n<p><strong>Ref</strong> <a href=\"https://nextui.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://nextui.org/</a></p>\n<h3 id=\"msw-메이저-10-버전\" style=\"position:relative;\"><a href=\"#msw-%EB%A9%94%EC%9D%B4%EC%A0%80-10-%EB%B2%84%EC%A0%84\" aria-label=\"msw 메이저 10 버전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>msw 메이저 1.0 버전</h3>\n<p>대단히 달라진 건 없는 듯하다.</p>\n<p><strong>Ref</strong> <a href=\"https://www.npmjs.com/package/msw\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.npmjs.com/package/msw</a></p>\n<h3 id=\"jsverbalexpressions\" style=\"position:relative;\"><a href=\"#jsverbalexpressions\" aria-label=\"jsverbalexpressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSVerbalExpressions</h3>\n<p>쉽게 만드는 JS 정규표현식 빌더</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Create an example of how to test for correctly formed URLs</span>\n<span class=\"token keyword\">const</span> tester <span class=\"token operator\">=</span> <span class=\"token function\">VerEx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">startOfLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">maybe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"://\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">maybe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"www.\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">anythingBut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">endOfLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an example URL</span>\n<span class=\"token keyword\">const</span> testMe <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.google.com\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Use RegExp object's native test() function</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tester<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>testMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We have a correct URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This output will fire</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The URL is incorrect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tester<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>함수형 방식으로 요렇게 만들 수도 있다니 싱기방기 😮</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/VerbalExpressions/JSVerbalExpressions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>호주 가기 전 마지막 주말이다아아. 중간에 삼일절 연휴까지 껴있어서 그런지 뭔가 더 열심히 일 안하고 논 것 같다…</p>\n<p>괜히 긴장되기도 하고 설레기도 하고 😎</p>\n<p>가서도 블로그 잘 연재할 수 있겠지.</p>","timeToRead":5,"frontmatter":{"title":"3월 1주차 기록","date":"March 04, 2023","description":"weekly-i-learned","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2023-3-week-1/","previous":{"fields":{"slug":"/weekly/2023-3-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 12, 2023","description":"weekly-i-learned","title":"3월 2주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2023-2-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 24, 2023","description":"weekly-i-learned","title":"2월 4주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2023-3-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 12, 2023","description":"weekly-i-learned","title":"3월 2주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2023-2-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 24, 2023","description":"weekly-i-learned","title":"2월 4주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}