{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2024-9-week-4/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"36458a23-816d-585f-a3dc-bd29606530c0","excerpt":"배워가기 react-query options  vs   기본값은  데이터가 stale하다고 여겨진 시점으로부터의 시간 로 설정 시 데이터는 절대 stale하다고 취급되지 않음  기본값은 (5분) 사용되지 않은/비활성화된 데이터가 메모리에 남아있는 시간(milliseconds…","html":"<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<hr>\n<h3 id=\"react-query-options\" style=\"position:relative;\"><a href=\"#react-query-options\" aria-label=\"react query options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-query options</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">staleTime</code> vs <code class=\"language-text\">gcTime</code></p>\n<ul>\n<li><code class=\"language-text\">staleTime: number | ((query: Query) => number)</code>\n<ul>\n<li>기본값은 <code class=\"language-text\">0</code></li>\n<li>데이터가 stale하다고 여겨진 시점으로부터의 시간</li>\n<li><code class=\"language-text\">Infinity</code>로 설정 시 데이터는 절대 stale하다고 취급되지 않음</li>\n</ul>\n</li>\n<li><code class=\"language-text\">gcTime: number | Infinity</code>\n<ul>\n<li>기본값은 <code class=\"language-text\">5 * 60 * 1000</code>(5분)</li>\n<li>사용되지 않은/비활성화된 데이터가 메모리에 남아있는 시간(milliseconds)</li>\n<li>쿼리 캐시가 사용되지 않거나 비활성화되면, 캐시 데이터는 <code class=\"language-text\">gcTime</code>이 지난 후에 가비지 컬렉션 됨</li>\n<li><code class=\"language-text\">Infitinity</code>로 설정 시 가비지 컬렉션을 하지 않음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">refetchInterval</code> vs <code class=\"language-text\">refetchIntervalInBackground</code></p>\n<ul>\n<li><code class=\"language-text\">refetchInterval: number | false | ((query: Query) => number | false | undefined)</code>\n<ul>\n<li>정해진 시간인 지날 때마다 계속 refetch한다</li>\n</ul>\n</li>\n<li><code class=\"language-text\">refetchIntervalInBackground: boolean</code>\n<ul>\n<li><code class=\"language-text\">true</code>로 설정 시 <code class=\"language-text\">refetchInterval</code>로 반복적으로 refetch하도록 설정된 쿼리들은 탭/백그라운드에서도 계속 refetch를 수행함</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">queryClient.setQueryData</code> vs <code class=\"language-text\">queryClient.fetchQuery</code></p>\n<ul>\n<li><code class=\"language-text\">queryClient.setQueryData</code>\n<ul>\n<li>쿼리의 캐시 데이터를 즉각 업데이트한다. 만약 쿼리가 존재하지 않으면, 새로 생성된다.</li>\n<li>쿼리가 기본 <code class=\"language-text\">gcTime</code>인 5분 동안 사용되지 않으면, 해당 쿼리는 가비지 컬렉트된다.</li>\n<li>여러 개의 쿼리를 한 번에 업데이트하고 커리 키를 부분적으로 매칭시키고 싶다면, <code class=\"language-text\">queryClient.setQueriesData</code>를 사용할 수 있다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">queryClient.fetchQuery</code>\n<ul>\n<li>쿼리를 fetch하고 캐시하는 데 사용되는 비동기 함수. 데이터를 반환하거나 에러를 던진다.</li>\n<li>쿼리가 존재하고 데이터가 비활성화 상태이거나 주어진 <code class=\"language-text\">staleTime</code>보다 오래 됐다면, 캐시의 데이터를 반환한다. 아니면 가장 최근 데이터를 fetch한다.</li>\n</ul>\n</li>\n<li>차이점\n<ul>\n<li><code class=\"language-text\">setQueryData</code>는 동기적이고 이미 동기적으로 사용 가능한 데이터가 있음을 가정한다. 만약 데이터를 비동기로 fetch하고 싶다면 쿼리 키를 refetch하거나 <code class=\"language-text\">fetchQuery</code>를 이용하여 비동기 fetch를 수행하는 것을 권장한다.</li>\n<li><code class=\"language-text\">fetchQuery</code>는 비동기적이고 데이터가 조회되는 동안 동일한 쿼리에 대해 중복 요청이 생성되지 않도록 보장하는 반면, <code class=\"language-text\">useQuery</code> 인스턴스가 동일한 쿼리를 렌더링할 때 <code class=\"language-text\">setQueryData</code>는 동기적으로 작동한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://tanstack.com/query/latest/docs/reference/QueryClient/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tanstack.com/query/latest/docs/reference/QueryClient/</a></p>\n<h3 id=\"react-query-usemutation으로-업데이트한-데이터-바로-보여주기\" style=\"position:relative;\"><a href=\"#react-query-usemutation%EC%9C%BC%EB%A1%9C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EB%A1%9C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0\" aria-label=\"react query usemutation으로 업데이트한 데이터 바로 보여주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-query <code class=\"language-text\">useMutation</code>으로 업데이트한 데이터 바로 보여주기</h3>\n<ol>\n<li>\n<p>queryclient의 <code class=\"language-text\">setQueryData</code> 사용하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> queryClient <span class=\"token operator\">=</span> <span class=\"token function\">useQueryClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> mutation <span class=\"token operator\">=</span> <span class=\"token function\">useMutation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mutationFn</span><span class=\"token operator\">:</span> editTodo<span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onSuccess</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    queryClient<span class=\"token punctuation\">.</span><span class=\"token function\">setQueryData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nmutation<span class=\"token punctuation\">.</span><span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Do the laundry'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">queryKey</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">queryFn</span><span class=\"token operator\">:</span> fetchTodoById<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>queryClient의 <code class=\"language-text\">invalidateQueries</code> 호출</p>\n</li>\n<li>\n<p>클라이언트 데이터 기반의 낙관적 업데이트(Optimistic Update)</p>\n</li>\n</ol>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://tanstack.com/query/latest/docs/framework/react/guides/updates-from-mutation-responses\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tanstack.com/query/latest/docs/framework/react/guides/updates-from-mutation-responses</a></li>\n<li><a href=\"https://pozafly.github.io/react-query/mutation-after-data-update/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://pozafly.github.io/react-query/mutation-after-data-update/</a></li>\n</ul>\n<h3 id=\"css-text-decoration-underline-간격-조정하기\" style=\"position:relative;\"><a href=\"#css-text-decoration-underline-%EA%B0%84%EA%B2%A9-%EC%A1%B0%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"css text decoration underline 간격 조정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS text-decoration underline 간격 조정하기</h3>\n<ol>\n<li><code class=\"language-text\">text-underline-position: under;</code></li>\n<li><code class=\"language-text\">text-underline-offset</code> px 주기 (일부 브라우저 미지원)</li>\n<li><code class=\"language-text\">border-bottom</code>과 <code class=\"language-text\">padding-bottom</code>으로 조정하기</li>\n</ol>\n<blockquote>\n<p><a href=\"https://webstoryboy.co.kr/1688\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">기타 text-decoration 관련 속성들</a></p>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://hianna.tistory.com/680\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hianna.tistory.com/680</a></p>\n<h3 id=\"react-query에서-pagination-query-처리하기\" style=\"position:relative;\"><a href=\"#react-query%EC%97%90%EC%84%9C-pagination-query-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"react query에서 pagination query 처리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-query에서 pagination query 처리하기</h3>\n<blockquote>\n<p>infinite scroll 말고!</p>\n</blockquote>\n<p><code class=\"language-text\">useQuery</code>와 <code class=\"language-text\">keepPreviousData</code> 옵션을 사용할 수 있다.</p>\n<blockquote>\n<p>🧑‍🏫 v5에서는 <code class=\"language-text\">placeholderData</code>에 <code class=\"language-text\">keepPreviousData</code> 를 import해서 사용한다.</p>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://tanstack.com/query/v4/docs/framework/react/guides/paginated-queries\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tanstack.com/query/v4/docs/framework/react/guides/paginated-queries</a></li>\n<li><a href=\"https://tanstack.com/query/v5/docs/framework/react/guides/paginated-queries\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tanstack.com/query/v5/docs/framework/react/guides/paginated-queries</a></li>\n</ul>\n<h3 id=\"shadow-dom을-javascript-없이도-쓸-수-있다\" style=\"position:relative;\"><a href=\"#shadow-dom%EC%9D%84-javascript-%EC%97%86%EC%9D%B4%EB%8F%84-%EC%93%B8-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"shadow dom을 javascript 없이도 쓸 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shadow DOM을 JavaScript 없이도 쓸 수 있다?</h3>\n<p>기존에 Shadow DOM을 사용하려면 JavaScript가 필요했다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-elem'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> shadowRoot <span class=\"token operator\">=</span> host<span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nshadowRoot<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;h1>안녕하세요?&lt;/h1>'</span></code></pre></div>\n<p>그런데 <a href=\"https://web.dev/articles/declarative-shadow-dom?hl=ko\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Declarative Shadow DOM(선언적 Shadow DOM)</a> 기능을 통해 JavaScript 없이도 Shadow DOM을 만들 수 있게 되었다! 😲</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-elem<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">shadowrootmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>open<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">h1 { color: red; }</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">나는 여기서만 빨간색이에요</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"이것저것-모음집\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"이것저것 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것 모음집</h2>\n<hr>\n<ul>\n<li>2D 공간에서의 점은 Pixel 이라 한다. 그럼 3D 공간에서의 점은? -> <strong>Voxel</strong>(Volume + Pixel)</li>\n</ul>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<hr>\n<h3 id=\"git-file-history\" style=\"position:relative;\"><a href=\"#git-file-history\" aria-label=\"git file history permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git File History</h3>\n<p>vscode에서 git diff를 확인하기 좋은 익스텐션!</p>\n<p><strong>Ref</strong> <a href=\"https://marketplace.visualstudio.com/items?itemName=pomber.git-file-history\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://marketplace.visualstudio.com/items?itemName=pomber.git-file-history</a></p>\n<h3 id=\"typescript-57-플랜\" style=\"position:relative;\"><a href=\"#typescript-57-%ED%94%8C%EB%9E%9C\" aria-label=\"typescript 57 플랜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript 5.7 플랜</h3>\n<p>지난주에 TypeScript 5.6 릴리즈를 포스팅했었는데, 바로 5.7 플랜이라니 😵 바쁘다 바빠.</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/microsoft/TypeScript/issues/59905\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/microsoft/TypeScript/issues/59905</a></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<hr>\n<p>밴드 녹음🎤 에 짝꿍 쇼핑🛍️에 가족 일정까지</p>\n<p>바쁘디 바쁘지만 시원해서 좋았던 주말이었다</p>\n<p>9월도 이제 끝나는구만</p>","timeToRead":5,"frontmatter":{"title":"9월 4주차 기록","date":"September 27, 2024","description":"순삭된 9월","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2024-9-week-4/","previous":{"fields":{"slug":"/react/swr-vs-react-query/","langKey":"en","directoryName":"react"},"frontmatter":{"date":"October 11, 2024","description":"swr과 react-query 내가 궁금한 것만 비교 분석하기","title":"swr vs react-query","tags":["react","main"]}},"next":{"fields":{"slug":"/weekly/2024-9-week-2-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"September 21, 2024","description":"찜통 속의 추석, 진짜 가을, 그리고 콘서트 🎵","title":"9월 2-3주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2024-10-week-1-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"October 13, 2024","description":"이제 연휴 끝...","title":"10월 1-2주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2024-9-week-2-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"September 21, 2024","description":"찜통 속의 추석, 진짜 가을, 그리고 콘서트 🎵","title":"9월 2-3주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}