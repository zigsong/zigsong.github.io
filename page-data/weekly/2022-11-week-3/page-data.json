{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2022-11-week-3/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"254fc90e-fcac-5171-9954-f9580afb2e86","excerpt":"Everything, Everywhere, All at once…","html":"<p>Everything, Everywhere, All at once</p>\n<!-- more -->\n<hr>\n<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<h3 id=\"자바스크립트-나누기-부동소수점-이슈\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%82%98%EB%88%84%EA%B8%B0-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90-%EC%9D%B4%EC%8A%88\" aria-label=\"자바스크립트 나누기 부동소수점 이슈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 나누기 부동소수점 이슈</h3>\n<p>자바스크립트에서 소수를 <code class=\"language-text\">12.34</code> -> <code class=\"language-text\">0.1234</code> 형태로 변환하고 싶다면 소수부에 있는 값을 정수부로 올린 후에 나누기 하면 된다.</p>\n<p>그냥 나누기만 하면…</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">77.77</span> <span class=\"token operator\">/</span> <span class=\"token number\">10000</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">0.007776999999999999</span></code></pre></div>\n<p>부동소수점 이슈가 발생하기 때문이다. 😩</p>\n<p>따라서 이렇게 해준다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">77.77</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token number\">10000</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">0.7777</span></code></pre></div>\n<p>자바스크립트의 부동소수점 이슈 해결을 위해 decimal.js, bignumber.js, big.js 등의 라이브러리도 탄생했다.</p>\n<h3 id=\"passive-event\" style=\"position:relative;\"><a href=\"#passive-event\" aria-label=\"passive event permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>passive event</h3>\n<p>브라우저는 기본적으로 이벤트의 <code class=\"language-text\">preventDefault</code>가 실행될지 여부를 항상 확인해야 하기 때문에 성능 상 약간 손해다. <code class=\"language-text\">preventDefault</code>를 호출할 필요가 없다면, <code class=\"language-text\">addEventListener</code>의 세 번째 인자로 <code class=\"language-text\">{ passive: true }</code> 를 넣으면 <code class=\"language-text\">preventDefault</code>를 확인하지 않기 때문에 성능 상 약간의 개선이 이루어진다.</p>\n<blockquote>\n<p>스크롤 이벤트나 터치 이벤트에 유용하게 사용할 수 있다.</p>\n</blockquote>\n<h3 id=\"npmrc\" style=\"position:relative;\"><a href=\"#npmrc\" aria-label=\"npmrc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">.npmrc</code></h3>\n<p><code class=\"language-text\">.npmrc</code>는 npm 환경설정을 할 수 있는 파일이다. 프로젝트 &#x3C; 유저 &#x3C; 전역 &#x3C; 빌트인 범위가 존재한다.</p>\n<p>사내 패키지를 다운받을 때는 <code class=\"language-text\">.npmrc</code>에 <code class=\"language-text\">registry</code>를 등록해줘야한다. 다음 명령어로 등록할 수도 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> <span class=\"token operator\">&lt;</span>registry<span class=\"token operator\">></span> <span class=\"token parameter variable\">--location</span> <span class=\"token operator\">&lt;</span>global<span class=\"token operator\">|</span>user<span class=\"token operator\">|</span>project<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">npm config</code>에 key-value 값을 저장하거나 삭제하는 명령어는 다음과 같다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>key<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span> <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n<span class=\"token function\">npm</span> config get <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span> <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">npm</span> config delete <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span> <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n<span class=\"token function\">npm</span> config list <span class=\"token punctuation\">[</span>--json<span class=\"token punctuation\">]</span> // 모든 config 항목을 볼 수 있다.\n<span class=\"token function\">npm</span> config edit</code></pre></div>\n<p><code class=\"language-text\">.npmrc</code> 에 <code class=\"language-text\">engine-strict=true</code> 를 추가할 수 있다. 이 필드가 <code class=\"language-text\">true</code>라면 사용하는 node, npm이 package.json에 명시한 버전이 아닐 때 <code class=\"language-text\">npm install</code> 등의 명령어를 실행하지 못하게 한다.</p>\n<h3 id=\"react-helmet\" style=\"position:relative;\"><a href=\"#react-helmet\" aria-label=\"react helmet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-helmet</h3>\n<p>document의 head를 변경할 수 있게 해주는 react component다. Helmet을 쓴 자식이 선언한 head가 부모 컴포넌트의 head를 덮어버린다.</p>\n<p>헤더를 변경할 수 있기 때문에 title, og값 등을 적어넣어 SEO에 도움이 된다.</p>\n<p>어차피 빌드파일은 하나이므로, react-helmet을 사용하는 것만으로 크롤러에게 정보를 제공할 수는 없다. 이때는 react-snap 같이 pre-rendering을 해주는 라이브러리를 사용하거나 SSR을 구축해야 한다.</p>\n<h3 id=\"react-router-uselocation\" style=\"position:relative;\"><a href=\"#react-router-uselocation\" aria-label=\"react router uselocation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-router <code class=\"language-text\">useLocation()</code></h3>\n<p>react-router v6를 사용할 때 페이지가 변경될 때마다 특정 동작을 실행하고 싶다면 <code class=\"language-text\">useLocation()</code> 을 사용하면 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useLocation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> location <span class=\"token operator\">=</span> <span class=\"token function\">useLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Google Analytics</span>\n    <span class=\"token function\">ga</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pageview'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"number-input의-step-이동\" style=\"position:relative;\"><a href=\"#number-input%EC%9D%98-step-%EC%9D%B4%EB%8F%99\" aria-label=\"number input의 step 이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>number input의 step 이동</h3>\n<p>아래와 같이 <code class=\"language-text\">input</code> 태그를 사용할 때 5.34를 입력하고 up 버튼을 누르면 6이 되고, down 버튼을 누르면 5가 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>5.34가 input에 들어간 상태에서 up을 누르면 6.34, down을 누르면 6.34가 되길 원한다면 아래와 <code class=\"language-text\">step=\"any\"</code>를 넣고 사용하면 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">step</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step#:~:text=or%20the%20special%20value%20any\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step#:~:text=or%20the%20special%20value%20any</a></p>\n<h3 id=\"region으로-폴딩하기\" style=\"position:relative;\"><a href=\"#region%EC%9C%BC%EB%A1%9C-%ED%8F%B4%EB%94%A9%ED%95%98%EA%B8%B0\" aria-label=\"region으로 폴딩하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">#region</code>으로 폴딩하기</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// anything.tsx</span>\n\n<span class=\"token comment\">// #region 접을 수 있어요</span>\n   <span class=\"token operator\">...</span>\n<span class=\"token comment\">// #endregion</span></code></pre></div>\n<p><code class=\"language-text\">// #region</code>을 사용하면 vscode에서 해당 구간을 폴드할 수 있다! 😲</p>\n<h3 id=\"cra의-tsconfig-참조\" style=\"position:relative;\"><a href=\"#cra%EC%9D%98-tsconfig-%EC%B0%B8%EC%A1%B0\" aria-label=\"cra의 tsconfig 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRA의 tsconfig 참조</h3>\n<p>CRA 웹팩 설정에는 tsconfig를 참조하는 코드가 있다. tsconfig를 기반으로 baseurl을 결정한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// config/modules.js</span>\nconfig <span class=\"token operator\">=</span> ts<span class=\"token punctuation\">.</span><span class=\"token function\">readConfigFile</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>appTsConfig<span class=\"token punctuation\">,</span> ts<span class=\"token punctuation\">.</span>sys<span class=\"token punctuation\">.</span>readFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Otherwise we'll check if there is jsconfig.json</span>\n<span class=\"token comment\">// for non TS projects.</span></code></pre></div>\n<p>baseUrl 항목이 없으면 <code class=\"language-text\">''</code> 가 default다.</p>\n<h3 id=\"pointer-events\" style=\"position:relative;\"><a href=\"#pointer-events\" aria-label=\"pointer events permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pointer-events</h3>\n<p><code class=\"language-text\">position: absolute</code> 밑에 있는 요소에 hover effect를 주고 싶다면, <code class=\"language-text\">position: absolute</code>인 요소들에 <code class=\"language-text\">pointer-events: none</code> 을 주면 된다</p>\n<p>그런데 <code class=\"language-text\">pointer-events: none</code>을 먹인 요소의 일부 자식 요소들에 다시 <code class=\"language-text\">pointer-events</code>를 주고 싶다면?!</p>\n<p><code class=\"language-text\">pointer-events: initial</code>을 주면 살아난다 😎</p>\n<p><strong>Ref</strong> <a href=\"https://stackoverflow.com/questions/65970609/trying-to-use-hover-on-a-element-below-an-absolute-positioned-element\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/65970609/trying-to-use-hover-on-a-element-below-an-absolute-positioned-element</a></p>\n<h3 id=\"타입스크립트-extract\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-extract\" aria-label=\"타입스크립트 extract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 <code class=\"language-text\">Extract</code></h3>\n<p>타입스크립트의 유틸 타입인 <code class=\"language-text\">Extract&lt;Type, Union></code>은 타입에서 뽑을 수 있는 애들만 union으로 뽑아준다.</p>\n<blockquote>\n<p>👩‍🏫 <code class=\"language-text\">Pick</code>과의 차이?</p>\n<ul>\n<li><code class=\"language-text\">Pick</code> 은 객체 형태의 타입에서 key(프로퍼티)로 뽑는다.</li>\n</ul>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union</a></p>\n<h3 id=\"class-transformer\" style=\"position:relative;\"><a href=\"#class-transformer\" aria-label=\"class transformer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>class-transformer</h3>\n<p>plain JS object (리터럴 객체)를 class 인스턴스로 바꾸고 싶을 때 사용한다.</p>\n<p>ex) API 응답값을 json으로 받아 <code class=\"language-text\">JSON.parse()</code> 한 후</p>\n<p>그냥 모든 프로퍼티들을 다 복사해도 되지만, 계층이 복잡할 경우에는 작업이 비싸다.</p>\n<p>→ 이때 <code class=\"language-text\">class-transformer</code> 를 사용한다!</p>\n<p>cf) NestJS에서는 <code class=\"language-text\">class-transformer</code>를 글로벌 설정으로 Controller에서 받는 Request Dto로 변환할 수 있도록 지원하고 있다.</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/typestack/class-transformer#what-is-class-transformer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/typestack/class-transformer#what-is-class-transformer</a></p>\n<hr>\n<h2 id=\"이것저것\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83\" aria-label=\"이것저것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것</h2>\n<ul>\n<li>gap의 단축속성: <code class=\"language-text\">{row-gap}(상하간격) {column-gap}(좌우간격)</code></li>\n</ul>\n<hr>\n<h2 id=\"기타\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80\" aria-label=\"기타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타</h2>\n<h3 id=\"craco-v700-릴리즈\" style=\"position:relative;\"><a href=\"#craco-v700-%EB%A6%B4%EB%A6%AC%EC%A6%88\" aria-label=\"craco v700 릴리즈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>craco v7.0.0 릴리즈</h3>\n<p>현재 Create React App 에 포함된 <code class=\"language-text\">react-script</code>는 v5 버전인데, craco에서 드디어 지원할 수 있게 되었다.</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/dilanx/craco\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/dilanx/craco</a></p>\n<h3 id=\"wasm을-위한-자바스크립트\" style=\"position:relative;\"><a href=\"#wasm%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"wasm을 위한 자바스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WASM을 위한 자바스크립트</h3>\n<p>WebAssembly에서 돌릴 수 있는 Javy라는 도구가 등장했다.</p>\n<p>자바스크립트 코드를 작성하고,</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">newBar</span><span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span>bar <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nShopify <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">main</span><span class=\"token operator\">:</span> foo<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>아래와 같이 WebAssembly 바이너리를 생성한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">javy index.js <span class=\"token parameter variable\">-o</span> destination/index.wasm</code></pre></div>\n<p>그리고 WebAssembly 엔진을 이용하여 실행한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'{ \"n\": 2, \"bar\": \"baz\" }'</span> <span class=\"token operator\">|</span> wasmtime index.wasm\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"foo\"</span>:3,<span class=\"token string\">\"new_bar\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"baz!\"</span><span class=\"token punctuation\">}</span>%</code></pre></div>\n<p>아아… 이제 정말 피할 수 없게 된 것인가.</p>\n<h3 id=\"전-깃허브-cto의-msa-회고\" style=\"position:relative;\"><a href=\"#%EC%A0%84-%EA%B9%83%ED%97%88%EB%B8%8C-cto%EC%9D%98-msa-%ED%9A%8C%EA%B3%A0\" aria-label=\"전 깃허브 cto의 msa 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전 깃허브 CTO의 MSA 회고</h3>\n<p>MSA 전환 시 우려사항</p>\n<ul>\n<li>(특이하게 IT출신 CEO가 이끌지 않는 한) 인프라는 항상 우선순위에서 밀려남(get the short end of priority stick)</li>\n<li>서비스가 너무 많으면 일반적으로 소유권 문제 및 경계 문제가 생김</li>\n<li>수많은 마이크로서비스를 처리하기 위해 더 많은 도구를 도입함</li>\n<li>가장 중요한 것은 라이브러리나 SDK가 되었어야할 각 마이크로서비스들이 프로덕션에 위험을 초래함</li>\n</ul>\n<p>그래서 다음과 같이 추천한다고 한다.</p>\n<ul>\n<li>가능하면 최대한 오래 Monolith를 유지</li>\n<li>서비스는 인프라에 필요한 것에서 시작하고, 앱 개발쪽에서 시작하지 말 것</li>\n<li>Mono를 쪼개야 한다면, 작은 서비스들이 아닌 큰 앱들로 분해할 것</li>\n<li>각 새로운 앱은 회사내의 가상 벽이라고 생각할 것</li>\n<li>가능하다면 마이크로서비스 대신 라이브러리를 선호</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://news.hada.io/topic?id=7839\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://news.hada.io/topic?id=7839</a></p>\n<h3 id=\"whats-new-in-typescript-49\" style=\"position:relative;\"><a href=\"#whats-new-in-typescript-49\" aria-label=\"whats new in typescript 49 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What’s New in TypeScript 4.9?</h3>\n<p><strong>💡 The satisfies Operator</strong></p>\n<p><code class=\"language-text\">satisfies</code> 키워드를 이용하면 객체의 key-value 타입을 잃지 않을 수 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\n    c<span class=\"token operator\">:</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ❌ We get the error Type 'string' is not assignable to type 'number'</span>\n    d<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span>\n<span class=\"token punctuation\">}</span> satisfies Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ✅ We are not losing any type inferance information</span>\n<span class=\"token comment\">// typeof foo is</span>\n<span class=\"token comment\">// const foo: {</span>\n<span class=\"token comment\">//    a: number;</span>\n<span class=\"token comment\">//    b: number;</span>\n<span class=\"token comment\">//    c: number;</span>\n<span class=\"token comment\">//    d: string;</span>\n<span class=\"token comment\">// }</span></code></pre></div>\n<p><strong>💡 Support for auto-accessor fields</strong>\n자바스크립트 데코레이터가 stage 3에 올라옴에 따라, 프로퍼티 자동 접근자가 추가될 예정이다.</p>\n<p>타입스크립트에서도 이를 지원한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n  accessor a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ✅ it works and prints 'a'</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 <code class=\"language-text\">a</code> 프로퍼티를 별도의 boilerplate 없이 사용할 수 있다.</p>\n<p><strong>💡 Improve checking of in operator</strong></p>\n<p><code class=\"language-text\">typeof</code> 연산자와 함께 <code class=\"language-text\">in</code> 연산자를 활용하여 타입을 좁힐 수 있다.</p>\n<p><code class=\"language-text\">typeof</code>을 사용하면, 객체의 프로퍼티 값의 타입까지 체크해줘야 했다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>vehicle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ✅ Works, item.wheels is now of type number</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"wheels\"</span> <span class=\"token keyword\">in</span> vehicle <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> vehicle<span class=\"token punctuation\">.</span>wheels <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">the entity has </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>vehicle<span class=\"token punctuation\">.</span>wheels<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> wheels</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> wheels<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> topSpeed<span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>새로운 <code class=\"language-text\">in</code> 연산자는 <code class=\"language-text\">typeof</code>을 대체할 수 있다!</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>vehicle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ✅ Works, item.wheels is now of type unknown</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"wheels\"</span> <span class=\"token keyword\">in</span> vehicle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">the entity has </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>vehicle<span class=\"token punctuation\">.</span>wheels<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> wheels</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> wheels<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> topSpeed<span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>또, <code class=\"language-text\">key in obj</code>는 이제 <code class=\"language-text\">string | number | symbol</code>로 추론된다!</p>\n</blockquote>\n<p><strong>💡 Disallow comparison against NaN</strong></p>\n<p>IEEE 754에 따르면 <code class=\"language-text\">NaN</code>과 <code class=\"language-text\">NaN</code>은 같지 않다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">NaN</span> <span class=\"token operator\">!==</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>타입스크립트 4.9부터는, <code class=\"language-text\">NaN</code> 값을 비교할 경우 컴파일러가 에러를 뱉는다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">logValue</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> Number <span class=\"token operator\">|</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ❌ Error: This condition will always return 'true'</span>\n  <span class=\"token comment\">// Did you mean '!Number.isNaN(value)'</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">!==</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It is NaN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://betterprogramming.pub/whats-new-in-typescript-4-9-6bce2387aa31\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://betterprogramming.pub/whats-new-in-typescript-4-9-6bce2387aa31</a></p>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>거의 뭐 인생에서 가장 큰 이벤트 중 하나라고 할 수 있는 사건이 지났다… 아니 진행중… 그치만 잘 지내는중 😎👍</p>","timeToRead":9,"frontmatter":{"title":"11월 3주차 기록","date":"November 19, 2022","description":"weekly-i-learned","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2022-11-week-3/","previous":{"fields":{"slug":"/weekly/2022-11-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 26, 2022","description":"weekly-i-learned","title":"11월 4주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2022-11-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 13, 2022","description":"weekly-i-learned","title":"11월 2주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2022-11-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 26, 2022","description":"weekly-i-learned","title":"11월 4주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2022-11-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"November 13, 2022","description":"weekly-i-learned","title":"11월 2주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}