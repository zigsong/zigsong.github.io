{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2024-2-week-4/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"ccab8304-8266-5611-8a03-1c3ecf0a6862","excerpt":"배워가기 Test Mocking 항상 나쁠까? 테스트에서 mocking은 독립적인 테스트를 위해 개발자가 값을 임의로 설정하는 것을 의미하며, 테스트에서 필수 불가결한 요소중 하나다. 테스트에서 mocking…","html":"<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<hr>\n<h3 id=\"test-mocking-항상-나쁠까\" style=\"position:relative;\"><a href=\"#test-mocking-%ED%95%AD%EC%83%81-%EB%82%98%EC%81%A0%EA%B9%8C\" aria-label=\"test mocking 항상 나쁠까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Mocking 항상 나쁠까?</h3>\n<p>테스트에서 mocking은 독립적인 테스트를 위해 개발자가 값을 임의로 설정하는 것을 의미하며, 테스트에서 필수 불가결한 요소중 하나다.</p>\n<p>테스트에서 mocking은 다음과 같은 장점을 갖는다.</p>\n<ul>\n<li>테스트 하고자 하는 모듈을 다른 컴포넌트나 디펜던시들에서 독립적으로 분리할 수 있다.</li>\n<li>네트워크 요청이나 데이터베이스 쿼리 등을 대체하여 테스트 실행을 빠르게 할 수 있ㄷ.</li>\n<li>예측 가능하고 일관된 데이터를 사용하여 테스트가 쉬워진다.</li>\n</ul>\n<p>하지만 mocking 데이터를 오남용하는 것은 다음과 같은 문제를 초래할 수 있다.</p>\n<ul>\n<li>mocking 데이터와 실제 데이터 사이의 간극을 매우지 못할 수 있으며, 테스트에서 거짓 양성 또는 거짓 음성을 유발한다.</li>\n<li>실제 동작을 테스트하지 못하므로 테스트의 커버리지와 신뢰성을 낮춘다.</li>\n<li>mock 데이터를 만드는 데 외부 코드를 사용하여 테스트의 유지보수를 어렵게 하며 복잡성을 높인다.</li>\n</ul>\n<p>-> 결국 테스트에서 Mocking도 아무렇게나 사용하지 말고 꼭 필요한 순간에, 적절하게 사용해야 한다~</p>\n<p><strong>Ref</strong> <a href=\"https://medium.com/@queenskisivuli/why-mocking-data-is-a-bad-practice-for-testing-a20d2d7104aa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/@queenskisivuli/why-mocking-data-is-a-bad-practice-for-testing-a20d2d7104aa</a></p>\n<h3 id=\"패턴-매칭\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%84%B4-%EB%A7%A4%EC%B9%AD\" aria-label=\"패턴 매칭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패턴 매칭</h3>\n<p>데이터를 검색할 때 특정 패턴이 출현하는지, 또한 어디에 출현하는지 등을 특정하는 방법의 일종</p>\n<p>패턴 매칭은 검색, 분석, 정규화, 추출 등 다양한 응용 분야에서 사용하고 있으며, 자바스크립트에서도 정규표현식을 활용하여 문자열에서 특정 패턴을 찾아 검색, 추출, 대체 등을 수행할 때 사용되는 개념이다.</p>\n<p>직접 패턴 매칭 기능을 활용하면 데이터의 값, 자료구조, 타입 등 여러가지 유형의 패턴으로 검색을 수행할 수 있고, 특정 데이터 구조에서 원하는 값을 추출할 수도 있다. 이는 적은 양의 코드로 많은 양의 데이터를 읽고 다루기에 아주 좋은 표현 방법이며, 이로 인해 코드의 가독성과 유지보수성도 향상시킬 수 있다.</p>\n<p><strong>Ref</strong> <a href=\"https://www.kimcoder.io/blog/ts-pattern\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.kimcoder.io/blog/ts-pattern</a></p>\n<h3 id=\"html-aside-태그\" style=\"position:relative;\"><a href=\"#html-aside-%ED%83%9C%EA%B7%B8\" aria-label=\"html aside 태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html <code class=\"language-text\">&lt;aside></code> 태그</h3>\n<p>조금 떨어진 위치에 있는 컨텐츠를 표시할 때 사용한다. aside 컨텐츠는 이를 둘러싼 컨텐츠와 간접적으로 연결되어 있어야 한다.</p>\n<p>cf) 브라우저에서 뭔가 특별한 시각적 요소로 처리하는 것은 아니다.</p>\n<p><strong>Ref</strong> <a href=\"https://www.w3schools.com/tags/tag_aside.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.w3schools.com/tags/tag_aside.asp</a></p>\n<h3 id=\"b-vs-strong\" style=\"position:relative;\"><a href=\"#b-vs-strong\" aria-label=\"b vs strong permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;b></code> vs <code class=\"language-text\">&lt;strong></code></h3>\n<ul>\n<li><code class=\"language-text\">&lt;b></code>: 시각적</li>\n<li><code class=\"language-text\">&lt;strong></code>: 시각적 + 의미적</li>\n</ul>\n<blockquote>\n<p>👩‍🏫 <code class=\"language-text\">&lt;b></code>를 사용해 텍스트를 꾸미면 안된다. 대신 CSS font-weight를 사용해 굵은 글씨체를 적용하거나, <code class=\"language-text\">&lt;strong></code> 요소를 사용해 특별히 중요한 텍스트를 나타낸다.</p>\n</blockquote>\n<blockquote>\n<ul>\n<li><code class=\"language-text\">&lt;strong></code> : 중요한 글</li>\n<li><code class=\"language-text\">&lt;em></code> : 약간의 강조가 필요한 글</li>\n<li><code class=\"language-text\">&lt;mark></code> : 관련성이 있는 글</li>\n<li><code class=\"language-text\">&lt;strong></code> : 아무런 의미도 갖지 않으므로 다른 요소가 적합하지 않을 때만 사용한다.</li>\n</ul>\n</blockquote>\n<p><code class=\"language-text\">&lt;mark></code>라니… 오늘도 html 태그 하나 배워가내…</p>\n<p><strong>Ref</strong> <a href=\"https://stackoverflow.com/questions/271743/whats-the-difference-between-b-and-strong-i-and-em\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/271743/whats-the-difference-between-b-and-strong-i-and-em</a></p>\n<h3 id=\"rhfreact-hook-form-이모저모\" style=\"position:relative;\"><a href=\"#rhfreact-hook-form-%EC%9D%B4%EB%AA%A8%EC%A0%80%EB%AA%A8\" aria-label=\"rhfreact hook form 이모저모 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RHF(React-Hook-Form) 이모저모</h3>\n<ul>\n<li>\n<p>RHF의 <code class=\"language-text\">formSubmitting</code> 프로퍼티</p>\n<ul>\n<li>form이 submit될 때까지 다른 동작을 하지 못하게끔 제어할 수 있다</li>\n</ul>\n</li>\n<li>\n<p>RHF의 동작 방식</p>\n<ul>\n<li>비제어 방식으로 동작하기 때문에 성능이 좋다 (ref로 input등을 관리)\n<ul>\n<li>🤔 왜?</li>\n<li>제어 컴포넌트는 React에서 form의 값을 제어한다는 의미로, 사용자가 input에 입력할 때마다 리렌더링이 발행하기 때문에 성능상의 이슈가 발생할 수 있다. (그래서 throttling이나 debouncing을 사용하기도 한다.)</li>\n</ul>\n</li>\n<li><code class=\"language-text\">mode</code>로 동작 방식을 바꿀 수도 있다 (<code class=\"language-text\">{ mode: ‘onChange’ }</code>)</li>\n<li><code class=\"language-text\">watch</code>를 사용하여 원하는 값이 바뀌었을 때 reaction을 할 수 있다</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong>👩‍🏫 form에 제어 컴포넌트 vs 비제어 컴포넌트 어떻게 사용하는 게 좋을까?</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>제어 컴포넌트</strong></p>\n<ul>\n<li>유효성 검사</li>\n<li>실시간으로 필드 검사</li>\n<li>조건에 따라 버튼의 활성화 여부가 바뀌는 경우</li>\n</ul>\n<p><strong>비제어 컴포넌트</strong></p>\n<ul>\n<li>값을 한번만 가져오면 될 때</li>\n<li>제출 시에만 유효성 검증을 할 때</li>\n</ul>\n</blockquote>\n<ul>\n<li>RHF과 다른 UI library를 같이 쓰고 싶다면\n<ul>\n<li><code class=\"language-text\">&lt;Controller></code> 컴포넌트를 사용하여 컨트롤할 수 있다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"매번-헷갈리는-packagejson-버전-표시\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EB%B2%88-%ED%97%B7%EA%B0%88%EB%A6%AC%EB%8A%94-packagejson-%EB%B2%84%EC%A0%84-%ED%91%9C%EC%8B%9C\" aria-label=\"매번 헷갈리는 packagejson 버전 표시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매번 헷갈리는 package.json 버전 표시</h3>\n<ul>\n<li><code class=\"language-text\">~version</code>\n<ul>\n<li>Approximately equivalent to version</li>\n<li>patch 버전 촥촥 올라갈 수 있다. (major/minor ❌)</li>\n<li>예시: ~1.2.3 일 때 npm i 하면\n<ul>\n<li>버전이 1.2.3 일 수 있음 🙆‍♀️</li>\n<li>버전이 1.2.300 일 수 있음 🙆‍♀️</li>\n<li>버전이 1.3.0 일 수 없음 ❌</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class=\"language-text\">^version</code>\n<ul>\n<li>Compatible with version\n<ul>\n<li>minor/patch 버전 촥촥 올라갈 수 있다.. (major ❌)</li>\n<li>예시: ^1.2.3 일 때 npm i 하면\n<ul>\n<li>버전이 1.2.3 일 수 있음 🙆‍♀️</li>\n<li>버전이 1.2.300 일 수 있음 🙆‍♀️</li>\n<li>버전이 1.3.0 일 수 있음 🙆‍♀️</li>\n<li>버전이 2.0.0 일 수 없음 ❌</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>메이저 버전이 0 이라면 캐럿(^)을 이용하더라도 패치버전만 올리는 것을 허용합니다. 이유는 메이저 버전이 0 일 때는 마이너 버전이 올라가면서 Breaking Changes가 자주 일어나는게 보편적이기 때문이다.</p>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://jeonghwan-kim.github.io/series/2019/12/09/frontend-dev-env-npm.html#55-%EB%B2%84%EC%A0%84%EC%9D%98-%EB%B2%94%EC%9C%84\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jeonghwan-kim.github.io/series/2019/12/09/frontend-dev-env-npm.html#55-버전의-범위</a></p>\n<h3 id=\"validitystate\" style=\"position:relative;\"><a href=\"#validitystate\" aria-label=\"validitystate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ValidityState</h3>\n<p>제한 조건에 따라 요소가 갖게 되는 검증 상태. 왜 요소의 값이 검증에 실패했는지 알려준다.</p>\n<p>cf) ValidityState의 <strong>valueMissing</strong></p>\n<ul>\n<li>요소에 <code class=\"language-text\">required</code> 속성이 지정되어 있다.</li>\n<li>값이 없을 때 <code class=\"language-text\">true</code>가 된다.</li>\n</ul>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/ValidityState</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/ValidityState/valueMissing</a></li>\n</ul>\n<h3 id=\"useid\" style=\"position:relative;\"><a href=\"#useid\" aria-label=\"useid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useId</h3>\n<p>React 18 버전부터 uuid를 생성해주는 hook이 생겼다, 이름하야 <code class=\"language-text\">useId</code></p>\n<p>더 이상 외부 라이브러리에 의존할 필요도 없고, <code class=\"language-text\">nextId++</code>와 같이 앱의 메모리에서 숫자를 하나씩 늘려 id를 배정하는 generator 함수도 필요없다고 한다. <code class=\"language-text\">useId</code>가 incrementing counter보다 나은 점은, <code class=\"language-text\">useId</code>는 서버 렌더링도 지원하기 때문이라는 😲</p>\n<blockquote>\n<p>IE가 아니라면, native API로 사용할 수 있는 Crypto의 <code class=\"language-text\">randomUUID()</code> 메서드도 있다.\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID</a></p>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://react.dev/reference/react/useId\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://react.dev/reference/react/useId</a></p>\n<h3 id=\"ux-라이팅-가이드라인---한-문장일-경우에는-마침표를-사용하지-않는다\" style=\"position:relative;\"><a href=\"#ux-%EB%9D%BC%EC%9D%B4%ED%8C%85-%EA%B0%80%EC%9D%B4%EB%93%9C%EB%9D%BC%EC%9D%B8---%ED%95%9C-%EB%AC%B8%EC%9E%A5%EC%9D%BC-%EA%B2%BD%EC%9A%B0%EC%97%90%EB%8A%94-%EB%A7%88%EC%B9%A8%ED%91%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\" aria-label=\"ux 라이팅 가이드라인   한 문장일 경우에는 마침표를 사용하지 않는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UX 라이팅 가이드라인 - ‘한 문장일 경우에는 마침표를 사용하지 않는다’</h3>\n<p>예시)</p>\n<ul>\n<li>\n<p>은행을 선택해주세요. ❌</p>\n</li>\n<li>\n<p>은행을 선택해주세요 ✅</p>\n</li>\n<li>\n<p>사용자의 텍스트 스캐닝을 돕고</p>\n</li>\n<li>\n<p>텍스트를 간결하고 가독성 좋게 만들기 위해서</p>\n</li>\n</ul>\n<p>라고 한다…</p>\n<p>잘 모르겠음. 영문 vs 한글의 차이가 있는 것 같기도.</p>\n<p><strong>Ref</strong> <a href=\"https://m3.material.io/foundations/content-design/style-guide/grammar-and-punctuation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://m3.material.io/foundations/content-design/style-guide/grammar-and-punctuation</a></p>\n<h2 id=\"이것저것-모음집\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"이것저것 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것 모음집</h2>\n<hr>\n<ul>\n<li><code class=\"language-text\">Object.isFrozen()</code> - 객체가 <code class=\"language-text\">Object.freeze()</code>되었는지 알려준다. 참으로 직관적인 네이밍. <code class=\"language-text\">freeze()</code>시킬 때와 같은 동작으로 검사하겠지? (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n</ul>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<hr>\n<h3 id=\"safetest-넷플릭스의-혼합-e2e-testing-library\" style=\"position:relative;\"><a href=\"#safetest-%EB%84%B7%ED%94%8C%EB%A6%AD%EC%8A%A4%EC%9D%98-%ED%98%BC%ED%95%A9-e2e-testing-library\" aria-label=\"safetest 넷플릭스의 혼합 e2e testing library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SafeTest: 넷플릭스의 혼합 E2E Testing Library</h3>\n<p>넷플릭스에서 Playwright + Jest/Vitest + React를 혼합한 E2E Testing Library를 공개했다.</p>\n<ul>\n<li>테스트 러너이자</li>\n<li>브라우저 자동화 라이브러리이자</li>\n<li>UI 프레임워크</li>\n</ul>\n<p>인… 아주 멋진…</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> describe<span class=\"token punctuation\">,</span> it<span class=\"token punctuation\">,</span> expect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'safetest/jest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'safetest/react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Header <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/header'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders the app'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text=Welcome to The App'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render a regular header'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text=Logout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text=admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toBeVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchImageSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render an admin header'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token attr-name\">admin</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text=Logout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text=admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchImageSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 작성하면, SafeTest에서 다음과 같은 구조로 테스트를 만들어준다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"App\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"renders the app\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"can render a regular header\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"can render an admin header\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>꽤 멋져보이긴 하는데, 그렇게 획기적인지는 모르겠다. 그냥 배워야 할 게 하나 더 생긴 느낌</p>\n<p>(안 배울 예정)</p>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://netflixtechblog.com/introducing-safetest-a-novel-approach-to-front-end-testing-37f9f88c152d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://netflixtechblog.com/introducing-safetest-a-novel-approach-to-front-end-testing-37f9f88c152d</a></li>\n<li><a href=\"https://www.npmjs.com/package/safetest#how-safetest-works\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.npmjs.com/package/safetest#how-safetest-works</a></li>\n</ul>\n<h3 id=\"tc39-stage3---set의-새로운-feature들\" style=\"position:relative;\"><a href=\"#tc39-stage3---set%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-feature%EB%93%A4\" aria-label=\"tc39 stage3   set의 새로운 feature들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TC39 stage3 - Set의 새로운 feature들</h3>\n<p>주로 두 Set(집합) 객체 사이의 관계, 연관성을 기반으로 한 기능들로,</p>\n<ul>\n<li><code class=\"language-text\">union</code></li>\n<li><code class=\"language-text\">intersection</code></li>\n<li><code class=\"language-text\">difference</code></li>\n<li><code class=\"language-text\">isSubsetOf</code></li>\n</ul>\n<p>등이 포함되었다.</p>\n<p>근데 왜 원래 있는 줄 알았지. 역시 생길 법 했나보다.</p>\n<p><del>집합 너무 어려워요…</del></p>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#set_composition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#set_composition</a></li>\n</ul>\n<h3 id=\"react-labs-2024\" style=\"position:relative;\"><a href=\"#react-labs-2024\" aria-label=\"react labs 2024 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Labs 2024</h3>\n<ul>\n<li>react 19</li>\n<li>react labs</li>\n<li>react canaries</li>\n<li>react conf</li>\n</ul>\n<p>모조리 공지</p>\n<ol>\n<li>React도 Canary가 있는 줄 몰랐네. 아니 이제 만들었다는 소리인 것 같다 ㅎ</li>\n<li>React 19라니. 아직 18도 제대로 안 써봤는데. 이게 16학번으로 입학하여 어느덧 19학번을 맞이하는 느낌인 걸까? 왠지 섭섭해~</li>\n</ol>\n<p><strong>Ref</strong> <a href=\"https://react.dev/blog/2024/02/15/react-labs-what-we-have-been-working-on-february-2024\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://react.dev/blog/2024/02/15/react-labs-what-we-have-been-working-on-february-2024</a></p>\n<h3 id=\"2024-react-trend\" style=\"position:relative;\"><a href=\"#2024-react-trend\" aria-label=\"2024 react trend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2024 React Trend</h3>\n<ul>\n<li>Astro (React와 함께)</li>\n<li>인증 (React에서)</li>\n<li>tRPC를 이용한 풀스택 React 애플리케이션</li>\n<li>React 서버 컴포넌트와 Next.js</li>\n<li>TanStack Router for SPA React</li>\n<li>Vercel, React를 Edge로 밀어붙이다</li>\n<li>React용 번들러: Turbopack 대 Vite</li>\n<li>React 컴파일러 (React Forget으로 알려짐)</li>\n<li>Biome</li>\n<li>Headless UI 라이브러리 for React</li>\n</ul>\n<p>React Forget 이름부터 뭔가 간지나잖아. 망할 <code class=\"language-text\">useCallback</code>과 <code class=\"language-text\">useMemo</code>의 늪을 벗어날 수 있다니?</p>\n<p>그런데 그러면 필시 React 19를 써봐야 할지어니</p>\n<p><strong>Ref</strong> <a href=\"https://news.hada.io/topic?id=13489\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://news.hada.io/topic?id=13489</a></p>\n<h3 id=\"2024-vue-trend\" style=\"position:relative;\"><a href=\"#2024-vue-trend\" aria-label=\"2024 vue trend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2024 Vue Trend</h3>\n<p>2월 말이나 돼서야 여기저기서 ‘우리의 올해 목표’ 따위를 공개하는 시즌이 된 것인가?</p>\n<p><strong>Ref</strong> <a href=\"https://velog.io/@sehyunny/insights-and-trends-in-vuejs-2024\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@sehyunny/insights-and-trends-in-vuejs-2024</a></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<hr>\n<p>인간은 적응의 동물… 우테코 코드리뷰에 일주일 만에 그럭저럭 적응해버린 나</p>\n<p>이렇게 많은 일을 하려면 많은 체력이 뒷받침되어야 해서 매일 나가지만 폭설 또는 그 여파로 꽁꽁 얼어버린 바닥에 좌절하는 나</p>\n<p>2n년 차에 서울이 지긋지긋해져 경기도에 살겠다고 다짐한지 한 달도 지나지 않았건만 무시무시한 8호선을 경험하고 대체 이 나라 어디서 살아야 하나 다시금 고민에 빠진 나</p>\n<p>한국 살기 너무 힘들다</p>","timeToRead":10,"frontmatter":{"title":"2월 4주차 기록","date":"February 24, 2024","description":"요즘 건강 좋은걸 근데 날씨가","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2024-2-week-4/","previous":{"fields":{"slug":"/weekly/2024-2-week-5/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 02, 2024","description":"공연 끝!","title":"2월 5주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2024-2-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 18, 2024","description":"투잡은 결코 빡세지","title":"2월 3주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2024-2-week-5/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 02, 2024","description":"공연 끝!","title":"2월 5주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2024-2-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 18, 2024","description":"투잡은 결코 빡세지","title":"2월 3주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}