{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2023-4-week-3/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"95ba8bc7-65ed-59fd-a64d-1c944c9cace1","excerpt":"감기 돌았니 🤒 배워가기 ES6 Module의 순환 참조 ES6 Module은 cyclic dependencies(순환 참조)를 지원하도록 설계되었다. 순환 참조는 근본적으로 나쁜 것이 아니다. 특히 객체를 다루면서, 이러한 의존성이 필요할 수도 있다. 예를 들어, 몇몇 트리에서(ex…","html":"<p>감기 돌았니 🤒</p>\n<!-- more -->\n<hr>\n<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<h3 id=\"es6-module의-순환-참조\" style=\"position:relative;\"><a href=\"#es6-module%EC%9D%98-%EC%88%9C%ED%99%98-%EC%B0%B8%EC%A1%B0\" aria-label=\"es6 module의 순환 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 Module의 순환 참조</h3>\n<p>ES6 Module은 cyclic dependencies(순환 참조)를 지원하도록 설계되었다.</p>\n<p>순환 참조는 근본적으로 나쁜 것이 아니다. 특히 객체를 다루면서, 이러한 의존성이 필요할 수도 있다. 예를 들어, 몇몇 트리에서(ex. DOM 문서) 부모는 자식을 가리키고 자식은 다시 부모를 가리키는 경우가 있다.</p>\n<p>라이브러리들에서는 섬세한 설계로 순환 참조를 피할 수 있다. 하지만 규모가 큰 시스템에서, 특히 리팩토링 시 순환 참조가 발생할 수 있다. 이때 모듈 시스템이 순환 참조를 지원하는 것이 좋다.</p>\n<p>Node.js에서 순환적인 <code class=\"language-text\">require()</code>가 발생하면, 의존하는 대상이 반환될 때까지 모듈은 실행을 끝내지 않는다. (예제는 <a href=\"https://nodejs.org/api/modules.html#modules_cycles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js 문서</a> 에서 확인 가능). 다만 순환 참조 과정에서 import된 값이 아직 초기화되지 않아 undefined일 때 문제가 발생할 수 있는 것이다!</p>\n<p><strong>Ref</strong> <a href=\"https://exploringjs.com/es6/ch_modules.html#sec_design-goals-es6-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://exploringjs.com/es6/ch_modules.html#sec_design-goals-es6-modules</a></p>\n<h3 id=\"rtl에서는-render-함수-대신-screen을-사용해요\" style=\"position:relative;\"><a href=\"#rtl%EC%97%90%EC%84%9C%EB%8A%94-render-%ED%95%A8%EC%88%98-%EB%8C%80%EC%8B%A0-screen%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%9A%94\" aria-label=\"rtl에서는 render 함수 대신 screen을 사용해요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RTL에서는 <code class=\"language-text\">render</code> 함수 대신 <code class=\"language-text\">screen</code>을 사용해요</h3>\n<p>Kent C Dodds에 따르면, RTL에서는 <code class=\"language-text\">render</code> 함수 대신 <code class=\"language-text\">screen</code>을 쓰는 것이 권장된다.</p>\n<p><code class=\"language-text\">screen</code>을 사용하면 필요한 쿼리를 추가/제거할 때 <code class=\"language-text\">render</code> 호출의 destructure(?)를 최신 상태로 유지할 필요가 없다. 에디터가 알아서 자동완성해줄 것이다.</p>\n<p>이게 대체 무슨 뜻인가 했더니 나 말고도 이해 못한 사람들이 있어서 다행이다. 👉 <a href=\"https://stackoverflow.com/questions/61482418/react-testing-library-screen-vs-render-queries\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/61482418/react-testing-library-screen-vs-render-queries</a></p>\n<p><code class=\"language-text\">render</code>는 구조 분해 할당할 수 있는 객체를 제공한다. 예를 들면 이렇게.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getByText <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>만약 다른 쿼리를 쓰고 싶다면, 이 구조 분해 할당 객체를 업데이트해야 한다. 예를 들면 이렇게.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getByText<span class=\"token punctuation\">,</span> getByLabelText <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>근데 <code class=\"language-text\">screen</code> 을 사용하면, 바로 객체에서 함수를 사용할 수 있다. 이렇게. <code class=\"language-text\">screen.getByText</code>, <code class=\"language-text\">screen.getByLabelText</code></p>\n<p>👉 그래서 항상 최신 상태의 쿼리를 날릴 수 있다!</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ❌</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getByRole <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Example</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> errorMessageNode <span class=\"token operator\">=</span> <span class=\"token function\">getByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ✅</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Example</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> errorMessageNode <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://kentcdodds.com/blog/common-mistakes-with-react-testing-library#not-using-screen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://kentcdodds.com/blog/common-mistakes-with-react-testing-library#not-using-screen</a></p>\n<h3 id=\"npx-command-options\" style=\"position:relative;\"><a href=\"#npx-command-options\" aria-label=\"npx command options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npx command options</h3>\n<ul>\n<li><code class=\"language-text\">-p</code> - npm에서는 <code class=\"language-text\">--parseable</code>의 약자지만, npx에서는 <code class=\"language-text\">--package</code>의 약자다.</li>\n<li><code class=\"language-text\">-c</code> - <code class=\"language-text\">--call</code>의 약자로, 뒤에 실행하고자 하는 커맨트가 따라붙는다 (command의 약자가 아니었다니)\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx -- <span class=\"token operator\">&lt;</span>pkg<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>@<span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\nnpx <span class=\"token parameter variable\">--package</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>pkg<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>@<span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> -- <span class=\"token operator\">&lt;</span>cmd<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\nnpx <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'&lt;cmd> [args...]'</span>\nnpx <span class=\"token parameter variable\">--package</span><span class=\"token operator\">=</span>foo <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'&lt;cmd> [args...]'</span></code></pre></div>\n</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://docs.npmjs.com/cli/v9/commands/npx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.npmjs.com/cli/v9/commands/npx</a></p>\n<h3 id=\"resizeobserver\" style=\"position:relative;\"><a href=\"#resizeobserver\" aria-label=\"resizeobserver permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ResizeObserver</h3>\n<p><code class=\"language-text\">Entry.contentBoxSize</code>의 하위 프로퍼티로 <code class=\"language-text\">ResizeObserver</code>가 있다.</p>\n<ul>\n<li><code class=\"language-text\">blockSize</code>: width 에 대응되는 값</li>\n<li><code class=\"language-text\">inlineSize</code>: height에 대응되는 값</li>\n</ul>\n<p>👩‍🏫 <code class=\"language-text\">Entry.borderBoxSize</code> 도 동일하다. 다만 context box인지 border box인지만 다르다.</p>\n<h3 id=\"rpcremote-procedure-call\" style=\"position:relative;\"><a href=\"#rpcremote-procedure-call\" aria-label=\"rpcremote procedure call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RPC(Remote Procedure Call)</h3>\n<p>RPC(Remote Procedure Call)는 프로세스간 통신을 위해 사용하는 <strong>IPC</strong>(Inter Process Communication) 방법의 한 종류다.</p>\n<p>💡 참고: <strong>gRCP</strong> (Google Remote Procedure Call)</p>\n<ul>\n<li>구글에서 개발한 최신 오픈 소스 고성능 RPC 프레임워크</li>\n<li>기본적인 개념은 RPC와 동일, HTTP/2 기반으로 양방향 스트리밍 지원</li>\n</ul>\n<h3 id=\"node-16-eol-일정-연기\" style=\"position:relative;\"><a href=\"#node-16-eol-%EC%9D%BC%EC%A0%95-%EC%97%B0%EA%B8%B0\" aria-label=\"node 16 eol 일정 연기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node 16 EOL 일정 연기</h3>\n<p><a href=\"https://endoflife.date/nodejs#:~:text=The%20End%2Dof%2DLife%20date%20for%20Node.js%2016%20was%20moved%20forward%20by%20seven%20months%20to%20coincide%20with%20the%20end%20of%20support%20of%20OpenSSL%201.1.1%20on%20September%2011th%2C%202023.\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">node 16 EOL</a>(end of life)의 일정이 기존보다 7개월 앞당겨진 2023년 9월 11일로 변경되었다. 이는 OpenSSL 1.1.1의 지원 종료 일정과 맞추기 위한 결정이라고 한다. 이에 따라 vite도 버전 5부터 node 14, 16의 지원을 모두 중단하기로 1차 합의되었다. <a href=\"https://github.com/vitejs/vite/discussions/12466#:~:text=We%27ve%20been%20aligning,also%20be%20dropped.\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vite 5 Discussion</a></p>\n<h3 id=\"불용어-noise-word-stopword\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EC%9A%A9%EC%96%B4-noise-word-stopword\" aria-label=\"불용어 noise word stopword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불용어 (noise word, stopword)</h3>\n<p>불용어란 “별 의미가 없는 단어”로, 관사, 전치사, 조사, 접속사, 의미없이 붙인 문자 숫자 등을 가리킨다.</p>\n<ul>\n<li>자연어 처리에서 불용어\n<ul>\n<li>빈도는 높으나 의미가 없기에 제거 처리해주어야 한다.</li>\n</ul>\n</li>\n<li>소프트웨어 네이밍에서 불용어\n<ul>\n<li>a1, a2 / productInfo, productData 와 같이 의도가 불분명한 네이밍은 지양해야한다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"이것저것\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83\" aria-label=\"이것저것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것</h2>\n<ul>\n<li>Sanity Test - 공식적인 테스트 수행 전에 이번에 변경된 부분(또는 결함 수정한 부분)에 대해 빠르게 확인하는 테스트</li>\n<li>CSS <code class=\"language-text\">touch-action</code> 속성으로 터치 제스처를 제한할 수 있다. (e.g. <code class=\"language-text\">touch-action: pan-y;</code> 상하스크롤만 허용 (zoom pinch 방지 가능))</li>\n</ul>\n<hr>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<h3 id=\"bard-국내-상륙\" style=\"position:relative;\"><a href=\"#bard-%EA%B5%AD%EB%82%B4-%EC%83%81%EB%A5%99\" aria-label=\"bard 국내 상륙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bard 국내 상륙</h3>\n<p>구글에서 만든 대화형 생성 AI 바드(Bard)가 국내에 상륙했다고 한다!</p>\n<p><strong>Ref</strong> <a href=\"https://bard.google.com/?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://bard.google.com/?hl=en</a></p>\n<h3 id=\"타입스크립트-51-베타\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-51-%EB%B2%A0%ED%83%80\" aria-label=\"타입스크립트 51 베타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 5.1 베타</h3>\n<p>정작 using 선언문은 없지만 그래도 맛있네요 특히 Linked Cursors for JSX Tags</p>\n<ul>\n<li><code class=\"language-text\">undefined</code>를 리턴하는 함수들에 대한 쉬운 암묵적 리턴</li>\n<li>Getter와 Setter에 서로 다른 타입 정의 가능</li>\n<li>JSX Element와 JSX Tag 타입 사이의 타입 체크 디커플링</li>\n<li>JSX에서 네임스페이스 속성 지원</li>\n<li>모듈 해석에 <code class=\"language-text\">typeRoots</code>를 사용</li>\n<li>JSX 태그를 위한 Linked Cursors</li>\n<li><code class=\"language-text\">@param</code> JSDoc 태그 스니펫 제공\nSnippet Completions for @param JSDoc Tags</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-1-beta/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://devblogs.microsoft.com/typescript/announcing-typescript-5-1-beta/</a></p>\n<h3 id=\"나는-네이버-프런트엔드-개발자입니다\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%8A%94-%EB%84%A4%EC%9D%B4%EB%B2%84-%ED%94%84%EB%9F%B0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"나는 네이버 프런트엔드 개발자입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나는 네이버 프런트엔드 개발자입니다</h3>\n<p>물론 나는 아니고</p>\n<p><strong>Ref</strong> <a href=\"https://jpub.tistory.com/1409\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jpub.tistory.com/1409</a></p>\n<h3 id=\"nodejs-20-출시\" style=\"position:relative;\"><a href=\"#nodejs-20-%EC%B6%9C%EC%8B%9C\" aria-label=\"nodejs 20 출시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js 20 출시</h3>\n<p>시상에 세상이 이렇게나 어마무시한 속도로 진화하고 있다\n<strong>Ref</strong> <a href=\"https://nodejs.org/en/blog/announcements/v20-release-announce\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://nodejs.org/en/blog/announcements/v20-release-announce</a></p>\n<h3 id=\"크롬-view-transitions-api\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%AC-view-transitions-api\" aria-label=\"크롬 view transitions api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크롬 View Transitions API</h3>\n<p>크롬 최신 버전에 새로 나온 View Transitions API로 서로 다른 DOM 상태 사이 전환에 쉽게 애니메이션을 추가할 수 있다고 한다. 애플리케이션의 상태나 뷰 전환 간에 사용자를 컨텍스트에 유지시켜두면서 사용자의 인지 부하를 줄여줄 수 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// &lt;a>나 &lt;img> 태그 중 무엇에서 이벤트가 발생했는지를 구분한다</span>\n  <span class=\"token keyword\">const</span> targetIdentifier <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>firstChild <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">displayNewImage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mainSrc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>targetIdentifier<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_th.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    galleryImg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> mainSrc<span class=\"token punctuation\">;</span>\n    galleryCaption<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> targetIdentifier<span class=\"token punctuation\">.</span>alt<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// View Transitions를 지원하지 않는 브라우저 대응</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>startViewTransition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">displayNewImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// View Transitions를 사용</span>\n  <span class=\"token keyword\">const</span> transition <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">startViewTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">displayNewImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API#browser_compatibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API#browser_compatibility</a></p>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>한국 돌아와서 신난 마음 + 갓생 살겠다고 바로 무리해서 인생 풀악셀로 달리다가 기어코 감기몸살에 걸리고 말았다.</p>\n<p>원래 감기같은 거 진짜 안 걸리는데, 성인되고 코로나 이외에 감기 처음 걸려보는 것 같다.</p>\n<p>하루 약 먹으면 될 줄 알았는데, 나를 너무 과대평가했지 🫠</p>\n<p>결국 휴가까지 내고 앓아누웠더니 조금 나아진 것 같다.</p>\n<p>‘몸’은 나아졌는데 ‘목’은 안 나아진다. 목 아프다고 죽 먹어놓고 아이스크림은 목 안아프다고 또 냠냠 하는 인생 🤷‍♀️</p>\n<p>그나저나 고작 6주였지만 매일같이 청정한 공기 마시다가 서울 오니 진짜 매캐한 냄새가 절로 느껴진다.</p>\n<p>하… 도시가 좋다는 말 취소 🙅‍♀️ 이거 때문에 목이 더 아픈 것 같다.</p>","timeToRead":7,"frontmatter":{"title":"4월 3주차 기록","date":"April 21, 2023","description":"weekly-i-learned","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2023-4-week-3/","previous":{"fields":{"slug":"/weekly/2023-4-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 29, 2023","description":"weekly-i-learned","title":"4월 4주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2023-4-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 14, 2023","description":"weekly-i-learned","title":"4월 2주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2023-4-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 29, 2023","description":"weekly-i-learned","title":"4월 4주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2023-4-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 14, 2023","description":"weekly-i-learned","title":"4월 2주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}