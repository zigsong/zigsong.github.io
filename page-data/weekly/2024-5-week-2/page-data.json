{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2024-5-week-2/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"64bd103e-d768-5c42-91db-ab3d8e54854c","excerpt":"배워가기 와 으로 사용자의 다크/라이트 모드 구분하기 로 미디어 쿼리 문자열을 분석할 수 있다. 그리고 CSS…","html":"<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<hr>\n<h3 id=\"windowmatchmedia와-prefers-color-scheme으로-사용자의-다크라이트-모드-구분하기\" style=\"position:relative;\"><a href=\"#windowmatchmedia%EC%99%80-prefers-color-scheme%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%EC%9E%90%EC%9D%98-%EB%8B%A4%ED%81%AC%EB%9D%BC%EC%9D%B4%ED%8A%B8-%EB%AA%A8%EB%93%9C-%EA%B5%AC%EB%B6%84%ED%95%98%EA%B8%B0\" aria-label=\"windowmatchmedia와 prefers color scheme으로 사용자의 다크라이트 모드 구분하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">window.matchMedia</code>와 <code class=\"language-text\">prefers-color-scheme</code>으로 사용자의 다크/라이트 모드 구분하기</h3>\n<p><code class=\"language-text\">window.matchMedia</code>로 미디어 쿼리 문자열을 분석할 수 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(min-width: 400px)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 뷰포트 너비가 400 픽셀 이상 */</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 뷰포트 너비가 400 픽셀 미만 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 CSS의 <code class=\"language-text\">prefers-color-scheme</code> 속성은 사용자의 디바이스가 다크모드인지 라이트모드인지 알려준다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.theme-a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #dca<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #731<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-color-scheme</span><span class=\"token punctuation\">:</span> dark<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.theme-a.adaptive</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #753<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #dcb<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 5px dashed #000<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>사용자가 웹페이지에서 다크/라이트 모드를 직접 변경하도록 옵션을 제공하고 싶을 때, 다음과 같이 작성할 수 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches <span class=\"token operator\">?</span> <span class=\"token operator\">...</span> <span class=\"token operator\">:</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/matchMedia\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/API/Window/matchMedia</a></li>\n</ul>\n<h3 id=\"webpack-config에서-loader가-적용되는-순서\" style=\"position:relative;\"><a href=\"#webpack-config%EC%97%90%EC%84%9C-loader%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%98%EB%8A%94-%EC%88%9C%EC%84%9C\" aria-label=\"webpack config에서 loader가 적용되는 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack config에서 loader가 적용되는 순서</h3>\n<p>webpack config에서 loader가 적용되는 순서는 ‘뒤에서부터’라고 하는데, 잘 이해가 되지 않았다.</p>\n<p>다음과 같이 적용 순서를 표현하면 이해하기 쉽다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ext$</span><span class=\"token regex-delimiter\">/</span></span>\n  <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'third-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'second-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first-loader'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 다음과 같이 동작한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">third</span><span class=\"token punctuation\">(</span><span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://kettanaito.com/blog/writing-custom-webpack-loader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://kettanaito.com/blog/writing-custom-webpack-loader</a></p>\n<h3 id=\"babelpreset-react\" style=\"position:relative;\"><a href=\"#babelpreset-react\" aria-label=\"babelpreset react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/preset-react</h3>\n<p>babel의 <code class=\"language-text\">@babel/preset-react</code>에서 development를 사용하는 이유는 디버깅의 용이성 때문이다.</p>\n<p>development 옵션을 사용하면 아래 플러그인을 추가로 사용한다.</p>\n<ul>\n<li><code class=\"language-text\">@babel/plugin-transform-react-jsx-self</code></li>\n<li><code class=\"language-text\">@babel/plugin-transform-react-jsx-source</code></li>\n</ul>\n<p>그러면 jsx에 <code class=\"language-text\">__self</code>와 <code class=\"language-text\">__source</code> 프로퍼티를 주게 되는데, 각 프로퍼티의 역할은 다음과 같다.</p>\n<ul>\n<li><code class=\"language-text\">__self</code>: JSX 태그에 대한 참조를 나타내고, React가 이벤트핸들러 내에서 발생하는 오류를 디버깅할 때 사용된다.</li>\n<li><code class=\"language-text\">__source</code>: JSX 엘리먼트가 정의된 파일의 위치와 줄 번호 정보를 포함해서 개발자가 문제가 발생한 정확한 위치를 찾을 수 있도록 도움을 제공한다.</li>\n</ul>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://babeljs.io/docs/babel-plugin-transform-react-jsx-self\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://babeljs.io/docs/babel-plugin-transform-react-jsx-self</a></li>\n<li><a href=\"https://babeljs.io/docs/babel-plugin-transform-react-jsx-source\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://babeljs.io/docs/babel-plugin-transform-react-jsx-source</a></li>\n</ul>\n<h3 id=\"ios에서-input-disabled\" style=\"position:relative;\"><a href=\"#ios%EC%97%90%EC%84%9C-input-disabled\" aria-label=\"ios에서 input disabled permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iOS에서 input disabled</h3>\n<p>iOS에서 input이 disabled인 경우, opacity가 0.4로 적용된다. (native style sheet - safari)</p>\n<p>색상을 정확하게 표시 하기 위해서는 opacity 조정 및 -webkit-text-fill-color 추가로 색상을 고정해야 한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">color:</span> <span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span><span class=\"token selector\">;\n-webkit-text-fill-color:</span> <span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-webkit-opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"운영체제에-따른-기본-폰트\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EA%B8%B0%EB%B3%B8-%ED%8F%B0%ED%8A%B8\" aria-label=\"운영체제에 따른 기본 폰트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제에 따른 기본 폰트</h3>\n<p>운영체제에 따라 기본 폰트가 다르다.</p>\n<p>Mac에서는 sans-serif 폰트에 대해서 Apple SD 산돌고딕 Neo 폰트가 적용되고, windows 에서는 맑은고딕(Malgun Gothic) 폰트가 적용된다.</p>\n<p>같은 폰트 사이즈를 적용하더라도 실제 width가 같지 않아 문구 적용 시 여유가 거의 없는 경우라면 줄바꿈이 일어날 수 있다.</p>\n<h3 id=\"promisewithresolvers\" style=\"position:relative;\"><a href=\"#promisewithresolvers\" aria-label=\"promisewithresolvers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Promise.withResolvers</code></h3>\n<p><code class=\"language-text\">Promise.withResolvers</code>로 <code class=\"language-text\">new Promise</code>를 대체할 수 있다. <code class=\"language-text\">Promise.withResolvers</code>는 <code class=\"language-text\">Promise</code> 객체와 <code class=\"language-text\">resolve</code>, <code class=\"language-text\">reject</code> 함수를 포함한 객체를 반환한다.</p>\n<p>AS-IS</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">delay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">ms</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>TO-BE</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">delay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">ms</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> promise<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">,</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">withResolvers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">return</span> promise\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers</a></p>\n<h3 id=\"브라우저-리스트-꿀팁\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%BF%80%ED%8C%81\" aria-label=\"브라우저 리스트 꿀팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 리스트 꿀팁</h3>\n<ul>\n<li>구글 애널리틱스 데이터로 브라우저 리스트를 만들어 주는 툴 (<a href=\"https://github.com/browserslist/browserslist-ga-export\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n<li>브라우저 리스트를 정의하면 국가별로 얼마나 커버가 가능한지 알려주는 사이트 (<a href=\"https://browsersl.ist/#q=%3E%3D+0.1%25+in+KR%0AChrome+%3E%3D+80%0AIOS+%3E%3D+12%0A%0A&#x26;region=KR\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n<li>브라우저 리스트로 서포트하지 않는 스펙을 쓰면 빨간줄이 뜨게하는 린트 플러그인 (<a href=\"https://github.com/amilajack/eslint-plugin-compat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n</ul>\n<h3 id=\"eslint-v9\" style=\"position:relative;\"><a href=\"#eslint-v9\" aria-label=\"eslint v9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ESLint v9</h3>\n<p>ESLint v9는 4월 6일에 출시되었으며 현재는 9.2.0이다.</p>\n<p>v9는 Flat Config 지원, 패키지에 ESLint 플러그인 내장 가능, 실행 속도 증가 등의 큰 변화가 있었다.</p>\n<p>다만 생태계가 아직 Flat Config 호환 작업 진행중이기 때문에 실제 적용은 내년에나 하지 않을까 싶다.</p>\n<h3 id=\"css-oklch\" style=\"position:relative;\"><a href=\"#css-oklch\" aria-label=\"css oklch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS <code class=\"language-text\">oklch()</code></h3>\n<p><code class=\"language-text\">rgb()</code> 혹은 <code class=\"language-text\">hsl()</code>과 같이 색상을 정의할 때 사용할 수 있는 함수 표현식 중 하나</p>\n<p>보통은 RGB를 많이 사용하지만, OKLCH는 RGB에 비해 코드만으로 색상 정보를 예측할 수 있을 정도로 가독성이 좋다는 장점이 있다.</p>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch</a></p>\n<h3 id=\"dirty-form-confirm-받기\" style=\"position:relative;\"><a href=\"#dirty-form-confirm-%EB%B0%9B%EA%B8%B0\" aria-label=\"dirty form confirm 받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dirty form confirm 받기</h3>\n<p>form이 dirty할 때 navigation을 수행하기 전 confirm을 받을 수 있다.</p>\n<p>client-side 라우팅 시에는 라우터 쪽에서, document를 새로 불러오는 라우팅 시에는 직접 <code class=\"language-text\">beforeUnload</code> 이벤트를 활용하면 된다.</p>\n<p>cf) react-router-dom v6에는 <code class=\"language-text\">useBlocker</code> 훅이 존재한다.</p>\n<h3 id=\"babel-swc는-tsconfigjson을-바라보지-않는다\" style=\"position:relative;\"><a href=\"#babel-swc%EB%8A%94-tsconfigjson%EC%9D%84-%EB%B0%94%EB%9D%BC%EB%B3%B4%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\" aria-label=\"babel swc는 tsconfigjson을 바라보지 않는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel, swc는 tsconfig.json을 바라보지 않는다.</h3>\n<p>babel, swc는 tsconfig.json을 바라보지 않는다.</p>\n<p>tsc는 타입체킹, 컴파일을 모두 수행하기 때문에 타입 영역, 값 영역을 모두 바라본다.</p>\n<p>그러나 babel, swc 등의 컴파일러는 트랜스파일에만 관심있고 타입체킹은 하지 않기 때문에 tsconfig.json을 필요로 하지 않는다. (값 영역만 사용)</p>\n<p>cf) tsserver는 tsconfig.json을 이용해서 타입체킹을 합니다. (타입영역만 사용)</p>\n<p>사실 생각해보면 당연한게 babel, swc 등의 컴파일러는 값 영역만 바라보기 때문에 tsconfig.json 옵션 거의 대부분이 필요하지 않다!</p>\n<h3 id=\"eslint-env\" style=\"position:relative;\"><a href=\"#eslint-env\" aria-label=\"eslint env permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ESLint <code class=\"language-text\">env</code></h3>\n<p>ESLint의 설정중 <code class=\"language-text\">env</code> 필드는 코드의 실행 환경을 ESLint에 알려주는 역할을 한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">browser</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">es2020</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">browser: true</code>: 코드가 브라우저 환경에서 실행된다는 것을 나타내며, 브라우저 환경에서 사용 가능한 전역 변수(예: window, document 등)가 정의되어 있다고 가정한다. ESLint는 이러한 전역 변수를 인식하고 해당 변수 사용 시 오류를 발생시키지 않는다.</li>\n<li><code class=\"language-text\">es2020: true</code>: 코드가 ECMAScript 2020 (ES11) 이상의 기능을 사용한다는 것을 나타낸다. 즉, ESLint가 ES2020에 도입된 문법을 인식한다.\n<ul>\n<li>만약 <code class=\"language-text\">es2020: true</code>를 넣지 않으면 ES5가 기본값으로 설정된다.</li>\n<li>flatConfig에서는 <code class=\"language-text\">latest</code>가 기본값이다.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">env</code>에서의 es버전과 <code class=\"language-text\">parserOptions</code>에서의 ecmaVersion도 주의해야 한다. <code class=\"language-text\">env</code>에서는 특정 es버전의 전역변수를 위해 사용되고, 구문분석은 <code class=\"language-text\">parserOptions.ecmaVersion</code>를 사용한다.</p>\n</blockquote>\n<h3 id=\"react-hook-form의-useform---criteriamode\" style=\"position:relative;\"><a href=\"#react-hook-form%EC%9D%98-useform---criteriamode\" aria-label=\"react hook form의 useform   criteriamode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-hook-form의 useForm - <code class=\"language-text\">criteriaMode</code></h3>\n<p>react-hook-form의 <code class=\"language-text\">useForm</code> API에 <code class=\"language-text\">criteriaMode</code> 옵션이 있다.</p>\n<p>발생한 validation을 하나만 잡을지 트래킹할지 고르는 옵션이다. (<code class=\"language-text\">firstError</code> 또는 <code class=\"language-text\">all</code>)</p>\n<p><code class=\"language-text\">all</code>로 설정하면 실패한 모든 validation을 알 수 있다. 에러 객체에 <code class=\"language-text\">types</code> 필드 안에 들어간다.</p>\n<p>챗GPT에 의하면 <code class=\"language-text\">firstError</code>로 설정하면 유효성 검사가 조금은 더 빠르다고 한다.</p>\n<h3 id=\"페이징-처리를-위한-offset-방식의-단점\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%B2%98%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-offset-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"페이징 처리를 위한 offset 방식의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이징 처리를 위한 offset 방식의 단점</h3>\n<p>페이징 처리를 위한 서버의 offset 방식과, 이것이 왜 성능에 좋지 않은지 알아보자.</p>\n<p>클라이언트는 보통 페이지네이션을 위해 <code class=\"language-text\">page</code>(currentPage), <code class=\"language-text\">pageSize</code>(limit)를 request param으로 보낸다.</p>\n<p>그러면 서버에서 offset 값을 구하게 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">offset = (page - 1) * pageSize</code></pre></div>\n<p>(ex. 3페이지를 요청하는데, 10개까지만 볼래요 ->  (3-1) * 10 = 20, offset = 20 )</p>\n<p>그러면 서버에서는 질의를 다음과 같이 한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">OFFSET</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 21 ~ 30 번까지 노출</span></code></pre></div>\n<p>앞 부분의 데이터를 조회할때는 문제가 되지 않지만, offset이 매우 클 경우 (ex. 1,000,000 부터 10개를 조회하는 경우)에는 성능상 문제가 될 수 있다.</p>\n<p>이유는 데이터를 반환할 때, 처음 데이터부터 offset에 해당하는 row + limit 개수 까지 조회한 후에 앞에 필요하지 않은 데이터들을 날린 결과를 반환한다.</p>\n<p>(ex. OFFSET: 5000, LIMIT 10인 경우, 5010개의 데이터를 모두 읽은 후, 5000번까지의 데이터는 버림. 이후 5001 ~ 5010까지 반환.)</p>\n<h3 id=\"react-hook-form-성능-최적화-하기\" style=\"position:relative;\"><a href=\"#react-hook-form-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%95%98%EA%B8%B0\" aria-label=\"react hook form 성능 최적화 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-hook-form 성능 최적화 하기</h3>\n<p><code class=\"language-text\">watch</code>, <code class=\"language-text\">formState.errors</code> 대신, <code class=\"language-text\">useWatch</code>, <code class=\"language-text\">useFormState</code>를 사용하면 리렌더링 되는 범위를 해당 훅이 있는 컴포넌트로 격리할 수 있다.</p>\n<p><code class=\"language-text\">trigger</code>를 사용할때 파라미터를 빈값이나 배열로 넘기면 전체 form 상태가 리렌더링 된다. 필드를 하나만 넘기는 것이 좋다.</p>\n<h3 id=\"딥링크-vs-앱스킵\" style=\"position:relative;\"><a href=\"#%EB%94%A5%EB%A7%81%ED%81%AC-vs-%EC%95%B1%EC%8A%A4%ED%82%B5\" aria-label=\"딥링크 vs 앱스킵 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>딥링크 vs 앱스킵</h3>\n<p><strong>딥링크: 특정 컨텐츠에 직접 도달하는 링크</strong></p>\n<p>예를 들어, <a href=\"https://comic.naver.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://comic.naver.com</a> 로 들어가서 클릭 클릭을 통해 특정 웹툰 페이지로 들어가지 않고, <a href=\"https://comic.naver.com/webtoon/list?titleId=807178&#x26;tab=wed\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://comic.naver.com/webtoon/list?titleId=807178&#x26;tab=wed</a> 로 직접 들어갈 때 사용되는 이 링크가 딥링크.</p>\n<p>모바일에서 딥링크를 구현하는 방식은 세 가지가 있다.</p>\n<ul>\n<li>URI Scheme</li>\n<li>App Link</li>\n<li>Universal Link.</li>\n</ul>\n<p>App Link는 안드로이드만 지원, Universal Link는 iOS만 지원한다. URI Scheme은 모바일 앱에서 딥링크를 작동시키는 기술 표준으로, 사용자가 앱 내부의 컨텐츠에 직접 접근할 수 있게 해준다. 세 방식 중 가장 오래되었다.</p>\n<p>하지만 URI Scheme에는 단점도 있다.</p>\n<ul>\n<li>앱이 설치되지 않은 경우 실행이 되지 않는다</li>\n<li>동일한 스킴을 사용하는 앱이 여러개 있으면 구분을 못한다</li>\n</ul>\n<p>cf) 스킴: URI Scheme을 이용한 딥링크는 앱에 Scheme값을 등록한 후, 특정 Scheme값을 호출하면 특정 앱을 오픈한다.</p>\n<p><strong>앱스킴: URI Scheme 방식을 활용해 구현한, 앱에서 사용하는 Scheme</strong></p>\n<p>(ex. <code class=\"language-text\">baemin://</code>, <code class=\"language-text\">baemin-beta://</code>)</p>\n<blockquote>\n<p>부록: 특정 지면에 사용되는 앱스킴과 달리 함수 또는 기능을 실행하는 <code class=\"language-text\">action</code> 스킴도 있다.\n(<code class=\"language-text\">baemin-action://</code>)</p>\n</blockquote>\n<h3 id=\"마진이-겹치는-상황-해결하기\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%84%EC%9D%B4-%EA%B2%B9%EC%B9%98%EB%8A%94-%EC%83%81%ED%99%A9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-label=\"마진이 겹치는 상황 해결하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마진이 겹치는 상황 해결하기</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>두 개의 <code class=\"language-text\">&lt;div></code>가 모두 <code class=\"language-text\">margin-top: 10px</code>을 갖고 있기 때문에, 결과적으로 <code class=\"language-text\">margin-top</code>이  <code class=\"language-text\">20px</code>이 될 것이라고 생각하기 쉽다. 하지만 실제로는 <code class=\"language-text\">10px</code>의 <code class=\"language-text\">margin</code>만 표시된다.</p>\n<p>이를 <strong>마진 상쇄(margin collapse)</strong> 현상이라고 합니다.</p>\n<p>마진이 상쇄되는 조건은 여러 가지가 있다.</p>\n<p>이를 해결하기 위해서는 <code class=\"language-text\">display: flow-root</code>를 사용할 수 있다. 해당 속성을 부모 자식 박스에 주면 새로운 BFC(Block Formatting Context)를 생성하게 된다. 부모와 자식은 서로 다른 BFC를 가지게 되어 마진 상쇄 현상이 발생하지 않는다.</p>\n<h3 id=\"객체-vs-map\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-vs-map\" aria-label=\"객체 vs map permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 vs Map</h3>\n<ul>\n<li>\n<p>Map을 사용하는 이유</p>\n<ul>\n<li>키로 어떤 데이터 형식이든 사용할 수 있다.</li>\n<li>순서가 보장되며, 입력된 순서대로 요소에 접근할 수 있다.</li>\n<li>맵은 반복 가능하며, 쉽게 반복할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>객체를 사용하는 이유</p>\n<ul>\n<li>더 간단하게 정의할 수 있다.</li>\n<li>대부분의 경우 키가 문자열이기 때문에 객체를 사용하는 것이 더 편리하다.</li>\n<li>JSON과 같은 구조를 표현할 때 자연스럽다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://velog.io/@surim014/use-maps-more-and-objects-less\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@surim014/use-maps-more-and-objects-less</a></p>\n<h3 id=\"form-밖에-submit-버튼-두는법\" style=\"position:relative;\"><a href=\"#form-%EB%B0%96%EC%97%90-submit-%EB%B2%84%ED%8A%BC-%EB%91%90%EB%8A%94%EB%B2%95\" aria-label=\"form 밖에 submit 버튼 두는법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>form 밖에 submit 버튼 두는법</h3>\n<p><code class=\"language-text\">form</code> attribute를 사용하면 된다</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">form</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>저장<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://www.impressivewebs.com/html5-form-attribute/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.impressivewebs.com/html5-form-attribute/</a></p>\n<h3 id=\"구글-seo-엔진의-특이점\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EA%B8%80-seo-%EC%97%94%EC%A7%84%EC%9D%98-%ED%8A%B9%EC%9D%B4%EC%A0%90\" aria-label=\"구글 seo 엔진의 특이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구글 SEO 엔진의 특이점</h3>\n<p>구글 SEO 엔진은 <code class=\"language-text\">&lt;meta name=\"keywords\"></code> 태그를 무시한다.</p>\n<p>keyword stuffing을 방지하기 위함인 것 같다</p>\n<blockquote>\n<p><strong>keyword stuffing?</strong>\n검색 엔진에서 높은 우선순위를 얻기 위해 웹 페이지에 특정 키워드를 고의로 다량 삽입하는 행위를 말한다.</p>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://developers.google.com/search/docs/crawling-indexing/special-tags?hl=ko#unsupported\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.google.com/search/docs/crawling-indexing/special-tags?hl=ko#unsupported</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Keyword_stuffing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://en.wikipedia.org/wiki/Keyword_stuffing</a></li>\n</ul>\n<h3 id=\"eslintworkingdirectories\" style=\"position:relative;\"><a href=\"#eslintworkingdirectories\" aria-label=\"eslintworkingdirectories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint.workingDirectories</h3>\n<p>vscode의 settings.json 파일에서 <code class=\"language-text\">eslint.workingDirectories</code> 역할은 다음과 같다.</p>\n<ul>\n<li>eslint 플러그인이 프로젝트 내에서 어떤 디렉토리를 기준으로 코드 검사를 수행할지 지정한다.</li>\n<li>갑자기 나의 import문이 엄한 곳에서 tsconfig를 찾는다면 이를 의심해보자</li>\n</ul>\n<h3 id=\"inp-interaction-to-next-paint-지표\" style=\"position:relative;\"><a href=\"#inp-interaction-to-next-paint-%EC%A7%80%ED%91%9C\" aria-label=\"inp interaction to next paint 지표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INP (Interaction to Next Paint) 지표</h3>\n<p>사용자가 페이지에 머무는 동안 발생시키는 모든 인터렉션을 관찰하여 전반적인 응답성을 관찰하는 지표</p>\n<p>구글에서는 첫번째 입력만 체크하는 FID(First Input Delay) 지표를 대체하여 사용하고 있다. 200ms 이내일 때 좋은 INP 수치를 가졌다고 본다.</p>\n<h2 id=\"이것저것-모음집\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"이것저것 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것 모음집</h2>\n<hr>\n<ul>\n<li>webpack의 <code class=\"language-text\">resolveLoader</code> - loader의 alias를 정할 수 있다 (<a href=\"https://webpack.kr/configuration/resolve/#resolveloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n<li>React의 useEffect는 clean-up 함수부터, 그리고 자식부터 실행된다.</li>\n<li>메모리 누수는 크롬 > 작업 관리자 > 자바스크립트 메모리 활성 숫자 () 증가로 쉽게 모니터링할 수 있다.</li>\n</ul>\n<p>(<a href=\"https://developer.chrome.com/docs/devtools/memory-problems\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</p>\n<ul>\n<li>React Fiber는 current와 WIP Tree 두 가지를 활용해서 변경사항을 반영하는데, 이를 더블 버퍼링 기술이라고 한다. 더블 버퍼링 기술은 React 팀에서 만든게 아니라 컴퓨터 그래픽스에서도 이미 사용하는 용어다.</li>\n</ul>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<hr>\n<h3 id=\"ascii-문자만-가지고-3d-렌더링-만들기\" style=\"position:relative;\"><a href=\"#ascii-%EB%AC%B8%EC%9E%90%EB%A7%8C-%EA%B0%80%EC%A7%80%EA%B3%A0-3d-%EB%A0%8C%EB%8D%94%EB%A7%81-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"ascii 문자만 가지고 3d 렌더링 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ASCII 문자만 가지고 3D 렌더링 만들기</h3>\n<p>세상에는 참 신기하고 대단한 사람이 많다.</p>\n<p><strong>Ref</strong> <a href=\"https://kciter.so/posts/ascii-3d-renderer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://kciter.so/posts/ascii-3d-renderer/</a></p>\n<h3 id=\"토스의-한글-라이브러리\" style=\"position:relative;\"><a href=\"#%ED%86%A0%EC%8A%A4%EC%9D%98-%ED%95%9C%EA%B8%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"토스의 한글 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토스의 한글 라이브러리</h3>\n<p>토스에서 만든 새로운 한글 라이브러리</p>\n<blockquote>\n<p>k-popo도 유용하다. 은/는/이/가 처리가 필요한 곳에 쓰기 좋다. (<a href=\"https://www.npmjs.com/package/k-popo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</p>\n</blockquote>\n<p><strong>Ref</strong> <a href=\"https://www.npmjs.com/package/es-hangul\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.npmjs.com/package/es-hangul</a></p>\n<h3 id=\"jsr-the-javascript-registry\" style=\"position:relative;\"><a href=\"#jsr-the-javascript-registry\" aria-label=\"jsr the javascript registry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSR (the JavaScript Registry)</h3>\n<p>npm의 superset으로 deno 팀에서 개발한 자바스크립트 레지스트리</p>\n<p>npm이 출시될 때는 현재의 개발 환경을 염두에 두고 만들어지지 않았기 때문에, 이를 개선하고자 만들어졌다고 한다. 타입스크립트와 ESM 배포에 최적화되어 있다.</p>\n<p>node 뿐만 아니라 deno, bun과 같이 다양한 자바스크립트 런타임 환경을 지원한다.</p>\n<p><strong>Ref</strong> <a href=\"https://jsr.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://jsr.io/</a></p>\n<h3 id=\"bundlejs\" style=\"position:relative;\"><a href=\"#bundlejs\" aria-label=\"bundlejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bundlejs</h3>\n<p>npm package의 크기를 체크해준다.</p>\n<p>bundlephobia는 (모듈별로 나뉘긴 하지만) 통째로 보여주는 반면, bundlejs는 import하는 코드를 직접 작성하고 그것을 빌드한 결과물을 측정하므로 나무를 흔든 후의 실제 크기를 볼 수가 있다.</p>\n<p><a href=\"https://bundlejs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://bundlejs.com/</a></p>\n<h3 id=\"react-conf-2024-agenda-공개\" style=\"position:relative;\"><a href=\"#react-conf-2024-agenda-%EA%B3%B5%EA%B0%9C\" aria-label=\"react conf 2024 agenda 공개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Conf 2024 Agenda 공개</h3>\n<p>React19와 React Sever Component 관련 내용이 많이 보인다.</p>\n<p><strong>Ref</strong> <a href=\"https://conf.react.dev/agenda\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://conf.react.dev/agenda</a></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<hr>\n<p>사내 TIL 챌린지가 끝나지 않고 있다. 매주 새로 배우는 내용, 블로그에 적을 내용이 풍성해져서 좋지만 조금 벅차기도 하다 (ㅋㅋㅋ)</p>\n<p>날씨도 따숩고 왠지 한가한 5월을 적당히 여유롭게 보내고 있는 요즘이다.</p>\n<p>그리고 진짜 가고 싶던 뷰민라를 다녀왔지 🎵</p>\n<p>다음은 펜타포트인가…🎸 큰일났다</p>","timeToRead":14,"frontmatter":{"title":"5월 2주차 기록","date":"May 11, 2024","description":"따사롭고 한가한","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2024-5-week-2/","previous":{"fields":{"slug":"/weekly/2024-5-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 18, 2024","description":"건물 사이에 피어난 장미 🌹","title":"5월 3주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2024-5-week-1/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 06, 2024","description":"5월 연휴 순삭","title":"5월 첫주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2024-5-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 18, 2024","description":"건물 사이에 피어난 장미 🌹","title":"5월 3주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2024-5-week-1/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 06, 2024","description":"5월 연휴 순삭","title":"5월 첫주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}