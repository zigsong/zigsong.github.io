{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2024-4-week-1/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"e3ed7d44-09d9-5cc4-9a44-be93fdd3ed0f","excerpt":"배워가기 gRPC와 tRPC gRPC: 구글이 최초로 개발한 오픈 소스 원격 프로시저 호출 시스템이다. 전송을 위해 HTTP/…","html":"<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<hr>\n<h3 id=\"grpc와-trpc\" style=\"position:relative;\"><a href=\"#grpc%EC%99%80-trpc\" aria-label=\"grpc와 trpc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gRPC와 tRPC</h3>\n<ul>\n<li>gRPC: 구글이 최초로 개발한 오픈 소스 원격 프로시저 호출 시스템이다. 전송을 위해 HTTP/2를, 인터페이스 정의 언어로 프로토콜 버퍼를 사용하며 인증, 양방향 스트리밍 및 흐름 제어, 차단 및 비차단 바인딩, 취소 및 타임아웃 등의 기능을 제공한다.</li>\n<li>tRPC: 풀 스택 애플리케이션에서 타입스크립트로 완전한 타입 세이프 API를 만들 수 있다. 서버 애플리케이션이 타입 세이프 함수(예: user 만들기, 식별자별 user 가져오기, 모든 user 가져오기 등과 같은 CRUD 연산)가 포함된 타입 세이프 라우터를 생성하면 클라이언트 애플리케이션은 추론된 타입 세이프 라우터에서 이러한 함수를 직접 호출할 수 있다. 내부적으로는 클라이언트와 서버 간의 통신에 여전히 HTTP가 사용된다.</li>\n</ul>\n<blockquote>\n<p>🤔 그럼, RPC란?\n“Remote Procedure Call”의 약자로, 하나의 컴퓨터(서버)에서 다른 컴퓨터(클라이언트)로 함수를 호출하는 방식이다. 전통적인 HTTP/REST API에서는, URL을 호출하고 응답을 받아왔다면, RPC에서는 함수를 호출하고 응답을 받아온다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// HTTP/REST</span>\n<span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users/1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// RPC</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> api<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://velog.io/@superlipbalm/full-stack-typescript-with-trpc-and-react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@superlipbalm/full-stack-typescript-with-trpc-and-react</a></li>\n<li><a href=\"https://trpc.io/docs/concepts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://trpc.io/docs/concepts</a></li>\n</ul>\n<h3 id=\"react-testing-library의-prettydom과-debug_print_limit\" style=\"position:relative;\"><a href=\"#react-testing-library%EC%9D%98-prettydom%EA%B3%BC-debug_print_limit\" aria-label=\"react testing library의 prettydom과 debug_print_limit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-testing-library의 <code class=\"language-text\">prettyDOM</code>과 <code class=\"language-text\">DEBUG_PRINT_LIMIT</code></h3>\n<ul>\n<li>prettyDOM - 노드의 DOM 트리를 읽을 수 있는 형태로 포맷팅해주는 헬퍼 함수로, 테스트 디버깅 시 유용하다.</li>\n<li>DEBUG_PRINT_LIMIT - DOM의 크기가 매우 커질 수 있음에 대비하여, 출력될 DOM 컨텐츠의 양을 제한한다.</li>\n</ul>\n<p><strong>Ref</strong>  <a href=\"https://testing-library.com/docs/dom-testing-library/api-debugging/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://testing-library.com/docs/dom-testing-library/api-debugging/</a></p>\n<h3 id=\"sass에서-함수-사용하기\" style=\"position:relative;\"><a href=\"#sass%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"sass에서 함수 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sass에서 함수 사용하기</h3>\n<p>scss 또는 sass 모듈에서 함수를 정의하여 사용할 수 있다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@function</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\"><span class=\"token variable\">$sequence</span></span><span class=\"token punctuation\">:</span> 0 1<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">@for</span> <span class=\"token variable\">$_</span> <span class=\"token keyword\">from</span> 1 <span class=\"token keyword\">through</span> <span class=\"token selector\"><span class=\"token variable\">$n</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\"><span class=\"token variable\">$new</span></span><span class=\"token punctuation\">:</span> <span class=\"token function\">nth</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">,</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">nth</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">,</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> 1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\"><span class=\"token variable\">$sequence</span></span><span class=\"token punctuation\">:</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$new</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">@return</span> <span class=\"token function\">nth</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">,</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sequence</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.sidebar </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> 1px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ref</strong> <a href=\"https://sass-lang.com/documentation/at-rules/function/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sass-lang.com/documentation/at-rules/function/</a></p>\n<h3 id=\"문서에서-특정-문자열을-포함하는-class를-가진-요소들-추출하기\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%84%9C%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%98%EB%8A%94-class%EB%A5%BC-%EA%B0%80%EC%A7%84-%EC%9A%94%EC%86%8C%EB%93%A4-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"문서에서 특정 문자열을 포함하는 class를 가진 요소들 추출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문서에서 특정 문자열을 포함하는 class를 가진 요소들 추출하기</h3>\n<ul>\n<li><code class=\"language-text\">document.querySelectorAll('[class*=str]')</code> - value에 <code class=\"language-text\">str</code>이 포함되는 요소</li>\n<li><code class=\"language-text\">document.querySelectorAll('[class$=str]')</code> - <code class=\"language-text\">str</code>로 끝나는 요소</li>\n<li><code class=\"language-text\">document.querySelectorAll('[class^=str]')</code> - <code class=\"language-text\">str</code>로 시작하는 요소</li>\n</ul>\n<blockquote>\n<p>cf) <code class=\"language-text\">querySelector</code>에만 사용 가능하고, <code class=\"language-text\">getElementsBy~</code> 에는 사용 불가하다</p>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://threadbuilder.wordpress.com/2020/08/02/queryselector-wildcard-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EC%B0%BE%EA%B8%B0/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://threadbuilder.wordpress.com/2020/08/02/queryselector-wildcard-옵션으로-찾기/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/8714090/how-to-do-a-wildcard-element-name-match-with-queryselector-or-queryselector\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/8714090/how-to-do-a-wildcard-element-name-match-with-queryselector-or-queryselector</a></li>\n</ul>\n<h3 id=\"pnpm-workspace에서-cli\" style=\"position:relative;\"><a href=\"#pnpm-workspace%EC%97%90%EC%84%9C-cli\" aria-label=\"pnpm workspace에서 cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pnpm workspace에서 cli</h3>\n<ul>\n<li>\n<p><strong>-filter, -F</strong> 옵션으로 pnpm 명령어를 수행할 대상 워크스페이스를 지정할 수 있다.</p>\n<ul>\n<li>ex) <code class=\"language-text\">pnpm --filter '@self/shared' run tsc*</code></li>\n<li><code class=\"language-text\">@self/shared</code> 워크스페이스의 package.json 에 등록된 tsc 명령어를 실행</li>\n</ul>\n</li>\n<li>\n<p>필터는 와일드카드 문자를 사용한 glob 패턴으로 지정할수 있습니다.</p>\n<ul>\n<li>ex) <code class=\"language-text\">pnpm --filter '@self/*' run tsc</code></li>\n<li><code class=\"language-text\">@self/</code>로 시작하는 이름의 워크스페이스의 package.json에 등록된 tsc 명령어를 실행</li>\n</ul>\n</li>\n<li>\n<p>프로젝트 루트에 있는 워크스페이스를 워크스페이스 루트라고 부른다. 루트의 package.json을 대상으로 pnpm 명령어를 실행하려면 <code class=\"language-text\">--workspace-root</code> 옵션을 사용한다.</p>\n<ul>\n<li>ex) <code class=\"language-text\">pnpm --workspace-root add react</code></li>\n<li>워크스페이스 루트에 react 패키지를 설치</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"eslint-workingdirectories\" style=\"position:relative;\"><a href=\"#eslint-workingdirectories\" aria-label=\"eslint workingdirectories permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint workingDirectories</h3>\n<p>eslint가 사용하는 working directories가 어떻게 계산되는지 명시한다. eslint는 설정파일(<code class=\"language-text\">eslintrc</code>, <code class=\"language-text\">eslintignore</code>)를 working directory에서 상대적인 경로로 찾기 때문에, 이를 정확하게 설정하는 것이 중요하다. 만약 eslint를 터미널에서 실행한다면 터미널의 working directory를 하위 폴더로 이동시켜야 한다. <code class=\"language-text\">.eslintrc*</code> 파일은 부모 디렉토리 기준으로 탐색하는 반면, <code class=\"language-text\">.eslintignore</code> 파일은 현재 working directory에만 유효하다는 것을 알아두자. 설정에 다음 값들이 사용될 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">[{ \"mode\": \"location\" }]</code> (@since 2.0.0) - eslint가 workspace 폴더 위치나 파일 위치(workspace 폴더가 열려있지 않을 때)를 working directory로 사용하게끔 한다. 이것은 기본 설정이며, 구 버전(1.9.x)의 eslint extension에서 사용하는 방식이다.</li>\n<li><code class=\"language-text\">[{ \"mode\": \"auto\" }]</code> (@since 2.0.0) - eslint가 working directory를 <code class=\"language-text\">package.json</code>, <code class=\"language-text\">eslint.config.js</code>, <code class=\"language-text\">eslintignore</code>, 그리고 <code class=\"language-text\">.eslintrc*</code> 파일이 위치한 곳 기준으로 실행되게 하는 방식이다. 이것은 여러 경우에 대응할 수 있지만 예측하지 못한 결과로 이어지기도 한다.</li>\n</ul>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint</a></li>\n</ul>\n<h3 id=\"tsc---build-옵션\" style=\"position:relative;\"><a href=\"#tsc---build-%EC%98%B5%EC%85%98\" aria-label=\"tsc   build 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tsc <code class=\"language-text\">--build</code> 옵션</h3>\n<p>프로젝트 레퍼런스에서 지정한 이 프로젝트와 프로젝트의 모든 의존성을 빌드 합니다.</p>\n<p>…뭔소리야?</p>\n<p>모노레포와 같은 구조에서, 상위 경로의 tsconfig 파일에 <code class=\"language-text\">references</code> 속성으로 특정 워크스페이스를 명시했다면, 해당 tsconfig로 빌드를 수행할 수 있다.</p>\n<h3 id=\"모든-이미지를-figure-태그로-감싸야할까\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-figure-%ED%83%9C%EA%B7%B8%EB%A1%9C-%EA%B0%90%EC%8B%B8%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\"모든 이미지를 figure 태그로 감싸야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 이미지를 <code class=\"language-text\">&lt;figure></code> 태그로 감싸야할까?</h3>\n<p>정답은, 아니다! 🙅‍♀️</p>\n<p><code class=\"language-text\">&lt;figure></code> 태그는 독립적인(self-contained) 이미지를 나타낼 때 사용한다.</p>\n<p>부가적인 요소로 사용한 경우 <code class=\"language-text\">&lt;figure></code> 태그를 사용하는 것은 적절하지 않다.</p>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure</a></p>\n<h2 id=\"이것저것-모음집\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"이것저것 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것 모음집</h2>\n<hr>\n<ul>\n<li>blender - 3D 컴퓨터 그래픽 제작 소프트웨어(<a href=\"https://www.blender.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n<li>fselect - 파일 찾기를 sql-like query로 수행할 수 있도록 해준다. 위험할 수 있지만, 편하다.(<a href=\"https://github.com/jhspetersson/fselect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ref</a>)</li>\n</ul>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<hr>\n<p>평일 내내 평화롭게 혼자 시간 잘 보내고 주말에 급발진 해버리기~</p>\n<p>매년 피는 벚꽃이지만 볼때마다 항상 예쁘다.</p>\n<p>올해는 소중한 팀원들과 벚꽃 한 컷, 그리고 짝꿍과는 조금 특별하게 러닝하며 벚꽃 찰칵 📷</p>","timeToRead":6,"frontmatter":{"title":"4월 첫주차 기록","date":"April 05, 2024","description":"매년 피는 벚꽃이라도 🌸","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2024-4-week-1/","previous":{"fields":{"slug":"/weekly/2024-4-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 13, 2024","description":"생애 첫 마라톤 🏃‍♀️","title":"4월 2주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2024-3-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 30, 2024","description":"봄맞이 준비","title":"3월 4주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2024-4-week-2/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"April 13, 2024","description":"생애 첫 마라톤 🏃‍♀️","title":"4월 2주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2024-3-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 30, 2024","description":"봄맞이 준비","title":"3월 4주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}