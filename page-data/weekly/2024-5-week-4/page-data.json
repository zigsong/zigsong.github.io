{"componentChunkName":"component---src-templates-blog-post-js","path":"/weekly/2024-5-week-4/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"59a24785-55c5-5ff7-8245-f4f5504cd074","excerpt":"배워가기 맥 로제타 애플 M1 칩셋을 사용하는 맥 컴퓨터에서 x86 아키텍처의 소프트웨어를 실행하기 위한 호환성 도구 즉 M1 맥북에 아직 지원하지 않는 소프트웨어를 사용할 수 있게 해주는 도구 Ref https://support.apple.com/ko-kr/10252…","html":"<h2 id=\"배워가기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9B%8C%EA%B0%80%EA%B8%B0\" aria-label=\"배워가기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배워가기</h2>\n<hr>\n<h3 id=\"맥-로제타\" style=\"position:relative;\"><a href=\"#%EB%A7%A5-%EB%A1%9C%EC%A0%9C%ED%83%80\" aria-label=\"맥 로제타 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맥 로제타</h3>\n<ul>\n<li>애플 M1 칩셋을 사용하는 맥 컴퓨터에서 x86 아키텍처의 소프트웨어를 실행하기 위한 호환성 도구</li>\n<li>즉 M1 맥북에 아직 지원하지 않는 소프트웨어를 사용할 수 있게 해주는 도구</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://support.apple.com/ko-kr/102527\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://support.apple.com/ko-kr/102527</a></p>\n<h3 id=\"dlopen-서브루틴\" style=\"position:relative;\"><a href=\"#dlopen-%EC%84%9C%EB%B8%8C%EB%A3%A8%ED%8B%B4\" aria-label=\"dlopen 서브루틴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">dlopen</code> 서브루틴</h3>\n<ul>\n<li>호출 프로세스에 모듈을 동적으로 로드한다.</li>\n<li>공유 라이브러리를 동적으로 로드하는 휴대용 방법이다.</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://www.ibm.com/docs/ko/aix/7.3?topic=d-dlopen-subroutine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.ibm.com/docs/ko/aix/7.3?topic=d-dlopen-subroutine</a></p>\n<h3 id=\"prettier-embeddedlanguageformatting\" style=\"position:relative;\"><a href=\"#prettier-embeddedlanguageformatting\" aria-label=\"prettier embeddedlanguageformatting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prettier <code class=\"language-text\">embeddedLanguageFormatting</code></h3>\n<p>하나의 언어로 쓰인 파일 안에서 다른 언어의 코드가 감지되었을 때 그 코드도 함께 자동으로 포맷팅시켜줄 것인지를 정하는 속성이다. <code class=\"language-text\">.tsx</code> 파일 안에서 TypeScript와 HTML 태그를 함께 포맷팅할 때 필요한 옵션이다. <code class=\"language-text\">auto</code>와 <code class=\"language-text\">off</code>로만 설정 가능하고, 기본값은 <code class=\"language-text\">auto</code>다.</p>\n<p><strong>Ref</strong> <a href=\"https://prettier.io/docs/en/options.html#embedded-language-formatting\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://prettier.io/docs/en/options.html#embedded-language-formatting</a></p>\n<h3 id=\"module-federation에서-eager-consumption\" style=\"position:relative;\"><a href=\"#module-federation%EC%97%90%EC%84%9C-eager-consumption\" aria-label=\"module federation에서 eager consumption permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>module federation에서 eager consumption</h3>\n<p>Module Federation에서 <code class=\"language-text\">eager consumption</code>은 모듈이 애플리케이션이 시작될 때 미리 로드되는 방식을 의미한다. 이는 런타임 시 동적으로 로드되는 기본 방식과 다르다. 구체적으로 설명하면,</p>\n<ol>\n<li><strong>기본 방식 (Lazy Loading)</strong>:</li>\n</ol>\n<ul>\n<li>기본적으로 Module Federation은 필요한 시점에 모듈을 동적으로 로드한다. 즉, 실제로 모듈이 사용되기 전까지 로드되지 않는다. 이렇게 하면 초기 로딩 시간이 짧아지고, 필요 없는 모듈은 로드되지 않아서 리소스 절약이 가능하다.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Eager Loading (Eager Consumption)</strong>:</li>\n</ol>\n<ul>\n<li><code class=\"language-text\">eager: true</code>로 설정된 모듈은 애플리케이션 시작 시 바로 로드된다. 이 방식은 초기 로딩 시간이 길어질 수 있지만, 모듈 로드 지연 시간을 없앨 수 있다. 주로 항상 필요한 모듈이나, 초기 로딩 시간에 로드 지연이 문제가 되는 경우에 사용된다.</li>\n</ul>\n<p>출처: ChatGPT</p>\n<h3 id=\"html-output-태그\" style=\"position:relative;\"><a href=\"#html-output-%ED%83%9C%EA%B7%B8\" aria-label=\"html output 태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html <code class=\"language-text\">&lt;output></code> 태그</h3>\n<p>웹 사이트나 앱에서 계산이나 사용자 행동의 결과를 삽입할 수 있는 컨테이너 요소</p>\n<p>ex) <code class=\"language-text\">role=\"spinner\"</code> 등을 대체하여 사용된다.</p>\n<p><strong>Ref</strong> <a href=\"https://developer.mozilla.org/ko/docs/Web/HTML/Element/output\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/HTML/Element/output</a></p>\n<h3 id=\"jest-리포팅-결과-공유하기\" style=\"position:relative;\"><a href=\"#jest-%EB%A6%AC%ED%8F%AC%ED%8C%85-%EA%B2%B0%EA%B3%BC-%EA%B3%B5%EC%9C%A0%ED%95%98%EA%B8%B0\" aria-label=\"jest 리포팅 결과 공유하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jest 리포팅 결과 공유하기</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/jest-html-reporters\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jest-html-reporters</a> 을 이용하여 리포팅 결과를 도출하여 public한 환경에 업로드할 수 있다.</li>\n<li>jest.config 에서 <code class=\"language-text\">collectCoverage: true</code>로 커버리지율도 확인할 수 있다.</li>\n<li>이제 누구나 URL에 접근하여 테스트 현황(리포팅/ 커버리지 결과)을 볼수 있다.</li>\n</ul>\n<h3 id=\"resourceful-engineering--big-ball-of-mud\" style=\"position:relative;\"><a href=\"#resourceful-engineering--big-ball-of-mud\" aria-label=\"resourceful engineering  big ball of mud permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resourceful Engineering &#x26;&#x26; Big ball of mud</h3>\n<p><strong>Resourceful Engineering</strong>은 제한된 자원과 예산 내에서 창의적이고 효율적으로 문제를 해결하는 기술적 접근 방식을 의미한다. 이는 엔지니어들이 가용 자원을 최대한 활용하여 최적의 결과를 도출하는 능력을 강조한다. 자원의 효율적 관리, 혁신적인 문제 해결 방법, 비용 절감 전략 등이 포함된다.</p>\n<p>Resourceful Engineering이라는 용어는 특정 시점이나 인물에 의해 처음 사용되었다고 명확하게 기록된 바는 없다. 그러나 이 개념은 공학 및 IT 분야에서 오랜 기간 동안 널리 적용되어 온 원칙이다. 특히 스타트업 환경이나 제한된 자원 내에서의 프로젝트 관리에서 중요한 역할을 해왔다.</p>\n<p><strong>Big Ball of Mud</strong>는 소프트웨어 아키텍처 패턴 중 하나로, 구조화되지 않고 조직적인 원칙이 부족한 코드를 의미한다. 이러한 코드는 시간이 지남에 따라 유지보수와 확장이 어려워지며, 일관성 없이 패치되고 추가된 기능들로 인해 복잡도가 증가한다. 이 패턴은 코드의 악취(Code Smell)로 간주되며, 종종 기술 부채(Technical Debt)를 낳는다.</p>\n<p>Big Ball of Mud라는 용어는 1997년 브라이언 풋(Brian Foote)와 조셉 여더(John Yoder)의 논문 “Big Ball of Mud”에서 처음 제안되었다. 이 논문은 소프트웨어 시스템의 일반적인 문제점을 설명하면서, 그러한 시스템이 어떻게 형성되고 진화하는지, 그리고 왜 많은 소프트웨어 프로젝트가 이러한 비구조적 상태로 변하는지를 다룬다. 논문에서는 Big Ball of Mud가 발생하는 원인과 그로 인한 문제점들을 분석하며, 이러한 상황을 피하기 위한 전략들을 제시한다.</p>\n<h3 id=\"크롬-브라우저의-prerender\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%AC-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-prerender\" aria-label=\"크롬 브라우저의 prerender permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크롬 브라우저의 prerender</h3>\n<p>크롬 검색창에서 자주 들어가는 사이트의 검색어를 타이핑한 후 5초 정도 기다려보자.</p>\n<p>엔터를 누르면 로딩없이 바로 화면이 렌더링될 것이다.</p>\n<p>다시 검색창에서 같은 사이트의 주소를 최대한 빠르게 타이핑한 후 엔터를 눌러보자. 로딩이 있을 것이다.</p>\n<p>이는 크롬브라우저가 자체적으로 prerender해주기때문이다.</p>\n<p>모든 url에 대해서 해주는 것은 아니고 자주 접속하는 사이트에 대해서만 그렇다.</p>\n<h3 id=\"cf-function에서-사용자-ip-확인하기\" style=\"position:relative;\"><a href=\"#cf-function%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-ip-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"cf function에서 사용자 ip 확인하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CF function에서 사용자 IP 확인하기</h3>\n<p>cloudfront function에서는 <code class=\"language-text\">event.viewer.ip</code>를 통해 클라이언트 ip를 확인할 수 있다.</p>\n<p>이를 활용하여 특정 url을 사내에서만 접근 가능하도록 구성할 수 있었다.</p>\n<p><strong>Ref</strong> <a href=\"https://us-east-1.console.aws.amazon.com/cloudfront/v3/home?region=us-east-1#/functions/food-order-cdn-redirect?tab=build\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://us-east-1.console.aws.amazon.com/cloudfront/v3/home?region=us-east-1#/functions/food-order-cdn-redirect?tab=build</a></p>\n<h3 id=\"테스팅-피라미드와-테스팅-트로피\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8C%85-%ED%94%BC%EB%9D%BC%EB%AF%B8%EB%93%9C%EC%99%80-%ED%85%8C%EC%8A%A4%ED%8C%85-%ED%8A%B8%EB%A1%9C%ED%94%BC\" aria-label=\"테스팅 피라미드와 테스팅 트로피 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스팅 피라미드와 테스팅 트로피</h3>\n<p>전통적인 테스트 접근법에서는 테스팅 피라미드 모델 <code class=\"language-text\">단위테스트 > 통합테스트 > E2E테스트</code>의 순서로 우선순위를 정의한다.</p>\n<p>현대 FE 개발에서 테스팅 피라미드 모델은 유효하지 않다. 목적에 따라 서로 다른 테스트 전략을 취하되, 가장 FE 개발 사이클과 유사한 E2E 테스트를 최종 목적으로 삼는 <a href=\"https://www.testingjavascript.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">테스팅 트로피 모델</a>을 제안한다.</p>\n<p><strong>Ref</strong> <a href=\"https://semaphoreci.com/blog/testing-pyramid\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://semaphoreci.com/blog/testing-pyramid</a></p>\n<h2 id=\"이것저것-모음집\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EA%B2%83%EC%A0%80%EA%B2%83-%EB%AA%A8%EC%9D%8C%EC%A7%91\" aria-label=\"이것저것 모음집 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이것저것 모음집</h2>\n<hr>\n<ul>\n<li><code class=\"language-text\">npkill</code> - 프로젝트에 있는 모든 node_modules를 찾아서 삭제해준다.</li>\n<li><code class=\"language-text\">String.prototype.startsWith()</code>, <code class=\"language-text\">String.prototype.endsWith()</code> - 이라는 좋은 빌트인 메서드가 생겼다.</li>\n</ul>\n<h2 id=\"기타공유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80%EA%B3%B5%EC%9C%A0\" aria-label=\"기타공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타공유</h2>\n<hr>\n<h3 id=\"ink\" style=\"position:relative;\"><a href=\"#ink\" aria-label=\"ink permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ink</h3>\n<p>CLI 툴을 React 기반으로 말아내는 프레임워크.</p>\n<p>CLI의 상호작용과 디테일이 어느 수준 이상 깊어지면 생산성이 매우 우수할 것 같다.</p>\n<p>이미 활약하고 있는 도구를 잘 참고한 것을 넘어서, 시스템 인터페이스와 몇가지 기반요소만 싹 바꿔서 완전히 동일한 개발경험을 준다.</p>\n<p><strong>Ref</strong> <a href=\"https://github.com/vadimdemedes/ink\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/vadimdemedes/ink</a></p>\n<h3 id=\"vercel-ship\" style=\"position:relative;\"><a href=\"#vercel-ship\" aria-label=\"vercel ship permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vercel ship</h3>\n<p>vercel에서 개최하는, 프론트엔드 개발, 인프라, 에코시스템 등을 다루는 컨퍼런스</p>\n<p><strong>Ref</strong> <a href=\"https://vercel.com/ship\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://vercel.com/ship</a></p>\n<h3 id=\"google-gemini-for-workspace\" style=\"position:relative;\"><a href=\"#google-gemini-for-workspace\" aria-label=\"google gemini for workspace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Google Gemini for Workspace</h3>\n<p>하이라이트: 프롬프트 최적 길이는 21개 단어(영어)지만 대부분 너무 짧게 (9단어) 씀, 페르소나/태스크/컨텍스트/포맷 네 개 요소 사용 권장</p>\n<p><strong>Ref</strong> <a href=\"https://inthecloud.withgoogle.com/gemini-for-google-workspace-prompt-guide/dl-cd.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://inthecloud.withgoogle.com/gemini-for-google-workspace-prompt-guide/dl-cd.html</a></p>\n<h3 id=\"패키지-매니저의-과거-그리고-미래\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80%EC%9D%98-%EA%B3%BC%EA%B1%B0-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EB%AF%B8%EB%9E%98\" aria-label=\"패키지 매니저의 과거 그리고 미래 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 매니저의 과거, 그리고 미래</h3>\n<p>(+ 토스의 선택)</p>\n<p>패키지 매니저가 어떻게 동작하는지는 생각해본 적이 없는 것 같다.</p>\n<p>ex) yarn의 패키지 매니저 설치 과정</p>\n<ol>\n<li>Resolution</li>\n</ol>\n<ul>\n<li>라이브러리 버전 고정</li>\n<li>라이브러리의 다른 의존성 확인</li>\n<li>라이브러리의 다른 의존성 버전 고정</li>\n</ul>\n<ol start=\"2\">\n<li>Fetch</li>\n</ol>\n<ul>\n<li>결정된 버전의 파일을 다운로드 하는 과정</li>\n</ul>\n<ol start=\"3\">\n<li>Link</li>\n</ol>\n<ul>\n<li>Resolution/Fetch 된 라이브러리를 소스 코드에서 사용할 수 있는 환경을 제공하는 과정</li>\n</ul>\n<p>마지막 Link 단계에서, npm/pnpm/PnP의 사례가 각각 다르다.</p>\n<ul>\n<li>\n<p>npm Linker</p>\n<ul>\n<li>package.json에서 명시하는 모든 의존성을 그냥 node_modules 디렉토리 밑에다가 하나하나씩 작성</li>\n<li>파일 탐색 시 node_modules를 타고 올라가면서 파일을 읽기 때문에 느리고, 디렉토리 크기가 너무 커지낟.</li>\n</ul>\n</li>\n<li>\n<p>pnpm Linker</p>\n<ul>\n<li>기존의 node_modules 디렉토리를 그대로 사용하지만, Hard link 방식을 사용하여 의존성이 디스크에 하나만 설치된다.</li>\n<li>npm에 비해 속도가 빠르고, node_modules 디렉토리 크기도 작아진다.</li>\n</ul>\n</li>\n<li>\n<p>PnP Linker</p>\n<ul>\n<li>node_modules가 아닌 JavaScript 객체로 의존성을 처리한다.</li>\n<li>Node.js 프로세스가 PnP Map을 메모리에 전부 로드하고 <code class=\"language-text\">import</code>와 <code class=\"language-text\">require</code> 문에서 이 Map을 참조하여 로딩시킨다.</li>\n<li>설치 속도가 빠르고, 패키지를 로드하는 속도도 빠르다.</li>\n</ul>\n</li>\n</ul>\n<p>원문을 통해 PnP와 zero-install의 차이에 대해서도 짚고 넘어가보자!</p>\n<p><strong>Ref</strong> <a href=\"https://toss.tech/article/lightning-talks-package-manager\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://toss.tech/article/lightning-talks-package-manager</a></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<hr>\n<p>늘어~~지는게 제일 좋은 이번주.</p>\n<p>아직도 5월의 마지막 주가 아니라니?</p>\n<p>5월 길다 길어 🫠</p>","timeToRead":7,"frontmatter":{"title":"5월 4주차 기록","date":"May 25, 2024","description":"귀찮지만 일어나야지","tags":["weekly"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/weekly/2024-5-week-4/","previous":{"fields":{"slug":"/flutter/extraordinary-dart-and-flutter/","langKey":"en","directoryName":"flutter"},"frontmatter":{"date":"May 26, 2024","description":"이제 시작이다","title":"기상천외 Dart&Flutter","tags":["flutter","main"]}},"next":{"fields":{"slug":"/weekly/2024-5-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 18, 2024","description":"건물 사이에 피어난 장미 🌹","title":"5월 3주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/weekly/2024-5-week-5/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"June 01, 2024","description":"이제 진짜 여름","title":"5월 5주차 기록","tags":["weekly"]}},"nextInSameTag":{"fields":{"slug":"/weekly/2024-5-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"May 18, 2024","description":"건물 사이에 피어난 장미 🌹","title":"5월 3주차 기록","tags":["weekly"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}