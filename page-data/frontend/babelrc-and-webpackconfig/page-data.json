{"componentChunkName":"component---src-templates-blog-post-js","path":"/frontend/babelrc-and-webpackconfig/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"73f749c6-c92e-509f-9653-97314d364d00","excerpt":"babelrc와 webpack.config webpack으로 React App 세팅을 설정해나가다가, TypeScript 설정을 위해 를 설치하게 되었다. babel 공식 문서를 따라 모듈을 세팅하다가, 위 코드의 가 .babelrc에 있어야 하는지, webpack.config.js…","html":"<p>babelrc와 webpack.config</p>\n<!-- more -->\n<hr>\n<p>webpack으로 React App 세팅을 설정해나가다가, TypeScript 설정을 위해 <code class=\"language-text\">@babel/preset-typescript</code>를 설치하게 되었다.</p>\n<p><a href=\"https://babeljs.io/docs/en/babel-preset-typescript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">babel 공식 문서</a>를 따라 모듈을 세팅하다가,</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-typescript\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드의 <code class=\"language-text\">presets</code>가 <strong>.babelrc</strong>에 있어야 하는지, <strong>webpack.config.js</strong>에 있어야 하는지 알 수 없어 각 파일의 목적을 알아보았다.</p>\n<p><strong>.babelrc</strong>는 <code class=\"language-text\">babel</code>의 설정을 위해 사용한다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// .babelrc.json</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>물론 <strong>webpack.config.js</strong>는 <code class=\"language-text\">webpack</code>의 설정을 위해 사용한다. 프로젝트 파일의 번들링과 관련된 설정들을 작성해준다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// webpack.config.js</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebPackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.tsx'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-typescript'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">babel</code>과 관련된 설정들을 <strong>.babelrc</strong>가 아닌 <strong>webpack.config.js</strong>에서 <code class=\"language-text\">babel-loader</code>를 설정한 부분에 작성해줄 수도 있다</p>\n<p>결론은, <code class=\"language-text\">babel</code>의 <code class=\"language-text\">presets</code>는 <strong>webpack.config.js</strong>와 <strong>.babelrc</strong> 파일 둘 중 한 곳에만 있으면 된다! 그러나 babel cli를 이용하여 직접 코드 변환을 수행하거나 babel test 등을 돌릴 때에는 <code class=\"language-text\">webpack</code>을 거치지 않기 때문에 <strong>.babelrc</strong>에 작성하는 방식이 권장된다,</p>\n<blockquote>\n<p>👾 <strong>babel.config</strong> vs <strong>.babelrc</strong></p>\n<ul>\n<li><strong>babel.config</strong>은 여러 디렉토리를 포함하는 프로젝트 전체의 구성에 주로 사용된다.</li>\n<li><strong>.babelrc</strong>는 서브 디렉토리에서 특정한 플러그인 사용 시 유용하다.</li>\n</ul>\n</blockquote>\n<hr>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://babeljs.io/docs/en/configuration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://babeljs.io/docs/en/configuration</a></li>\n<li><a href=\"https://webpack.js.org/configuration/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://webpack.js.org/configuration/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/43206062/-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/43206062/-</a> why-do-i-have-to-put-babel-presets-inside-babelrc-and-webpack-config-js</li>\n<li><a href=\"https://stackoverflow.com/questions/56463846/should-i-configure-babel-through-babelrc-or-webpack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://stackoverflow.com/questions/56463846/should-i-configure-babel-through-babelrc-or-webpack</a></li>\n<li><a href=\"https://kschoi.github.io/cs/babel-config-js-vs-babelrc/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://kschoi.github.io/cs/babel-config-js-vs-babelrc/</a></li>\n</ul>","timeToRead":2,"frontmatter":{"title":"babelrc와 webpack.config","date":"July 11, 2021","description":null,"tags":["frontend"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/frontend/babelrc-and-webpackconfig/","previous":{"fields":{"slug":"/wtc/wtc-week-24/","langKey":"en","directoryName":"wtc"},"frontmatter":{"date":"July 18, 2021","description":null,"title":"우테코 24주차 기록","tags":["woowacourse"]}},"next":{"fields":{"slug":"/frontend/svg-without-cra/","langKey":"en","directoryName":"frontend"},"frontmatter":{"date":"July 11, 2021","description":null,"title":"CRA 없이 svg 사용하기","tags":["frontend"]}},"previousInSameTag":{"fields":{"slug":"/frontend/file-input/","langKey":"en","directoryName":"frontend"},"frontmatter":{"date":"July 18, 2021","description":null,"title":"file input 다루는 법","tags":["frontend"]}},"nextInSameTag":{"fields":{"slug":"/frontend/svg-without-cra/","langKey":"en","directoryName":"frontend"},"frontmatter":{"date":"July 11, 2021","description":null,"title":"CRA 없이 svg 사용하기","tags":["frontend"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}