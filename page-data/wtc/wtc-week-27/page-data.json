{"componentChunkName":"component---src-templates-blog-post-js","path":"/wtc/wtc-week-27/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"7d9d731e-99a9-54a3-9c66-93493d209a42","excerpt":"우테코 27주차 기록 놀토 프로젝트 마지막(?) 기능 회의 3차 데모데이 다음 날, 마지막 기능인 댓글과 마이페이지 회의를 쭉 달렸다. vscode…","html":"<p>우테코 27주차 기록</p>\n<!-- more -->\n<hr>\n<h2 id=\"놀토-프로젝트\" style=\"position:relative;\"><a href=\"#%EB%86%80%ED%86%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"놀토 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>놀토 프로젝트</h2>\n<h3 id=\"마지막-기능-회의\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89-%EA%B8%B0%EB%8A%A5-%ED%9A%8C%EC%9D%98\" aria-label=\"마지막 기능 회의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막(?) 기능 회의</h3>\n<p>3차 데모데이 다음 날, 마지막 기능인 댓글과 마이페이지 회의를 쭉 달렸다. vscode는 켜지도 않고 하루종일 회의만 했다. 그래도 이전까지 해온 경험이 있어서인지 나름대로 착착 진행되었다. 미키가 댓글을, 내가 마이페이지를 맡기로 했다. 마크업을 뚝딱뚝딱 하고 백엔드 api를 붙였다. 조금 더 완성도 있는 서비스가 되어가고 있다!</p>\n<h3 id=\"유닛-테스트\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%9B-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"유닛 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유닛 테스트</h3>\n<p>컴포넌트 단위의 테스트를 진행하고 있다. 컴포넌트의 모든 비즈니스 로직을 추출하여 테스트에 용이하게끔 만들자는 의견이 있었는데, 뭔가 아직은 그럴 필요성까지는 느끼지 못하여 <code class=\"language-text\">jest</code>로 함수를 적당히 mocking해서 테스트하고 있다. 처음 틀을 잡을 때는 삽질을 굉장하게 했는데, 그 이후부터는 착착 초록불이 뜨는 것을 보니 코딩할 맛이 난다.</p>\n<hr>\n<h2 id=\"공부하기\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0\" aria-label=\"공부하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공부하기</h2>\n<h3 id=\"jit-컴파일-타임\" style=\"position:relative;\"><a href=\"#jit-%EC%BB%B4%ED%8C%8C%EC%9D%BC-%ED%83%80%EC%9E%84\" aria-label=\"jit 컴파일 타임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JIT 컴파일 타임</h3>\n<p>인터뷰 스낵 스터디를 하던 중, 자바스크립트에서 런타임 이전에 이뤄진다는 ‘코드 평가 과정(스캐닝 과정)’은 정확히 어떤 시점에 발생하는지 궁금하여 스터디 페어와 함께 찾아보았다.</p>\n<p>자바스크립트에서 이뤄지는 <strong>JIT 컴파일(just-in-time compilation)</strong> 이란 프로그램을 실제 실행하는 시점에 기계어로 번역하는 컴파일 기법이다. 동적 번역(dynamic translation)이라고도 불린다.</p>\n<p>이는 Java 등 컴파일이 필요한 언어와, 코드를 한 줄 한 줄 읽어내려가며 실행하는 JavaScript 등의 인터프리터 언어 두 가지 방식을 혼합한 방식이다. 실행 시점에서 인터프리트 방식으로 기계어 코드를 생성하면서 그 코드를 캐싱하여, 같은 함수가 여러 번 불릴 때 매번 기계어 코드를 생성하는 것을 방지한다. 즉 <strong>코드를 우선 인터프리터 방식으로 실행하고 필요할 때 컴파일</strong>하는 것이다. 이런 방식으로 JavaScript는 성능을 크게 개선시킬 수 있었다.</p>\n<blockquote>\n<p>👾 크롬의 자바스크립트 엔진인 V8은 JIT 컴파일을 지원한다.</p>\n</blockquote>\n<p>브라우저는 자바스크립트 엔진으로 자바스크립트 소스를 내부에서 이해할 수 있는 언어로 변환하고 실행하는데, 이를 <strong>컴파일</strong>이라고 부른다. 자바스크립트같은 인터프리터 언어는 항상 같은 코드를 반복해서 컴파일하고 생성한다. 브라우저에서 새로고침이나 페이지 이동이 발생하면 항상 같은 코드를 새로 컴파일하게 되는 것이다.</p>\n<p>그래서 V8에서는 먼저 JavaScript 코드를 Interpreter 방식으로 컴파일하고 이를 ByteCode로 만들어 낸다. 컴파일 속도를 높이기 위해 이 ByteCode를 캐싱해두고, 자주 쓰이는 코드를 최적화하여 이후 컴파일 시 참조하여 속도를 높인다.</p>\n<blockquote>\n<p>🤔 그래서 정확히, 실행컨텍스트를 만들고 변수 선언부를 등록하는 과정이 ‘런타임’인지 그 이전의 어떤 단계인지는 알지 못했다. 아무튼 런타임은 아닌 것으로!</p>\n</blockquote>\n<p><strong>Ref</strong></p>\n<ul>\n<li><a href=\"https://oowgnoj.dev/review/advanced-js-1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://oowgnoj.dev/review/advanced-js-1</a></li>\n<li><a href=\"https://pks2974.medium.com/v8-%EC%97%90%EC%84%9C-javascript-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%8B%A4%ED%96%89%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-%EC%A0%95%EB%A6%AC%ED%95%B4%EB%B3%B4%EA%B8%B0-25837f61f551\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://pks2974.medium.com/v8-에서-javascript-코드를-실행하는-방법-정리해보기-25837f61f551</a></li>\n</ul>\n<hr>\n<h2 id=\"etc\" style=\"position:relative;\"><a href=\"#etc\" aria-label=\"etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>etc</h2>\n<h3 id=\"커스텀-react-hooks로-로직-공유하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-react-hooks%EB%A1%9C-%EB%A1%9C%EC%A7%81-%EA%B3%B5%EC%9C%A0%ED%95%98%EA%B8%B0\" aria-label=\"커스텀 react hooks로 로직 공유하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 React Hooks로 로직 공유하기</h3>\n<p>컴포넌트의 비즈니스 로직을 hook으로 빼서, 해당 hook을 <strong>react-hooks-testing-library</strong>로 테스트할 수 있다.</p>\n<p><strong>Ref</strong> <a href=\"https://medium.com/jit-team/how-to-smoothly-manage-shared-logic-with-custom-react-hooks-558575c11bcf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/jit-team/how-to-smoothly-manage-shared-logic-with-custom-react-hooks-558575c11bcf</a></p>\n<h3 id=\"normalize-css\" style=\"position:relative;\"><a href=\"#normalize-css\" aria-label=\"normalize css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>normalize-css</h3>\n<p>모든 브라우저에서 동일한 결과물을 보기 위해 사용하는 툴이다. CSS reset 등을 사용하면 DOM 요소들에 기본적으로 적용되어 있는 <code class=\"language-text\">margin</code> 등의 스타일 기본값을 모두 초기화시켜줄 수 있지만, 이는 필요한 속성들까지도 전부 제거해버린다는 문제점이 있다. <a href=\"https://necolas.github.io/normalize.css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">normalize-css</a>는 normalizing이 필요한 속성들만 초기화시켜준다는 점에서 유용하다.</p>\n<p>macOS와 window에서 화면이 서로 다르게 보이는 문제를 해결하고자 사용했는데, 결국 normalize-css로는 모든 문제가 해결되지는 않아 각 요소들을 하나하나 체크하면서 적당한 여백을 두게끔 조정하고 있다. 프론트엔드 개발의 귀찮음 스택 += 1</p>\n<p><code class=\"language-text\">styled-components</code> 등의 CSS-in-JS를 사용 중이라면 <a href=\"https://www.npmjs.com/package/styled-normalize\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">styled-normalize</a>를 사용할 수 있다.</p>\n<h3 id=\"최신-css\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-css\" aria-label=\"최신 css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 CSS</h3>\n<ul>\n<li>flexbox의 <code class=\"language-text\">gap</code> 속성은 지금도 유용하게 쓰고 있다.</li>\n<li><code class=\"language-text\">scroll-snap-type</code> 속성은 놀토 서비스에 잠깐 적용했다가 사용되지 않아서 뺐다. 하지만 어디든 센스있게 사용 가능한 속성인 것 같다.</li>\n<li><code class=\"language-text\">aspect-ratio</code>라는 속성이 기대된다!</li>\n</ul>\n<p><strong>Ref</strong>\n<a href=\"https://www.youtube.com/watch?v=lkTpOHv1Ros&#x26;feature=youtu.be\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=lkTpOHv1Ros&#x26;feature=youtu.be</a></p>\n<h3 id=\"tdd-모르는-사람도-시작하는-법\" style=\"position:relative;\"><a href=\"#tdd-%EB%AA%A8%EB%A5%B4%EB%8A%94-%EC%82%AC%EB%9E%8C%EB%8F%84-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\"tdd 모르는 사람도 시작하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TDD 모르는 사람도 시작하는 법</h3>\n<p><strong>Ref</strong>\n<a href=\"https://twitter.com/KentBeck/status/1421257650113634304\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://twitter.com/KentBeck/status/1421257650113634304</a></p>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>아찔했던 3차 데모데이였다..🥲</p>\n<p>그리고 도쿄올림픽 꽤나 재밌었다. 팀원들과 여자배구 4강전 같이 봤다.\n잔여백신도 착착 잘 잡는 우리 팀원들. 나는 언제 맞을까나?</p>\n<p>이번주는 마지막 기능들을 빠르게 구현하느라 기술적인 어려움에 마주하는 경험이나 챌린징한 배움들은 조금 적은 편이었다. 하지만 서비스에 조금 더 어울리게끔 조금씩 개선해나가는 과정도 뿌듯한 것 같다 😆</p>\n<p>이제 다음 주 최종발표만을 앞두고 있다. 이제서야 슬슬 지치는 기분도 들지만, 조금만 더 정신차리고 버텨서 유종의 미를 거둬보자!</p>","timeToRead":4,"frontmatter":{"title":"우테코 27주차 기록","date":"August 08, 2021","description":null,"tags":["woowacourse"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/wtc/wtc-week-27/","previous":{"fields":{"slug":"/frontend/fe-performance-measurement/","langKey":"en","directoryName":"frontend"},"frontmatter":{"date":"August 14, 2021","description":null,"title":"프론트엔드 성능 분석 & 기본 성능 개선","tags":["frontend"]}},"next":{"fields":{"slug":"/wtc/wtc-week-26/","langKey":"en","directoryName":"wtc"},"frontmatter":{"date":"August 01, 2021","description":null,"title":"우테코 26주차 기록","tags":["woowacourse"]}},"previousInSameTag":{"fields":{"slug":"/wtc/wtc-week-28/","langKey":"en","directoryName":"wtc"},"frontmatter":{"date":"August 14, 2021","description":null,"title":"우테코 28주차 기록","tags":["woowacourse"]}},"nextInSameTag":{"fields":{"slug":"/wtc/wtc-week-26/","langKey":"en","directoryName":"wtc"},"frontmatter":{"date":"August 01, 2021","description":null,"title":"우테코 26주차 기록","tags":["woowacourse"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}