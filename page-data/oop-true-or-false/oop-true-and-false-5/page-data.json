{"componentChunkName":"component---src-templates-blog-post-js","path":"/oop-true-or-false/oop-true-and-false-5/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"ebce9462-1a73-5883-a6bd-90301d150837","excerpt":"…","html":"<p>책임과 메시지</p>\n<!-- more -->\n<hr>\n<p>존 달리와 밥 라타네는 실험을 통해 ‘책임감 분산’이라는 현상을 발견했다. 사건에 대한 목격자가 많으면 많을수록 개인이 느끼는 책임감은 적어진다. 집단적 위기 상황에서 명확한 책임을 가진 권위자가 없을 때, 대부분의 사람들은 자신에게 명확한 책임이 없는 경우에는 발작 환자를 도와주는 일을 타인의 책임으로 간주해버린다. 그에 반해 이를 보고할 책임이 명확하게 주어진 경우에는 신속하게 위기 상황을 해결하려고 노력한다.</p>\n<p>이 이야기에서 훌륭한 객체지향의 세계는 명확하게 정의된 역할과 책임을 지닌 객체들이 상호 협력하는 세계라는 사실을 이끌어낼 수 있다.</p>\n<hr>\n<h2 id=\"자율적인-책임\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%9C%A8%EC%A0%81%EC%9D%B8-%EC%B1%85%EC%9E%84\" aria-label=\"자율적인 책임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자율적인 책임</h2>\n<h3 id=\"설계의-품질을-좌우하는-책임\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EA%B3%84%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EC%A2%8C%EC%9A%B0%ED%95%98%EB%8A%94-%EC%B1%85%EC%9E%84\" aria-label=\"설계의 품질을 좌우하는 책임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설계의 품질을 좌우하는 책임</h3>\n<p>객체지향 공동체를 구성하는 기본 단위는 ‘자율적’인 객체다. 자율적인 객체란 스스로 정한 원칙에 따라 판단하고 스스로의 의지를 기반으로 행동하는 객체, 그 의지와 판단에 따라 각자 맡은 책임을 수행하는 객체를 의미한다.</p>\n<p>적절한 책임이 자율적인 객체를 낳고, 자율적인 객체들이 모여 유연하고 단순한 협력체를 낳는다. 이는 전체 애플리케이션의 품질을 결정한다.</p>\n<h3 id=\"자신의-의지에-따라-증언할-수-있는-자유\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%8B%A0%EC%9D%98-%EC%9D%98%EC%A7%80%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%A6%9D%EC%96%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%9E%90%EC%9C%A0\" aria-label=\"자신의 의지에 따라 증언할 수 있는 자유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자신의 의지에 따라 증언할 수 있는 자유</h3>\n<p>객체가 책임을 자율적으로 수행하기 위해서는 객체에게 할당되는 책임이 자율적이어야 한다.</p>\n<p>앨리스의 재판 이야기에서, 모자 장수가 재판이라는 협력에 참여하기 위해서는 왕의 요청을 적절하게 처리한 후 응답해야 한다. 모자 장수는 증언 방식과 증언 자료를 스스로의 의지와 판단에 따라 자유롭게 선택할 수 있다. 왕의 입장에서 모자 장수가 어떤 방법으로 증언하는지는 중요하지 않다.</p>\n<p>만약 왕이 모자 장수가 증언하기 위해 선택할 수 있는 자유의 범위를 지나치게 제한한다면, 모자장수가 다양한 매체를 통해 증언할 수 있는 가능성 자체를 박탈하게 된다. 이때 모자 장수는 자율적으로 책임을 수행할 수 없다.</p>\n<p>객체지향 세계에서 객체가 자율적이기 위해서는 객체에게 할당되는 책임의 수준 역시 자율적이어야 한다.</p>\n<h3 id=\"너무-추상적인-책임\" style=\"position:relative;\"><a href=\"#%EB%84%88%EB%AC%B4-%EC%B6%94%EC%83%81%EC%A0%81%EC%9D%B8-%EC%B1%85%EC%9E%84\" aria-label=\"너무 추상적인 책임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>너무 추상적인 책임</h3>\n<p>책임은 협력에 참여하는 의도를 명확하게 설명할 수 있는 수준 안에서 추상적이어야 한다. 어떤 책임이 자율적인지를 판단하는 기준은 문맥에 따라 다르다. 성급한 일반화의 오류를 피하고 현재의 문맥에 가장 적합한 책임을 선택할 수 있는 안목을 길러야 한다.</p>\n<h3 id=\"어떻게가-아니라-무엇을\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C%EA%B0%80-%EC%95%84%EB%8B%88%EB%9D%BC-%EB%AC%B4%EC%97%87%EC%9D%84\" aria-label=\"어떻게가 아니라 무엇을 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>‘어떻게’가 아니라 ‘무엇’을</h3>\n<p>자율적인 책임의 특징은 객체가 ‘어떻게(how)’ 해야 하는가가 아니라 ‘무엇(what)’을 해야 하는가를 설명한다는 것이다.</p>\n<h3 id=\"책임을-자극하는-메시지\" style=\"position:relative;\"><a href=\"#%EC%B1%85%EC%9E%84%EC%9D%84-%EC%9E%90%EA%B7%B9%ED%95%98%EB%8A%94-%EB%A9%94%EC%8B%9C%EC%A7%80\" aria-label=\"책임을 자극하는 메시지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>책임을 자극하는 메시지</h3>\n<p>객체가 자신에게 할당된 책임을 수행하도록 만드는 것은 외부에서 전달되는 요청 뿐이다. 이 요청을 메시지라고 부르며, 메시지는 객체로 하여금 자신의 책임 즉 행동을 수행하게 만드는 유일한 방법이다.</p>\n<h2 id=\"메시지와-메서드\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80%EC%99%80-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"메시지와 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지와 메서드</h2>\n<h3 id=\"메시지\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80\" aria-label=\"메시지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지</h3>\n<p>하나의 객체는 메시지를 전송함으로써 다른 객체에 접근한다. 왕과 모자 장수 사이의 협력에서 왕은 모자 장수에게 ‘증언하라’라는 메시지를 전송한다. 협력의 다른 축에서 하얀 토끼는 ‘증인석에 입장하라’라는 메시지를 전송한다.</p>\n<p>‘증언하라’라는 부분은 <strong>메시지 이름(message name)</strong> 이라고 한다. 메시지를 전송할 때 추가적인 정보가 필요한 경우 메시지의 <strong>인자(argument)</strong> 를 통해 추가 정보를 제공할 수 있다.</p>\n<p>메시지는 메시지 이름과 인자의 두 부분으로 구성된다</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">증언하라(어제, 왕국)</code></pre></div>\n<p>메시지 전송은 수신자와 메시지(메시지 이름과 인자의 조합)의 조합이다. 수신자, 메시지 이름, 인자의 순서대로 나열하면 메시지 전송이 된다.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">모자장수, 증언하라(어제, 왕국)</code></pre></div>\n<p>객체가 메시지를 수신할 수 있다는 것은 객체가 메시지에 해당하는 책임을 수행할 수 있다는 것을 의미한다. 객체가 수신할 수 있는 메시지의 모양은 객체가 수행할 책임의 모양을 결정한다.</p>\n<p>모자 장수는 ‘증인석에 입장하라’와 ‘증언하라’라는 메시지를 수신했을 때 이를 처리하는 방법을 자유롭게 선택할 수 있다. 모자 장수가 메시지를 변경하지만 않는다면 책임을 수행하는 방법을 변경하더라도 왕은 그 사실을 알 수 없다. 이것은 객체의 외부와 내부가 메시지를 기준으로 분리된다는 것을 의미한다.</p>\n<h3 id=\"메서드\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드</h3>\n<p>모자 장수가 메시지를 처리하기 위해 내부적으로 선택하는 방법을 <strong>메서드</strong>라고 한다. 객체가 메시지를 수신한 후 메시지를 처리할 수 있다고 판단되면 책임을 다하기 위해 메시지를 처리할 방법인 메서드를 선택한다.</p>\n<h3 id=\"다형성\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1\" aria-label=\"다형성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다형성</h3>\n<p>다형성이란 서로 다른 유형의 객체가 동일한 메시지에 대해 서로 다르게 반응하는 것을 의미한다. 다형성은 하나의 메시지와 하나 이상의 메서드 사이의 관계로 볼 수 있다.</p>\n<p>서로 다른 객체들이 다형성을 만족시킨다는 것은 객체들이 동일한 책임을 공유한다는 것을 의미한다. 메시지 수신자들이 동일한 오퍼레이션을 서로 다른 방식으로 처리하더라도 메시지 송신자의 관점에서 이 객체들은 동일한 책임을 수행한다.</p>\n<p>다형성은 메시지 송신자의 관점에서 동일한 역할을 수행하는 다양한 타입의 객체와 협력할 수 있게 하며, 동일한 역할을 수행할 수 있는 객체들 사이의 <strong>대체 가능성</strong>을 의미한다. 이를 통해 설계를 유연하고 재사용 가능하게 만들 수 있다. 다형성은 수신자의 종류를 캡슐화하여, 송신자가 수신자의 종류를 모르더라도 메시지를 전송할 수 있다.</p>\n<p>즉 다형성을 사용하면 메시지를 이해할 수 있는 어떤 객체와도 협력할 수 있는 유연하고 확장 가능한 구조를 만들 수 있다.</p>\n<h3 id=\"유연하고-확장-가능하고-재사용성이-높은-협력의-의미\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%97%B0%ED%95%98%EA%B3%A0-%ED%99%95%EC%9E%A5-%EA%B0%80%EB%8A%A5%ED%95%98%EA%B3%A0-%EC%9E%AC%EC%82%AC%EC%9A%A9%EC%84%B1%EC%9D%B4-%EB%86%92%EC%9D%80-%ED%98%91%EB%A0%A5%EC%9D%98-%EC%9D%98%EB%AF%B8\" aria-label=\"유연하고 확장 가능하고 재사용성이 높은 협력의 의미 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유연하고 확장 가능하고 재사용성이 높은 협력의 의미</h3>\n<p>송신자가 수신자에 대해 매우 적은 정보만 알고 있더라도 상호 협력이 가능하다는 사실은 설계의 품질에 큰 영향을 미친다.</p>\n<p>첫째, 협력이 유연해진다. 송신자는 수신자가 메시지를 이해한다면 누구라도 상관하지 않으므로, 수신자를 다른 타입의 객체로 대체하여 유연하게 협력을 변경할 수 있다.</p>\n<p>둘째, 협력이 수행되는 방식을 확장할 수 있다. 송신자에게 아무런 영향도 미치지 않고서도 수신자를 교체할 수 있기 때문에 협력의 세부적인 수행 방식을 쉽게 수정할 수 있다.</p>\n<p>셋째, 협력이 수행되는 방식을 재사용할 수 있다. 협력에 영향을 미치지 않고서도 다양한 객체들이 수신자의 자리를 대체할 수 있기 때문에 다양한 문맥에서 협력을 재사용할 수 있다.</p>\n<h3 id=\"송신자와-수신자를-약하게-연결하는-메시지\" style=\"position:relative;\"><a href=\"#%EC%86%A1%EC%8B%A0%EC%9E%90%EC%99%80-%EC%88%98%EC%8B%A0%EC%9E%90%EB%A5%BC-%EC%95%BD%ED%95%98%EA%B2%8C-%EC%97%B0%EA%B2%B0%ED%95%98%EB%8A%94-%EB%A9%94%EC%8B%9C%EC%A7%80\" aria-label=\"송신자와 수신자를 약하게 연결하는 메시지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>송신자와 수신자를 약하게 연결하는 메시지</h3>\n<p>메시지는 송신자와 수신자 사이의 결합도를 낮춤으로써 설계를 유연하고, 확장 가능하고, 재사용 가능하게 만든다.</p>\n<hr>\n<h2 id=\"메시지를-따라라\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EB%94%B0%EB%9D%BC%EB%9D%BC\" aria-label=\"메시지를 따라라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지를 따라라</h2>\n<h3 id=\"객체지향의-핵심-메시지\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EC%9D%98-%ED%95%B5%EC%8B%AC-%EB%A9%94%EC%8B%9C%EC%A7%80\" aria-label=\"객체지향의 핵심 메시지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체지향의 핵심, 메시지</h3>\n<p>객체지향 애플리케이션의 핵심은 연쇄적으로 메시지를 전송하고 수신하는 객체들 사이의 협력 관계를 기반으로 사용자에게 유용한 기능을 제공하는 것이다.</p>\n<p>객체지향 애플리케이션은 클래스를 이용해 만들어지지만 메시지를 통해 정의되며, 실제로 애플리케이션을 살아있게 만드는 것은 클래스가 아니라 객체다. 클래스를 정의하는 것보다 객체들의 속성과 행위를 식별하는 것이 먼저다. 진정한 객체지향 패러다임으로의 도약은 개별적인 객체가 아니라 메시지를 주고받는 객체들 사이의 커뮤니케이션에 초점을 맞출 때 일어난다.</p>\n<p>객체 자체에 초점을 맞추고, 메시지가 아니라 데이터를 중심으로 객체를 설계하는 방식은 객체의 내부 구조를 객체 정의의 일부로 만들기 때문에 객체의 자율성을 저해한다. 객체의 자율성을 보장하기 위해 객체 내부 구조는 감춰져야 한다.</p>\n<p>데이터가 아닌 객체의 행위를 고려하기 위해서는 객체를 독립된 단위가 아니라 협력이라는 문맥 안에서 생각해야 한다. 어떤 객체가 어떤 메시지를 전송할 수 있는가와 어떤 객체가 어떤 메시지를 이해할 수 있는가를 중심으로 객체 사이의 협력 관계를 구성해야 한다.</p>\n<p>객체지향 설계의 중심에는 메시지가 위치한다. 객체가 메시지를 선택하는 것이 아니라 메시지가 객체를 선택하게 해야 한다.</p>\n<h3 id=\"책임-주도-설계-다시-살펴보기\" style=\"position:relative;\"><a href=\"#%EC%B1%85%EC%9E%84-%EC%A3%BC%EB%8F%84-%EC%84%A4%EA%B3%84-%EB%8B%A4%EC%8B%9C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"책임 주도 설계 다시 살펴보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>책임-주도 설계 다시 살펴보기</h3>\n<p>객체지향 설계는 적절한 책임을 적절한 객체에게 할당하면서 메시지를 기반으로 협력하는 객체들의 관계를 발견하는 과정이다. 이를 <strong>책임-주도 설계</strong>라고 한다.</p>\n<p>책임-주도 설계 방법에서 역할, 책임, 협력을 식별하는 것은 애플리케이션이 수행하는 기능을 시스템의 책임으로 보는 것에서 시작된다. 객체가 책임을 완수하기 위해 다른 객체의 도움이 필요하다고 판단되면 도움을 요청하기 위해 어떤 메시지가 필요한지 결정한다. 메시지를 결정한 후에는 메시지를 수신하기에 적합한 객체를 선택한다. 수신자는 송신자가 메시지를 보내면서 기대한 바를 충족시켜야 한다.</p>\n<p>즉 메시지가 수신자의 책임을 결정한다.</p>\n<h3 id=\"whatwho-사이클\" style=\"position:relative;\"><a href=\"#whatwho-%EC%82%AC%EC%9D%B4%ED%81%B4\" aria-label=\"whatwho 사이클 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What/Who 사이클</h3>\n<p>책임-주도 설계의 핵심은 어떤 행위가 필요한지를 먼저 결정한 후에 이 행위를 수행할 객체를 결정하는 것이다. 이 과정을 흔히 <strong>What/Who 사이클</strong>이라고 한다.</p>\n<p>협력이라는 문맥 안에서 필요한 메시지를 먼저 결정한 후에 메시지를 수신하기에 적합한 객체를 선택한다. 그리고 수신된 메시지가 객체의 책임을 결정한다. 책임이 먼저 오고 객체가 책임을 따른다. 결과적으로 시스템이 수행해야 하는 행위는 협력하는 객체들의 책임으로 분배된다. 즉 수신 가능한 메시지가 모여 객체의 인터페이스를 구성한다.</p>\n<h3 id=\"묻지-말고-시켜라\" style=\"position:relative;\"><a href=\"#%EB%AC%BB%EC%A7%80-%EB%A7%90%EA%B3%A0-%EC%8B%9C%EC%BC%9C%EB%9D%BC\" aria-label=\"묻지 말고 시켜라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>묻지 말고 시켜라</h3>\n<p>메시지를 먼저 결정하고 객체가 메시지를 따르게 하는 설계 방식은 객체가 외부에 제공하는 인터페이스가 독특한 스타일을 따르게 한다. 이를 <strong>묻지 말고 시켜라(Tell, Don’t Ask)</strong> 스타일 또는 <strong>데메테르 법칙(Law of Demeter)</strong> 이라고 한다.</p>\n<p>메시지 중심의 설계는 메시지 수신자의 캡슐화를 증진시킨다. 또한 송신자가 수신자의 내부 상태를 미리 알 수 없기 때문에 송신자와 수신자가 느슨하게 결합된다. 송신자는 수신자가 어떤 객체인지는 모르지만 자신이 전송한 메시지를 잘 처리할 것이라는 것을 믿고 메시지를 전송할 수밖에 없다.</p>\n<p>‘묻지 말고 시켜라’ 스타일은 객체를 자율적으로 만들고 캡슐화를 보장하며 결합도를 낮게 유지시켜 주기 때문에 설계를 유연하게 만든다. 이 스타일은 메시지가 ‘어떻게’ 해야하는지를 지시하는 것이 아니라 ‘무엇을’ 해야하는지를 요청하는 것이다.</p>\n<h3 id=\"메시지를-믿어라\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80%EB%A5%BC-%EB%AF%BF%EC%96%B4%EB%9D%BC\" aria-label=\"메시지를 믿어라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지를 믿어라</h3>\n<p>메시지를 전송하는 객체의 관점에서 자신이 전송하는 메시지를 수신할 수 있다면 협력하는 객체의 종류가 무엇인지는 중요하지 않다. 또 메시지를 이해할 수 있다면 다양한 타입의 객체로 협력 대상을 자유롭게 교체할 수 있기 때문에 설계가 좀 더 유연해진다.</p>\n<p>메시지를 믿어라. 그러면 자율적인 책임은 저절로 따라올 것이다.</p>\n<hr>\n<h2 id=\"객체-인터페이스\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"객체 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 인터페이스</h2>\n<h3 id=\"인터페이스\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터페이스</h3>\n<p>일반적으로 인터페이스란 어떤 두 사물이 마주치는 경계 지점에서 서로 상호작용할 수 있게 이어주는 방법이나 장치를 의미한다. 인터페이스는 다음과 같은 세 가지 특징을 지닌다.</p>\n<ol>\n<li>인터페이스의 사용법을 익히기만 하면 내부 구조나 동작 방식을 몰라도 쉽게 대상을 조작하거나 의사를 전달할 수 있다.</li>\n<li>인터페이스 자체는 변경하지 않고 단순히 내부 구성이나 작동 방식만을 변경하는 것은 인터페이스 사용자에게 어떤 영향도 미치지 않는다.</li>\n<li>대상이 변경되더라도 동일한 인터페이스를 제공하기만 하면 아무런 문제 없이 상호작용할 수 있다.</li>\n</ol>\n<p>협력에 참여하는 객체는 인터페이스를 통해 다른 객체와 상호작용하며, 객체의 인터페이스만 알면 객체의 내부 구조나 작동 방식을 몰라도 객체와 상호작용 할 수 있다. 또한 인터페이스만 유지된다면 객체의 내부 구조나 작동 방식을 변경하거나 다른 객체로 대체한다고 하더라도 인터페이스 사용자에게 영향을 미치지 않는다.</p>\n<h3 id=\"메시지가-인터페이스를-결정한다\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80%EA%B0%80-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EA%B2%B0%EC%A0%95%ED%95%9C%EB%8B%A4\" aria-label=\"메시지가 인터페이스를 결정한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지가 인터페이스를 결정한다</h3>\n<p>객체의 인터페이스는 객체가 수신할 수 있는 메시지의 목록으로 구성된다</p>\n<h3 id=\"공용-인터페이스\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EC%9A%A9-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"공용 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공용 인터페이스</h3>\n<p>실제로 인터페이스는 외부에서 접근 가능한 공용 인터페이스와 내부에서만 접근할 수 있는 사적인 인터페이스로 구분된다. 각각은 메시지 송신자가 다른 객체인지 아니면 객체 자신인지에 따라 다르다.</p>\n<p>왕과 모자 장수 사이에는 ‘증언하라’라는 메시지를 송/수신할 수 있는 인터페이스가 존재한다. 하얀 토끼와 모자 장수 사이에는 ‘증인석에 입장하라’라는 메시지를 수신할 수 있는 인터페이스가 존재한다.</p>\n<p>객체가 협력에 참여하기 위해 수행하는 메시지가 객체의 공용 인터페이스를 암시한다. 먼저 메시지를 결정하고 이 메시지를 수행할 객체를 나중에 결정하기 때문에 메시지가 수신자의 인터페이스를 결정할 수밖에 없다.</p>\n<h3 id=\"책임-메시지-그리고-인터페이스\" style=\"position:relative;\"><a href=\"#%EC%B1%85%EC%9E%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"책임 메시지 그리고 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>책임, 메시지, 그리고 인터페이스</h3>\n<ul>\n<li>협력에 참여하는 객체의 책임은 자율적이어야 한다</li>\n<li>객체의 인터페이스는 객체가 수신할 수 있는 메시지의 목록으로 채워지며, 객체가 메시지를 수신했을 때 적절한 객체의 책임이 수행된다. 이 책임 수행 방법을 메서드라고 하며, 메시지와 메서드의 구분을 통해 다형성이 탄생한다.</li>\n<li>인터페이스는 객체가 다른 객체와 협력하기 위한 접점으로, 객체가 어떤 메시지를 수신할 수 있느냐가 어떤 책임을 수행할 수 있느냐와 어떤 인터페이스를 가질 것인지를 결정한다. 메시지로 구성된 공용 인터페이스는 객체의 외부와 내부를 명확하게 분리한다.</li>\n</ul>\n<hr>\n<h2 id=\"인터페이스와-구현의-분리\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%99%80-%EA%B5%AC%ED%98%84%EC%9D%98-%EB%B6%84%EB%A6%AC\" aria-label=\"인터페이스와 구현의 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터페이스와 구현의 분리</h2>\n<h3 id=\"객체-관점에서-생각하는-방법\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EA%B4%80%EC%A0%90%EC%97%90%EC%84%9C-%EC%83%9D%EA%B0%81%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"객체 관점에서 생각하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 관점에서 생각하는 방법</h3>\n<ul>\n<li>좀 더 추상적인 인터페이스 - 지나치게 상세한 수준의 메시지는 객체의 자율성을 저해한다. 추상적인 인터페이스를 제공하여 수신자의 자율성을 보장하는 것이 좋다.</li>\n<li>최소 인터페이스 - 외부에서 사용할 필요가 없는 인터페이스는 최대한 노출하지 말자. 최소 인터페이스는 메시지를 먼저 결정하고 객체를 나중에 선택하는 책임-주도 설계 방법을 따를 때 달성할 수 있다.</li>\n<li>인터페이스와 구현 간에 차이가 있다는 점을 인식 - 객체의 외부와 내부를 명확하게 분리하는 것이 중요하다.</li>\n</ul>\n<h3 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h3>\n<p><strong>구현(implementation)</strong> 은 객체지향의 세계에서 내부 구조와 작동 방식을 가리키는 것으로, 객체의 공용 인터페이스에 포함되지 않는 모든 것이 구현에 포함된다.</p>\n<p>객체는 상태와 행동을 가진다. 상태를 어떻게 표현할 것인가는 객체의 구현에 해당한다. 행동은 메시지 처리 방법을 가리키는 것으로, 메서드라고 부른다. 메서드를 구성하는 코드 자체는 객체의 구현 부분에 포함된다.</p>\n<p>객체의 외부와 내부를 분리하는 것은 결국 객체의 공용 인터페이스와 구현을 명확하게 분리하라는 것이다.</p>\n<h3 id=\"인터페이스와-구현의-분리-원칙\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%99%80-%EA%B5%AC%ED%98%84%EC%9D%98-%EB%B6%84%EB%A6%AC-%EC%9B%90%EC%B9%99\" aria-label=\"인터페이스와 구현의 분리 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터페이스와 구현의 분리 원칙</h3>\n<p>훌륭한 객체란 구현을 모른 채 인터페이스만 알면 쉽게 상호작용할 수 있는 객체를 의미한다.</p>\n<p>소프트웨어는 항상 변경된다. 객체의 모든 것이 외부에 공개돼 있다면 변경에 의한 파급효과가 어마어마할 것이다. 소프트웨어의 변경 시 안전 지대는 객체의 내부인 구현이고, 위험 지대는 객체의 외부인 공용 인터페이스다. 변경에 대한 안전 지대를 만드는 것는 객체를 자율적인 존재를 만드는 데도 기여한다.</p>\n<h3 id=\"캡슐화\" style=\"position:relative;\"><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94\" aria-label=\"캡슐화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캡슐화</h3>\n<p>객체의 자율성을 보존하기 위해 구현을 외부로부터 감추는 것을 캡슐화라고 한다. 정보 은닉이라고 부르기도 한다.</p>\n<ul>\n<li><strong>상태와 행위의 캡슐화</strong>\n객체는 상태와 행위를 한데 묶은 후 외부에서 반드시 접근해야만 하는 행위만 골라 공용 인터페이스를 통해 노출한다. 프로그래밍 관점에서 상태를 주로 데이터로 구현되고 행동은 프로세스로 구현된다. 객체지향에서는 데이터와 프로세스를 객체라는 하나의 틀 안으로 함께 묶어 놓음으로써 객체의 자율성을 보장한다.</li>\n<li><strong>사적인 비밀의 캡슐화</strong>\n객체는 외부의 객체가 자신의 내부 상태를 직접 관찰하거나 제어할 수 없도록 막기 위해 의사소통 가능한 특별한 경로만 외부에 노출한다. 이런 고정된 경로를 공용 인터페이스라고 한다. 객체는 공용 인터페이스를 경계로 최대한의 자율성을 보장받을 수 있다.\n객체를 자율적인 존재로 바라보는 것은 결국 객체의 내부와 외부를 엄격하게 분리한다는 것을 의미한다. 객체는 자신의 의지에 따라 변경하고 조작할 수 있는 비밀을 가지고 있는 부분인 내부와, 외부의 객체가 의지하고 접근할 수 있는 공용 인터페이스를 가리키는 외부로 구성된다.</li>\n</ul>\n<hr>\n<h2 id=\"책임의-자율성이-협력의-품질을-결정한다\" style=\"position:relative;\"><a href=\"#%EC%B1%85%EC%9E%84%EC%9D%98-%EC%9E%90%EC%9C%A8%EC%84%B1%EC%9D%B4-%ED%98%91%EB%A0%A5%EC%9D%98-%ED%92%88%EC%A7%88%EC%9D%84-%EA%B2%B0%EC%A0%95%ED%95%9C%EB%8B%A4\" aria-label=\"책임의 자율성이 협력의 품질을 결정한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>책임의 자율성이 협력의 품질을 결정한다</h2>\n<p>객체의 책임이 자율적일수록 협력이 이해하기 쉬워지고 유연하게 변경할 수 있게 되며, 결과적으로 책임이 얼마나 자율적인지가 전체적인 협력의 설계 품질을 결정한다. 그 이유는 다음과 같다.</p>\n<p>첫째, 자율적인 책임은 협력을 단순하게 만든다. 자율적인 책임은 의도를 명확하게 표현함으로써 협력을 단순하고 이해하기 쉽게 만든다. 책임이 적절하게 추상화되는 것이다.</p>\n<p>둘째, 자율적인 책임은 모자 장수의 외부와 내부를 명확하게 분리한다. 책임이 자율적이기 때문에 왕과 모자 장수 사이에 약속된 ‘증언하다’라는 책임만 완수할 수 있으면 어떤 방법을 선택할지는 전적으로 모자 장수의 권한이다. 요청하는 객체가 몰라도 되는 사적인 부분이 객체 내부로 캡슐화되기 때문에 인터페이스와 구현이 분리된다.</p>\n<p>셋째, 책임이 자율적일 경우 책임을 수행하는 내부적인 방법을 변경하더라도 외부에 영향을 미치지 않는다. 변경의 파급효과가 객체 내부로 캡슐화되기 때문에 두 객체 간의 결합도가 낮아진다.</p>\n<p>넷째, 자율적인 책임은 협력의 대상을 다양하게 선택할 수 있는 유연성을 제공한다. 왕의 입장에서 ‘증언하라’라는 책임을 수행할 수 있다면 모자 장수가 아닌 어떤 사람이 요청을 수신하더라도 재판을 진행하는 데 문제가 없다. 책임이 자율적일수록 설계가 유연해지고 재사용성이 높아진다.</p>\n<p>다섯째, 객체가 수행하는 책임들이 자율적일수록 객체의 역할을 이해하기 쉬워진다. 모자 장수는 자신의 의지를 기반으로 책임을 완수할 수 있을 정도로 충분히 자율적이다. 책임이 자율적일수록 객체의 응집도를 높은 상태로 유지하기가 쉬워진다.</p>\n<blockquote>\n<p>즉 책임이 자율적일수록 적절하게 ‘추상화’되며, ‘응집도’가 높아지고, ‘결합도’가 낮아지며, ‘캡슐화’가 증진되고, ‘인터페이스와 구현이 명확히 분리’되며, 설계의 ‘유연성’과 ‘재사용성’이 향상된다.</p>\n</blockquote>\n<hr>\n<h2 id=\"-discussion\" style=\"position:relative;\"><a href=\"#-discussion\" aria-label=\" discussion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👂 Discussion</h2>\n<p><strong>🤔 모자장수 외부의 객체 (ex. 왕)는 어떤 기준으로 모자장수에게 ‘증언하라’고 시키는 것일까?</strong></p>\n<ul>\n<li>모자장수의 공용 인터페이스를 보고 확인한다. 특정 인터페이스를 갖고 있는지 확인하는 과정은, 특정 클래스를 상속받았는지, 또는 필요한 메서드가 있는지 등을 확인할 수 있다.</li>\n<li>메시지를 받은 객체가 관련 정보가 없다면, 다른 객체에게 메시지를 또 요청할 수 있다.</li>\n<li>인터페이스는 설계 시점에는 모르는 것이다. ‘증언하라’는 메시지를 보내고 싶다면, 그 메시지를 받는 모자장수나 앨리스는 ‘증언하라’에 대한 인터페이스를 구현했을 것이고, 하얀 토끼는 ‘증언하라’ 인터페이스를 만들어두지 않았을 것이다. 모든 것은 “메시지”로부터 출발해야 한다.</li>\n<li>왕-재판장-증인 이라는 역할이 있고, 증인이 되기 위해서는 필요한 인터페이스를 가지고 있어야 한다. 그 사실을 알고 있기 때문에 왕이 호출을 한 것일 것이다. 약속한 리턴값이 올 것이라고 믿고, 묻지 말고 시키자!</li>\n</ul>\n<p><strong>🤔 ‘어떻게’ → ‘무엇을’로 관점을 전환할 경우, 책임의 처리에 필요한 것을 외부에서 찾게 되어 협력이 더욱 복잡해지는데, 그럼 객체의 의존성이 높아지는 게 아닌가?</strong></p>\n<ul>\n<li>추상적인 인터페이스를 만들어야한다는 것은 협력을 고려하면서도 외부 의존성을 낮추는 것이다.</li>\n<li>그래서 너무 구체적이지도 너무 추상적이지도 않게, 추상화의 정도를 적절하게 해야 한다.</li>\n</ul>\n<p><strong>🤔 객체의 응집도란?</strong></p>\n<ul>\n<li>‘응집도’란 ‘하나의 프로그램을 구성하는 각각의 모듈이 그 고유의 기능을 잘 처리할 수 있는지를 나타내는 정도’라고 하는데, 책임이 자율적일수록 외부에서 강제하는 부분이 줄어드니까 (수신자) 객체가 자기가 필요한 데이터들만 가지고 일을 알아서 잘 처리한다는 뜻이다.</li>\n<li>제너럴리스트가 아닌 스페셜리스트</li>\n</ul>\n<p><strong>Ref</strong> <a href=\"https://velog.io/@ljinsk3/%EC%A2%8B%EC%9D%80-%EC%84%A4%EA%B3%84%EB%9E%80-feat.-%EA%B2%B0%ED%95%A9%EB%8F%84-%EC%9D%91%EC%A7%91%EB%8F%84\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@ljinsk3/%EC%A2%8B%EC%9D%80-%EC%84%A4%EA%B3%84%EB%9E%80-feat.-%EA%B2%B0%ED%95%A9%EB%8F%84-%EC%9D%91%EC%A7%91%EB%8F%84</a></p>","timeToRead":14,"frontmatter":{"title":"객체지향의 사실과 오해 - 5장","date":"March 05, 2022","description":null,"tags":["oop-true-and-false"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/oop-true-or-false/oop-true-and-false-5/","previous":{"fields":{"slug":"/weekly/2022-3-week-1/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 05, 2022","description":"weekly-i-learned","title":"3월 첫주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/weekly/2022-2-week-4/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 27, 2022","description":"weekly-i-learned","title":"2월 4주차 기록","tags":["weekly"]}},"previousInSameTag":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-6/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"March 12, 2022","description":null,"title":"객체지향의 사실과 오해 - 6장(1)","tags":["oop-true-and-false"]}},"nextInSameTag":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-4/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"February 27, 2022","description":null,"title":"객체지향의 사실과 오해 - 4장","tags":["oop-true-and-false"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}