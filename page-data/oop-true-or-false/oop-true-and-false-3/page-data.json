{"componentChunkName":"component---src-templates-blog-post-js","path":"/oop-true-or-false/oop-true-and-false-3/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"1ec6065d-06f1-5dd0-81f4-39ddafc398af","excerpt":"…","html":"<p>타입과 추상화</p>\n<!-- more -->\n<hr>\n<blockquote>\n<p>일단 컴퓨터를 조작하는 것이 추상화를 구축하고, 조작하고, 추론하는 것에 관한 모든 것이라는 것을 깨닫고 나면 (훌륭한) 컴퓨터 프로그램을 작성하기 위한 중요한 전제 조건은 추상화를 정확하게 다루는 능력이라는 것이 명확해진다.</p>\n</blockquote>\n<p>초기 지하철 노선도는 실제와 유사한 물리적인 지형 위에 구불구불한 운행 노선과 불규칙적인 역 간의 거리를 사실적으로 묘사하고 있었지만, 이렇게 사실적인 정보는 오히려 지하철을 이용하는 승객들로 하여금 노선도를 이해하기 어렵게 만든다. 지하철 노선도 디자인에서 가장 중요한 것은 얼마나 사실적으로 지형을 묘사했느냐가 아니라 역과 역 사이의 연결성을 얼마나 직관적으로 표현했느냐다.</p>\n<hr>\n<h2 id=\"추상화를-통한-복잡성-극복\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EC%83%81%ED%99%94%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%B3%B5%EC%9E%A1%EC%84%B1-%EA%B7%B9%EB%B3%B5\" aria-label=\"추상화를 통한 복잡성 극복 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추상화를 통한 복잡성 극복</h2>\n<p>현실은 복잡하며 예측 불가능한 혼돈의 덩어리다. 사람들은 본능적으로 이해하기 쉽고 예측 가능한 수준으로 현실을 분해하고 단순화하는 전략을 따른다.</p>\n<p>헨리 백의 지하철 노선도는 불필요한 지형 정보를 제거함으로써 단순함을 달성한 추상화의 훌륭한 예다. 진정한 의미에서 추상화란 현실에서 출발하되 불필요한 부분을 도려내가면서 사물의 놀라운 본질을 드러나게 하는 과정이다. 불필요한 부분을 무시함으로써 현실에 존재하는 복잡성을 극복하는 것이다.</p>\n<blockquote>\n<p>💡 <strong>추상화</strong>\n어떤 양상, 세부 사항, 구조를 좀 더 명확하게 이해하기 위해 특정 절차나 물체를 의도적으로 생략하거나 감춤으로써 복잡도를 극복하는 방법이다.</p>\n</blockquote>\n<p>객체지향 패러다임은 객체라는 추상화를 통해 현실의 복잡성을 극복한다.</p>\n<hr>\n<h2 id=\"객체지향과-추상화\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EA%B3%BC-%EC%B6%94%EC%83%81%ED%99%94\" aria-label=\"객체지향과 추상화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체지향과 추상화</h2>\n<p>✔️ <strong>모두 트럼프일 뿐</strong>\n정원에 들어선 앨리스 자신을 포함하여 앨리스가 마주하는 정원사, 클로버 병사들, 기타 등등은 모두 객체다. 객체는 제각기 독특한 모습과 행동 양식을 지니지만, 이들을 하나로 아우르는 ‘트럼프’라는 개념으로 단순화할 수 있다.</p>\n<p>✔️ <strong>그룹으로 나누어 단순화하기</strong>\n정원 속 인물들은 다양한 측면에서 서로를 구별할 수 있는 독특한 특징이 있다. 이처럼 명확한 경계를 가지고 서로 구별할 수 있는 구체적인 사람이나 사물을 객체라고 한다.</p>\n<p>한편 장면에 등장하는 다양한 인물들을 모두 ‘트럼프’라고 줄여 지칭할 수 있다. 모든 인물들은 공통적으로 ‘트럼프’라고 했을 때 떠오르는 일반적인 외형과 행동 방식을 지니고 있기 때문이다.</p>\n<p>✔️ <strong>개념</strong>\n앨리스가 인물들의 차이점을 무시하고 공통점만을 취해 트럼프라는 개념으로 단순화한 것은 추상화의 일종이다. 이러한 공통점을 기반으로 객체들을 묶기 위한 그릇을 <strong>개념(concept)</strong> 이라고 한다.</p>\n<p>개념을 이용하면 객체를 여러 그룹으로 <strong>분류(classification)</strong> 할 수 있다. 결국 각 객체는 특정한 개념을 표현하는 그룹의 일원으로 포함된다.</p>\n<blockquote>\n<p>객체란 특정한 개념을 적용할 수 있는 구체적인 사물을 의미한다. 개념이 객체에 적용됐을 때 객체를 개념의 인스턴스라고 한다.</p>\n</blockquote>\n<p>✔️ <strong>개념의 세 가지 관점</strong>\n개념은 특정한 객체가 어떤 그룹에 속할 것인지를 결정한다. 객체의 분류 장치로서 개념은 다음 세 가지 관점을 포함한다.</p>\n<ul>\n<li><strong>심볼(symbol)</strong>: 개념을 가리키는 간략한 이름이나 명칭 (ex. ‘트럼프’)</li>\n<li><strong>내연(intension)</strong>: 개념의 완전한 정의를 나타내며 내연의 의미를 이용해 객체가 개념에 속하는지 여부를 확인할 수 있다. (ex. 몸이 납작하고 두 손 두 발이 네모난 몸 모서리에 달려 있는 등장인물)</li>\n<li><strong>외연(extension)</strong>: 개념에 속하는 모든 객체의 집합 (ex. 정원사, 병사, 신하…)</li>\n</ul>\n<p>✔️ <strong>객체를 분류하기 위한 틀</strong>\n분류란 특정한 객체를 특정한 개념의 객체 집합에 포함시키거나 포함시키지 않는 작업을 의미한다.</p>\n<blockquote>\n<p>분류란 객체에 특정한 개념을 적용하는 작업이다. 객체에 특정한 개념을 적용하기로 결심했을 때 우리는 그 객체를 특정한 집합의 멤버로 분류하고 있는 것이다.</p>\n</blockquote>\n<p>어떤 객체를 어떤 개념으로 분류할지가 객체지향의 품질을 결정한다.</p>\n<p>✔️ <strong>분류는 추상화를 위한 도구다</strong></p>\n<ol>\n<li>추상화는 구체적인 사물 간의 공통점은 취하고 차이점은 버리는 일반화를 통해 단순화하는 것이다.</li>\n<li>추상화는 중요한 부분을 강조하기 위해 불필요한 세부 사항을 제거해 단순화하는 것이다.</li>\n</ol>\n<hr>\n<h2 id=\"타입\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85\" aria-label=\"타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입</h2>\n<p>✔️ <strong>타입은 개념이다</strong>\n타입은 공통점을 기반으로 객체들을 묶기 위한 틀이다.</p>\n<blockquote>\n<p>타입은 개념과 동일하다. 어떤 객체에 타입을 적용할 수 있을 때 그 객체를 타입의 인스턴스라고 한다.</p>\n</blockquote>\n<p>✔️ <strong>데이터 타입</strong>\n‘타입이 없다(Untyped)’는 말은 메모리 안의 데이터를 다룰 수 있는 단 하나의 타입만이 존재한다는 것을 의미한다. 컴퓨터의 데이터를 목적에 따라 분류하기 시작하면서 프로그래밍 언어에 서서히 타입 시스템이 생겨났다. 타입 시스템의 목적은 데이터가 잘못 사용되지 않도록 제약사항을 부과하는 것이다.</p>\n<ol>\n<li>타입은 데이터가 어떻게 사용되느냐에 관한 것이다</li>\n<li>타입에 속한 데이터를 메모리에 어떻게 표현하는지는 외부로부터 철저하게 감춰진다.</li>\n</ol>\n<blockquote>\n<p>데이터 타입은 메모리 안에 저장된 데이터의 종류를 분류하는 데 사용하는 메모리 집합에 관한 메타데이터다. 데이터에 대한 분류는 암시적으로 어떤 종류의 연산이 해당 데이터에 대해 수행될 수 있는지를 결정한다.</p>\n</blockquote>\n<p>✔️ <strong>객체와 타입</strong>\n객체를 타입에 따라 분류하고 그 타입에 이름을 붙이는 것은 프로그램에서 사용할 새로운 데이터 타입을 선언하는 것과 같다.</p>\n<p>그러나 객체는 데이터가 아니다. 객체에서 중요한 것은 행동이며, 이웃 객체와 협력하기 위해 어떤 행동을 할지를 결정하는 것이다.</p>\n<p>객체의 타입은 다음과 같은 특징을 가진다</p>\n<ol>\n<li>어떤 객체가 어떤 타입에 속하는지를 결정하는 것은 객체가 수행하는 행동이다.</li>\n<li>객체의 내부적인 표현은 외부로부터 철저하게 감춰진다.</li>\n</ol>\n<p>✔️ <strong>행동이 우선이다</strong>\n동일한 책임을 수행하는 일련의 객체는 동일한 타입에 속한다. 객체의 타입을 결정하는 것은 객체의 행동뿐이다. 객체가 어떤 데이터를 보유하고 있는지는 타입을 결정하는 데 아무런 영향도 미치지 않는다.</p>\n<p>타입이 데이터가 아니라 행동에 의해 결정된다는 사실은 객체지향 패러다임을 특징 짓는 중요한 몇 가지 원리원칙에 의미를 부여한다.</p>\n<ul>\n<li>같은 타입에 속한 객체는 행동만 동일하다면 서로 다른 데이터를 가질 수 있다. 동일한 행동은 동일한 책임을 의미하며, 동일한 책임은 동일한 메시지 수신을 의미한다. 이처럼 동일한 요청에 대해 서로 다른 방식으로 응답할 수 있는 능력을 <strong>다형성</strong>이라고 한다.</li>\n<li>외부에 데이터를 감춰야 한다. 공용 인터페이스 뒤로 데이터를 캡슐화하는 것은 객체를 행동에 따라 분류하기 위한 기본적인 원칙이다.</li>\n<li>객체가 내부적으로 관리하는 데이터가 아니라 객체가 외부에 제공하는 행동을 먼저 생각해야 한다. 이는 <strong>책임-주도 설계</strong>라고 부르는 객체지향 설계 방법이다.</li>\n</ul>\n<p>객체를 결정하는 것은 행동이다. 데이터는 단지 행동을 따를 뿐이다.</p>\n<hr>\n<h2 id=\"타입의-계층\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%9D%98-%EA%B3%84%EC%B8%B5\" aria-label=\"타입의 계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입의 계층</h2>\n<p>✔️ <strong>트럼프 계층</strong>\n앨리스는 정원사, 병사, 신하 등을 ‘트럼프’가 아닌 ‘트럼프 인간’으로 봤다. 등장인물들의 외양은 트럼프와 유사하지만 행동 자체는 트럼프와 완벽하게 동일하지 않기 때문이다.</p>\n<p>트럼프 인간 타입의 객체는 트럼프 타입의 객체가 할 수 있는 모든 행동(납작 엎드릴 수 있고 뒤집어질 수 있는 것)에 더해 걸어다니는 행동을 더 할 수 있다. 따라서 모든 트럼프 인간은 동시에 트럼프다.</p>\n<p>트럼프 인간은 트럼프보다 좀 더 특화된 행동을 하는 특수한 개념이다. 이 두 개념 사이 관계를 <strong>일반화/특수화</strong> 관계라고 한다.</p>\n<p>✔️ <strong>일반화/특수화 관계</strong>\n객체지향에서 일반화/특수화 관계를 결정하는 것은 객체의 상태를 표현하는 데이터가 아니라 <strong>행동</strong>이다. 두 타입 간에 일반화/특수화 관계가 성립하려면 한 타입이 다른 타입보다 더 특수하게 행동해야 하고 반대로 한 타입은 다른 타입보다 더 일반적으로 행동해야 한다. 특수한 타입이란 일반적인 타입이 가진 모든 행동을 포함하지만 거기에 더해 자신만의 행동을 추가하는 타입을 가리킨다.</p>\n<p>✔️ <strong>슈퍼타입과 서브타입</strong>\n좀 더 일반적인 타입을 슈퍼타입, 좀 더 특수한 타입을 서브타입이라고 한다. 일반적으로 서브타입은 슈퍼타입의 행위와 호환되기 때문에 서브타입은 슈퍼타입을 대체할 수 있어야 한다.</p>\n<p>✔️ <strong>일반화는 추상화를 위한 도구다</strong>\n추상화에서는 중요한 부분을 강조하기 위해 불필요한 세부 사항을 제거시켜 단순하게 만든다. 앨리스가 ‘기껏해야 트럼프에 불과해’라고 생각했을 때 앨리스는 머릿속에서 걸을 수 있는 트럼프 인간의 특수한 능력은 제거하고 종이 조각처럼 쉽게 뒤집어지는 트럼프의 특성에 집중했다.</p>\n<p>객체지향 패러다임을 통해 세상을 바라보는 경우 분류와 일반화/특수화 기법을 동시에 적용하게 된다.</p>\n<hr>\n<h2 id=\"정적-모델\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%EB%AA%A8%EB%8D%B8\" aria-label=\"정적 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 모델</h2>\n<p>✔️ <strong>타입의 목적</strong>\n앨리스의 키는 앨리스가 어떤 음식을 먹거나 어떤 행동을 할 때마다 시시각각 변한다. 하지만 모든 경우 앨리스는 앨리스일 뿐이다. 앨리스 객체의 상태는 변하지만 앨리스를 다른 객체와 구별할 수 있는 식별성은 동일하게 유지된다.</p>\n<p>타입은 시간에 따라 동적으로 변하는 앨리스의 상태를 시간과 무관한 정적인 모습으로 다룰 수 있게 해준다.</p>\n<p>✔️ <strong>그래서 결국 타입은 추상화다.</strong>\n어떤 시점에 앨리스에 관해 생각할 때 불필요한 시간이라는 요소와 상태 변화라는 요소를 제거하고 철저하게 정적인 관점에서 앨리스의 모습을 묘사할 수 있다.</p>\n<p>타입을 이용하면 객체의 동적인 특성을 추상화할 수 있다. 결국 타입은 시간에 따른 객체의 상태 변경이라는 복잡성을 단순화할 수 있는 효과적인 방법이다.</p>\n<p>✔️ <strong>동적 모델과 정적 모델</strong>\n객체를 생각할 때 우리는 두 가지 모델을 동시에 고려한다.</p>\n<ol>\n<li>객체가 특정 시점에 구체적으로 어떤 상태를 가지는지 → <strong>동적 모델(dynamic model)</strong></li>\n<li>객체가 가질 수 있는 모든 상태와 모든 행동을 시간에 독립적으로 표현하는 것 <strong>→ 정적 모델(static model)</strong></li>\n</ol>\n<p>객체지향 애플리케이션을 설계하고 구현하기 위해서는 객체 관점의 동적 모델과 객체를 추상화한 타입 관점의 정적 모델을 적절히 혼용해야 한다.</p>\n<p>✔️ <strong>클래스</strong>\n타입을 구현하는 가장 보편적인 방법은 클래스를 이용하는 것이다.</p>\n<blockquote>\n<p><strong>👩‍🏫 클래스 != 타입</strong>\n클래스는 타입을 구현할 수 있는 여러 구현 메커니즘 중 하나다.</p>\n</blockquote>\n<p>결국 객체지향에서 중요한 것은 동적으로 변하는 객체의 ‘상태’와 상태를 변경하는 ‘행위’다.</p>\n<hr>\n<h2 id=\"-생각해보기\" style=\"position:relative;\"><a href=\"#-%EC%83%9D%EA%B0%81%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\" 생각해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 생각해보기</h2>\n<p>도입부에 지하철 노선도의 예시를 들면서, 정보 전달의 목적을 제대로 파악하는 것의 중요성을 느꼈다. 때로는 사실을 있는 그대로 구체적으로 표현하는 것이 필요하겠지만, 지하철 노선도처럼 복잡함을 제거하고 추상화한 형태로 정보를 제공하는 것이 더욱 효과적일 수도 있을 것이다.</p>\n<p>이번 장에서는 객체지향을 추상화의 관점에서 다루고 있다. 대상들의 공통점과 차이점을 바탕으로 객체를 분류하고 ‘심볼’, ‘내연’과 ‘외연’이라는 세 가지 관점으로 객체의 분류 장치를 설명하고 있다.</p>\n<p>객체를 타입 시스템에 연관지어서 설명한 것도 인상깊었다. 특히 타입스크립트를 사용하면서 ‘슈퍼타입’과 ‘서브타입’이 수학에서 다루는 일반적인 집합의 포함 관계와 달라 헷갈렸는데, 일반화/특수화의 관점에서 타입의 포함 관계를 생각해보니 이해하기가 편했다. 객체의 타입을 결정하는 것은 객체의 ‘데이터’가 아닌 ‘행동’이라는 것도 항상 염두에 두어야할 것이다.</p>","timeToRead":6,"frontmatter":{"title":"객체지향의 사실과 오해 - 3장","date":"February 18, 2022","description":null,"tags":["oop-true-and-false"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/oop-true-or-false/oop-true-and-false-3/","previous":{"fields":{"slug":"/weekly/2022-2-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"February 19, 2022","description":"weekly-i-learned","title":"2월 3주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/refactoring/refactoring-3/","langKey":"en","directoryName":"refactoring"},"frontmatter":{"date":"February 17, 2022","description":null,"title":"리팩터링 3장","tags":["refactoring"]}},"previousInSameTag":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-4/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"February 27, 2022","description":null,"title":"객체지향의 사실과 오해 - 4장","tags":["oop-true-and-false"]}},"nextInSameTag":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-2/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"February 12, 2022","description":null,"title":"객체지향의 사실과 오해 - 2장","tags":["oop-true-and-false"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}