{"componentChunkName":"component---src-templates-blog-post-js","path":"/refactoring/refactoring-6-2/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"2731c4fa-706d-5f01-b1e1-e76c841b390c","excerpt":"기본적인 리팩터링 - 2 6.…","html":"<p>기본적인 리팩터링 - 2</p>\n<!-- more -->\n<hr>\n<h2 id=\"67-변수-이름-바꾸기\" style=\"position:relative;\"><a href=\"#67-%EB%B3%80%EC%88%98-%EC%9D%B4%EB%A6%84-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"67 변수 이름 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.7 변수 이름 바꾸기</h2>\n<p>명확한 프로그래밍의 핵심은 이름짓기다. 간단한 변수의 경우 대체로 파악이 쉽지만, 함수 호출 한 번으로 끝나지 않고 값이 영속되는 필드라면 신중하게 이름을 지어야 한다.</p>\n<h3 id=\"절차\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8\" aria-label=\"절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>폭넓게 쓰이는 변수라면 변수 캡슐화하기를 고려한다.</li>\n<li>이름을 바꿀 변수를 참조하는 곳을 모두 찾아서, 하나씩 변경한다.</li>\n<li>테스트한다.</li>\n</ol>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">let</span> tpHd <span class=\"token operator\">=</span> <span class=\"token string\">\"untitled\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 변수를 읽기만 하는 경우</span>\nresult <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h1></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>tpHd<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h1></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 값을 수정하는 경우</span>\ntpHd <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"articleTitle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// after: getter와 setter를 통해 변수 캡슐화하기</span>\nresult <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h1></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h1></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"articleTitle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> _title <span class=\"token operator\">=</span> <span class=\"token string\">\"untitled\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> _title<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  _title <span class=\"token operator\">=</span> arg<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2 id=\"68-매개변수-객체-만들기\" style=\"position:relative;\"><a href=\"#68-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"68 매개변수 객체 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.8 매개변수 객체 만들기</h2>\n<p>데이터 뭉치를 데이터 구조로 묶으면 데이터 사이의 관계가 명확해진다. 나아가 함수가 이 데이터 구조를 받게 하면 매개변수 수가 줄어든다</p>\n<h3 id=\"절차-1\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-1\" aria-label=\"절차 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>적당한 데이터 구조가 아직 마련되어 있지 않다면 새로 만든다.</li>\n<li>테스트한다.</li>\n<li>함수 선언 바꾸기로 새 데이터 구조를 매개변수로 추가한다.</li>\n<li>테스트한다.</li>\n<li>함수 호출 시 새로운 데이터 구조 인스턴스를 넘기도록 수정한다. 하나씩 수정할 때마다 테스트한다.</li>\n<li>기존 매개변수를 사용하던 코드를 새 데이터 구조의 원소를 사용하도록 바꾼다.</li>\n<li>다 바꿨다면 기존 매개변수를 제거하고 테스트한다.</li>\n</ol>\n<h3 id=\"예시-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// before</span>\n<span class=\"token comment\">// 데이터</span>\n<span class=\"token keyword\">const</span> station <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ZB1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">readings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temp</span><span class=\"token operator\">:</span> <span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2016-11-19 09:10\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temp</span><span class=\"token operator\">:</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2016-11-19 09:20\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temp</span><span class=\"token operator\">:</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2016-11-19 09:30\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temp</span><span class=\"token operator\">:</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2016-11-19 09:40\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temp</span><span class=\"token operator\">:</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2016-11-19 09:50\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">readingsOutsideRange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">station<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> station<span class=\"token punctuation\">.</span>readings<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span>temp <span class=\"token operator\">&lt;</span> min <span class=\"token operator\">||</span> r<span class=\"token punctuation\">.</span>temp <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출문</span>\nalerts <span class=\"token operator\">=</span> <span class=\"token function\">readingsOutsideRange</span><span class=\"token punctuation\">(</span>\n  station<span class=\"token punctuation\">,</span>\n  operatingPlan<span class=\"token punctuation\">.</span>temperatureFloor<span class=\"token punctuation\">,</span>\n  operatingPlan<span class=\"token punctuation\">.</span>temperatureCeiling\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NumberRange</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span> max</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> min<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> max <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_data<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">readingsOutsideRange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">station<span class=\"token punctuation\">,</span> range</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> station<span class=\"token punctuation\">.</span>readings<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span>temp <span class=\"token operator\">&lt;</span> range<span class=\"token punctuation\">.</span>min <span class=\"token operator\">||</span> r<span class=\"token punctuation\">.</span>temp <span class=\"token operator\">></span> range<span class=\"token punctuation\">.</span>max\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> range <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NumberRange</span><span class=\"token punctuation\">(</span>\n  operatingPlan<span class=\"token punctuation\">.</span>temperatureFloor<span class=\"token punctuation\">,</span>\n  operatingPlan<span class=\"token punctuation\">.</span>temperatureCeiling\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nalerts <span class=\"token operator\">=</span> <span class=\"token function\">readingsOutsideRange</span><span class=\"token punctuation\">(</span>station<span class=\"token punctuation\">,</span> range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"69-여러-함수를-클래스로-묶기\" style=\"position:relative;\"><a href=\"#69-%EC%97%AC%EB%9F%AC-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EB%AC%B6%EA%B8%B0\" aria-label=\"69 여러 함수를 클래스로 묶기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.9 여러 함수를 클래스로 묶기</h2>\n<p>클래스는 데이터와 함수를 하나의 공유 환경으로 묶은 후, 다른 프로그램 요소와 어우러질 수 있도록 그중 일부를 외부에 제공한다. 공통 데이터를 중심으로 긴밀하게 엮여 작동하는 함수 무리는 클래스 하나로 묶을 수 있다. 여러 함수를 클래스로 묶으면 클라이언트가 객체의 핵심 데이터를 변경할 수 있고, 파생 객체들을 일관되게 관리할 수 있다.</p>\n<h3 id=\"절차-2\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-2\" aria-label=\"절차 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>함수들이 공유하는 공통 데이터 레코드를 캡슐화한다.</li>\n<li>공통 레코드를 사용하는 함수 각각을 새 클래스로 옮긴다.</li>\n<li>데이터를 조작하는 로직들은 함수로 추출해서 새 클래스로 옮긴다.</li>\n</ol>\n<h3 id=\"예시-2\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-2\" aria-label=\"예시 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// before</span>\n<span class=\"token comment\">// 클라이언트 1</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> baseCharge <span class=\"token operator\">=</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aReading<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 클라이언트 2</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> baseCharge <span class=\"token operator\">=</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aReading<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> taxableCharge <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> base <span class=\"token operator\">-</span> <span class=\"token function\">taxThreshold</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Reading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>customer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_quantity <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_month <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_year <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">quantity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_quantity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">month</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_month<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">year</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_year<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">taxableCharge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseCharge <span class=\"token operator\">-</span> <span class=\"token function\">taxThreshold</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 3</span>\n<span class=\"token keyword\">const</span> rawReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reading</span><span class=\"token punctuation\">(</span>rawReading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> basicChargeAmount <span class=\"token operator\">=</span> aReading<span class=\"token punctuation\">.</span>baseCharge<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> taxableCharge <span class=\"token operator\">=</span> aReading<span class=\"token punctuation\">.</span>taxableCharge<span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"610-여러-함수를-변환-함수로-묶기\" style=\"position:relative;\"><a href=\"#610-%EC%97%AC%EB%9F%AC-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%B3%80%ED%99%98-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%AC%B6%EA%B8%B0\" aria-label=\"610 여러 함수를 변환 함수로 묶기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.10 여러 함수를 변환 함수로 묶기</h2>\n<p>데이터를 입력받아서 여러 가지 정보를 도출하는 작업들을 한데로 모아두면 검색과 갱신을 일관된 장소에서 할 수 있고 로직 중복도 막을 수 있다. 변환 함수를 사용하면 원본 데이터를 입력받아서 필요한 정보를 모두 도출한 뒤, 각각을 출력 데이터의 필드에 넣어 반환한다.</p>\n<blockquote>\n<p>💡 원본 데이터가 코드 안에서 갱신될 때는 클래스로 묶는 것이 좋다.</p>\n</blockquote>\n<h3 id=\"절차-3\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-3\" aria-label=\"절차 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>변환할 레코드를 입력받아서 값을 그대로 반환하는 변환 함수를 만든다.</li>\n<li>묶을 함수 중 함수 하나를 골라서 본문 코드를 변환 함수로 옮기고, 처리 결과를 레코드에 새 필드로 기록한다. 그런 다음 클라이언트 코드가 이 필드를 사용하도록 수정한다.</li>\n<li>테스트한다.</li>\n<li>나머지 관련 함수도 위 과정에 따라 처리한다.</li>\n</ol>\n<h3 id=\"예시-3\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-3\" aria-label=\"예시 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// before</span>\n<span class=\"token comment\">// 클라이언트 1</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> baseCharge <span class=\"token operator\">=</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aReading<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 클라이언트 2</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> base <span class=\"token operator\">=</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aReading<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> taxableCharge <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> base <span class=\"token operator\">-</span> <span class=\"token function\">taxThreshold</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 클라이언트 3</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> basicChargeAmount <span class=\"token operator\">=</span> <span class=\"token function\">calculateBaseCharge</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateBaseCharge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aReading</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">baseRate</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> aReading<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> aReading<span class=\"token punctuation\">.</span>quantity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// after</span>\n<span class=\"token comment\">// 클라이언트 1, 3</span>\n<span class=\"token keyword\">const</span> rawReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 미가공 측정값</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">enrichReading</span><span class=\"token punctuation\">(</span>rawReading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> basicChargeAmount <span class=\"token operator\">=</span> aReading<span class=\"token punctuation\">.</span>baseCharge<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 클라이언트 2</span>\n<span class=\"token keyword\">const</span> rawReading <span class=\"token operator\">=</span> <span class=\"token function\">acquireReading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 미가공 측정값</span>\n<span class=\"token keyword\">const</span> aReading <span class=\"token operator\">=</span> <span class=\"token function\">enrichReading</span><span class=\"token punctuation\">(</span>rawReading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> taxableCharge <span class=\"token operator\">=</span> aReading<span class=\"token punctuation\">.</span>taxableCharge<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">enrichReading</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">original</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  result<span class=\"token punctuation\">.</span>baseCharge <span class=\"token operator\">=</span> <span class=\"token function\">calculateBaseCharge</span><span class=\"token punctuation\">(</span>aReading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  result<span class=\"token punctuation\">.</span>taxableCharge <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    result<span class=\"token punctuation\">.</span>baseCharge <span class=\"token operator\">-</span> <span class=\"token function\">taxThreshold</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>👩‍🏫 주의할 점</strong>\n<code class=\"language-text\">enrichReading()</code> 처럼 정보를 추가해 반환할 때 원본 측정값 레코드는 변경하지 않아야 한다.</p>\n<hr>\n<h2 id=\"611-단계-쪼개기\" style=\"position:relative;\"><a href=\"#611-%EB%8B%A8%EA%B3%84-%EC%AA%BC%EA%B0%9C%EA%B8%B0\" aria-label=\"611 단계 쪼개기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.11 단계 쪼개기</h2>\n<p>서로 다른 두 대상을 한꺼번에 다루는 코드를 발견하면 각각을 별개 모듈로 나눌 수 있다. 이렇게 분리하는 가장 간편한 방법 하나는 동작을 연이은 두 단계로 쪼개는 것이다.</p>\n<p>가장 대표적인 예는 컴파일러다. 컴파일 작업은 여러 단계가 순차적으로 연결된 형태로 분리되어 있다. 각 단계는 자신만의 문제에 집중하기 때문에 나머지 단계에 관해서는 자세히 몰라도 이해할 수 있다.</p>\n<h3 id=\"절차-4\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-4\" aria-label=\"절차 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>두 번째 단계에 해당하는 코드를 독립 함수로 추출한다.</li>\n<li>테스트한다.</li>\n<li>중간 데이터 구조를 만들어서 앞에서 추출한 함수의 인수로 추가한다.</li>\n<li>테스트한다.</li>\n<li>추출한 두 번째 단계 함수의 매개변수를 하나씩 검토한다. 그중 첫 번째 단계에서 사용되는 것은 중간 데이터 구조로 옮긴다. 하나씩 옮길 때마다 테스트한다.</li>\n<li>첫 번째 단계 코드를 함수로 추출하면서 중간 데이터 구조를 반환하도록 만든다.</li>\n</ol>\n<h3 id=\"예시-4\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-4\" aria-label=\"예시 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">priceOrder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> shippingMethod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> basePrice <span class=\"token operator\">=</span> product<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">*</span> quantity<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> discount <span class=\"token operator\">=</span>\n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>quantity <span class=\"token operator\">-</span> product<span class=\"token punctuation\">.</span>discountThreshold<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>\n    product<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">*</span>\n    product<span class=\"token punctuation\">.</span>discountRate<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> shippingPerCase <span class=\"token operator\">=</span>\n    basePrice <span class=\"token operator\">></span> shippingMethod<span class=\"token punctuation\">.</span>discountThreshold\n      <span class=\"token operator\">?</span> shippingMethod<span class=\"token punctuation\">.</span>discountedFee\n      <span class=\"token operator\">:</span> shippingMethod<span class=\"token punctuation\">.</span>feePerCase<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> shippingCost <span class=\"token operator\">=</span> quantity <span class=\"token operator\">*</span> shippingPerCase<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> basePrice <span class=\"token operator\">-</span> discount <span class=\"token operator\">+</span> shippingCost<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> price<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">priceOrder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> shippingMethod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> priceData <span class=\"token operator\">=</span> <span class=\"token function\">calculatePricingData</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">applyShipping</span><span class=\"token punctuation\">(</span>priceData<span class=\"token punctuation\">,</span> shippingMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculatePricingData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> quantity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> basePrice <span class=\"token operator\">=</span> product<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">*</span> quantity<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> discount <span class=\"token operator\">=</span>\n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>quantity <span class=\"token operator\">-</span> product<span class=\"token punctuation\">.</span>discountThreshold<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>\n    product<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">*</span>\n    product<span class=\"token punctuation\">.</span>discountRate<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> basePrice<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> discount <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">applyShipping</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">priceData<span class=\"token punctuation\">,</span> shippingMethod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shippingPerCase <span class=\"token operator\">=</span>\n    priceData<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">></span> shippingMethod<span class=\"token punctuation\">.</span>discountThreshold\n      <span class=\"token operator\">?</span> shippingMethod<span class=\"token punctuation\">.</span>discountedFee\n      <span class=\"token operator\">:</span> shippingMethod<span class=\"token punctuation\">.</span>feePerCase<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> shippingCost <span class=\"token operator\">=</span> priceData<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> shippingPerCase<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> priceData<span class=\"token punctuation\">.</span>basePrice <span class=\"token operator\">-</span> priceData<span class=\"token punctuation\">.</span>discount <span class=\"token operator\">+</span> shippingCost<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>👩‍🏫 험블 객체 패턴(Humble Object Pattern)</strong>\n명령줄 호출과 표준 출력에 쓰는 느리고 불편한 작업과 자주 테스트해야 할 복잡한 동작을 분리함으로써 테스트를 더 쉽게 수행하게 만든다</p>","timeToRead":6,"frontmatter":{"title":"리팩터링 6장 - 2","date":"March 18, 2022","description":null,"tags":["refactoring"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/refactoring/refactoring-6-2/","previous":{"fields":{"slug":"/weekly/2022-3-week-3/","langKey":"en","directoryName":"weekly"},"frontmatter":{"date":"March 19, 2022","description":"weekly-i-learned","title":"3월 3주차 기록","tags":["weekly"]}},"next":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-6/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"March 12, 2022","description":null,"title":"객체지향의 사실과 오해 - 6장(1)","tags":["oop-true-and-false"]}},"previousInSameTag":{"fields":{"slug":"/refactoring/refactoring-7/","langKey":"en","directoryName":"refactoring"},"frontmatter":{"date":"March 24, 2022","description":null,"title":"리팩터링 7장","tags":["refactoring"]}},"nextInSameTag":{"fields":{"slug":"/refactoring/refactoring-6-1/","langKey":"en","directoryName":"refactoring"},"frontmatter":{"date":"March 10, 2022","description":null,"title":"리팩터링 6장 - 1","tags":["refactoring"]}},"translationsLink":[]}},"staticQueryHashes":["1522010811","1615650028","2894998521","3765107650","683610688"]}