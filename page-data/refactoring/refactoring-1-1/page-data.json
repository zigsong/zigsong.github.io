{"componentChunkName":"component---src-templates-blog-post-js","path":"/refactoring/refactoring-1-1/","result":{"data":{"site":{"siteMetadata":{"title":"ziglog","author":"zigsong","lang":"en"}},"markdownRemark":{"id":"dbc4c64b-b2c3-5697-ac55-c9c896ac1a94","excerpt":"리팩터링: 첫 번째 예시 1.1 자, 시작해보자! 1.2 예시 프로그램을 본 소감 프로그램이 새로운 기능을 추가하기에 편한 구조가 아니라면, 먼저 기능을 추가하기 쉬운 형태로 리팩터링하고 나서 원하는 기능을 추가한다. 1.…","html":"<p>리팩터링: 첫 번째 예시</p>\n<!-- more -->\n<hr>\n<h2 id=\"11-자-시작해보자\" style=\"position:relative;\"><a href=\"#11-%EC%9E%90-%EC%8B%9C%EC%9E%91%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"11 자 시작해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 자, 시작해보자!</h2>\n<h2 id=\"12-예시-프로그램을-본-소감\" style=\"position:relative;\"><a href=\"#12-%EC%98%88%EC%8B%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%B3%B8-%EC%86%8C%EA%B0%90\" aria-label=\"12 예시 프로그램을 본 소감 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 예시 프로그램을 본 소감</h2>\n<p>프로그램이 새로운 기능을 추가하기에 편한 구조가 아니라면, 먼저 기능을 추가하기 쉬운 형태로 리팩터링하고 나서 원하는 기능을 추가한다.</p>\n<hr>\n<h2 id=\"13-리팩터링의-첫-단계\" style=\"position:relative;\"><a href=\"#13-%EB%A6%AC%ED%8C%A9%ED%84%B0%EB%A7%81%EC%9D%98-%EC%B2%AB-%EB%8B%A8%EA%B3%84\" aria-label=\"13 리팩터링의 첫 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3 리팩터링의 첫 단계</h2>\n<ul>\n<li>리팩터링할 코드 영역을 꼼꼼하게 검사해줄 테스트 코드 마련하기</li>\n<li>리팩터링하기 전에 제대로 된 테스트부터 마련한다. 테스트는 반드시 자가진단하도록 만든다.</li>\n</ul>\n<hr>\n<h2 id=\"14-statement-함수-쪼개기\" style=\"position:relative;\"><a href=\"#14-statement-%ED%95%A8%EC%88%98-%EC%AA%BC%EA%B0%9C%EA%B8%B0\" aria-label=\"14 statement 함수 쪼개기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4 <code class=\"language-text\">statement()</code> 함수 쪼개기</h2>\n<ul>\n<li>\n<p>테스트</p>\n<ul>\n<li>간단한 수정도 리팩터링 후에는 항상 <strong>테스트</strong>하는 습관을 들이자</li>\n<li>조금씩 변경하고 매번 테스트하는 것은 리팩터링 절차의 핵심이다.</li>\n</ul>\n</li>\n<li>\n<p>함수 추출하기</p>\n<ul>\n<li>💡 자바스크립트에서는 <strong>중첩 함수</strong>를 사용하면 바깥 함수의 변수를 새로 추출한 함수에 매개변수로 전달할 필요가 없다.</li>\n<li>추출된 함수 코드에서 보다 명확하게 표현할 수 있는 것들을 찾는다. (ex. 변수 이름)</li>\n<li>추출된 함수의 반환 값은 <code class=\"language-text\">result</code> 등의 네이밍으로 통일해줄 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>임시 변수 제거하기</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 😵 bad</span>\n<span class=\"token keyword\">const</span> play <span class=\"token operator\">=</span> plays<span class=\"token punctuation\">[</span>perf<span class=\"token punctuation\">.</span>playID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 😗 soso</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aPerformance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> plays<span class=\"token punctuation\">[</span>aPerformance<span class=\"token punctuation\">.</span>playID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> play <span class=\"token operator\">=</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 😄 good (변수 인라인하기)</span>\n<span class=\"token keyword\">let</span> thisAmount <span class=\"token operator\">=</span> <span class=\"token function\">amountFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">,</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>지역 변수를 제거하면 유효범위를 신경 썽 할 대상이 줄어들어 추출 작업이 쉬워진다</li>\n</ul>\n</li>\n<li>\n<p><strong>적립 포인트 계산 코드 추출하기</strong></p>\n</li>\n<li>\n<p>format 변수 제거하기</p>\n<ul>\n<li>함수 선언 바꾸기 - 함수의 핵심 기능을 살려주는 네이밍으로 바꿔준다</li>\n</ul>\n</li>\n<li>\n<p>volumeCredits 변수 제거하기</p>\n<ul>\n<li>반복문 쪼개기\n<ul>\n<li>로직에 따라 별도의 for문으로 분리한다</li>\n<li>반복문을 쪼개서 발생하는 중복은 성능에 미치는 영향이 미미하다</li>\n<li>💡 리팩터링으로 인한 성능 문제는 <strong>“특별한 경우가 아니라면 일단 무시하자”</strong></li>\n</ul>\n</li>\n<li>문장 슬라이드하기\n<ul>\n<li><code class=\"language-text\">volumeCredits</code> 값 갱신과 관련한 문장들을 한데 모은다</li>\n<li>임시 변수를 질의 함수로 바꾸기가 수월해진다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"15-중간-점검-난무하는-중첩-함수\" style=\"position:relative;\"><a href=\"#15-%EC%A4%91%EA%B0%84-%EC%A0%90%EA%B2%80-%EB%82%9C%EB%AC%B4%ED%95%98%EB%8A%94-%EC%A4%91%EC%B2%A9-%ED%95%A8%EC%88%98\" aria-label=\"15 중간 점검 난무하는 중첩 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.5 중간 점검: 난무하는 중첩 함수</h2>","timeToRead":2,"frontmatter":{"title":"리팩터링 1장 - 1","date":"January 29, 2022","description":null,"tags":["refactoring"],"disqus":null},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/refactoring/refactoring-1-1/","previous":{"fields":{"slug":"/etc/git-commands-everything/","langKey":"en","directoryName":"etc"},"frontmatter":{"date":"January 31, 2022","description":null,"title":"git 명령어 부셔보기","tags":["git"]}},"next":{"fields":{"slug":"/oop-true-or-false/oop-true-and-false-1/","langKey":"en","directoryName":"oop-true-or-false"},"frontmatter":{"date":"January 29, 2022","description":null,"title":"객체지향의 사실과 오해 - 1장","tags":["oop-true-and-false"]}},"previousInSameTag":{"fields":{"slug":"/refactoring/refactoring-1-2/","langKey":"en","directoryName":"refactoring"},"frontmatter":{"date":"February 03, 2022","description":null,"title":"리팩터링 1장 - 2","tags":["refactoring"]}},"nextInSameTag":null,"translationsLink":[]}},"staticQueryHashes":["1522010811","2466007692","2894998521","3765107650","683610688"]}